Operator: aten.add.Tensor
cnt: 1, '((T([256, 1], th.float16), 1), {})'
cnt: 1, '((T([256, 1], th.float16), -10.0), {})'
Operator: aten.addmm.default
cnt: 1, '((T([1024], th.float16), T([256, 3], th.float16), T([3, 1024], th.float16, (1, 3))), {})'
cnt: 1, '((T([1024], th.float16), T([256, 1024], th.float16), T([1024, 1024], th.float16, (1, 1024))), {})'
cnt: 1, '((T([2], th.float16), T([256, 1024], th.float16), T([1024, 2], th.float16, (1, 1024))), {})'
Operator: aten.cat.default
cnt: 1, '(([T([256, 1], th.float16), T([256, 1], th.float16)], 1), {})'
Operator: aten.clone.default
cnt: 1, '((T([256, 3], th.float16),), {})'
Operator: aten.copy_.default
cnt: 1, '((T([256, 3], th.float16), T([256, 3], th.float16)), {})'
Operator: aten.exp.default
cnt: 1, '((T([256, 1], th.float16),), {})'
Operator: aten.mm.default
cnt: 1, '((T([256, 2], th.float16), T([2, 1024], th.float16)), {})'
cnt: 1, '((T([2, 256], th.float16, (1, 2)), T([256, 1024], th.float16)), {})'
cnt: 1, '((T([256, 1024], th.float16), T([1024, 1024], th.float16)), {})'
cnt: 1, '((T([1024, 256], th.float16, (1, 1024)), T([256, 1024], th.float16)), {})'
cnt: 1, '((T([1024, 256], th.float16, (1, 1024)), T([256, 3], th.float16)), {})'
Operator: aten.mul.Tensor
cnt: 1, '((T([256, 1], th.float16), 6.0), {})'
Operator: aten.relu.default
cnt: 2, '((T([256, 1024], th.float16),), {})'
Operator: aten.split.Tensor
cnt: 1, '((T([256, 2], th.float16), 1, 1), {})'
Operator: aten.sum.SymInt
cnt: 1, '((T([256, 2], th.float16), [0], True), {})'
cnt: 2, '((T([256, 1024], th.float16), [0], True), {})'
Operator: aten.sum.default
cnt: 1, '((T([256, 1], th.float16),), {})'
Operator: aten.tanh.default
cnt: 2, '((T([256, 1], th.float16, (2, 1)),), {})'
Operator: aten.tanh_backward.default
cnt: 1, '((T([256, 1], th.float16, (0, 0)), T([256, 1], th.float16)), {})'
Operator: aten.threshold_backward.default
cnt: 2, '((T([256, 1024], th.float16), T([256, 1024], th.float16), 0), {})'
