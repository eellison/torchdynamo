Operator: aten._index_put_impl_.default
cnt: 12, '((T([0], th.float16), [T([0], th.int64)], T([0], th.float16), True, True), {})'
cnt: 12, '((T([0, 4], th.float16), [T([0], th.int64)], T([0, 4], th.float16), True, True), {})'
Operator: aten._softmax.default
cnt: 1, '((T([0, 91], th.float16), -1, False), {})'
Operator: aten._softmax_backward_data.default
cnt: 1, '((T([0, 91], th.float16), T([0, 91], th.float16), -1, th.float16), {})'
Operator: aten._to_copy.default
cnt: 8, "((T([], th.int64),), {'dtype': th.float32})"
cnt: 5, '((T([3, 4], th.float32),), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16})'
cnt: 8, "((T([0, 4], th.float16),), {'dtype': th.float32})"
cnt: 2, "((T([0], th.float32),), {'dtype': th.int64})"
cnt: 4, "((T([0, 4], th.float16),), {'dtype': th.int64})"
cnt: 8, "((T([], th.float32),), {'dtype': th.float16})"
Operator: aten._unsafe_view.default
cnt: 2, '((T([296, 304], th.int32), [89984]), {})'
cnt: 2, '((T([148, 152], th.int32), [22496]), {})'
cnt: 2, '((T([74, 76], th.int32), [5624]), {})'
cnt: 2, '((T([37, 38], th.int32), [1406]), {})'
cnt: 2, '((T([19, 19], th.int32), [361]), {})'
cnt: 1, '((T([4, 296, 304, 3, 1], th.float16), [4, 269952, 1]), {})'
cnt: 1, '((T([4, 296, 304, 3, 4], th.float16), [4, 269952, 4]), {})'
cnt: 1, '((T([4, 148, 152, 3, 1], th.float16), [4, 67488, 1]), {})'
cnt: 1, '((T([4, 148, 152, 3, 4], th.float16), [4, 67488, 4]), {})'
cnt: 1, '((T([4, 74, 76, 3, 1], th.float16), [4, 16872, 1]), {})'
cnt: 1, '((T([4, 74, 76, 3, 4], th.float16), [4, 16872, 4]), {})'
cnt: 1, '((T([4, 37, 38, 3, 1], th.float16), [4, 4218, 1]), {})'
cnt: 1, '((T([4, 37, 38, 3, 4], th.float16), [4, 4218, 4]), {})'
cnt: 1, '((T([4, 19, 19, 3, 1], th.float16), [4, 1083, 1]), {})'
cnt: 1, '((T([4, 19, 19, 3, 4], th.float16), [4, 1083, 4]), {})'
Operator: aten.add.Tensor
cnt: 7, '((T([1, 64, 1, 1], th.float16), 0.0), {})'
cnt: 1, '((T([4, 64, 592, 608], th.float16), T([1, 64, 1, 1], th.float16)), {})'
cnt: 6, '((T([4, 64, 296, 304], th.float16), T([1, 64, 1, 1], th.float16)), {})'
cnt: 16, '((T([1, 256, 1, 1], th.float16), 0.0), {})'
cnt: 4, '((T([4, 256, 296, 304], th.float16), T([1, 256, 1, 1], th.float16)), {})'
cnt: 8, '((T([1, 128, 1, 1], th.float16), 0.0), {})'
cnt: 1, '((T([4, 128, 296, 304], th.float16), T([1, 128, 1, 1], th.float16)), {})'
cnt: 7, '((T([4, 128, 148, 152], th.float16), T([1, 128, 1, 1], th.float16)), {})'
cnt: 11, '((T([1, 512, 1, 1], th.float16), 0.0), {})'
cnt: 5, '((T([4, 512, 148, 152], th.float16), T([1, 512, 1, 1], th.float16)), {})'
cnt: 1, '((T([4, 256, 148, 152], th.float16), T([1, 256, 1, 1], th.float16)), {})'
cnt: 11, '((T([4, 256, 74, 76], th.float16), T([1, 256, 1, 1], th.float16)), {})'
cnt: 7, '((T([1, 1024, 1, 1], th.float16), 0.0), {})'
cnt: 7, '((T([4, 1024, 74, 76], th.float16), T([1, 1024, 1, 1], th.float16)), {})'
cnt: 1, '((T([4, 512, 74, 76], th.float16), T([1, 512, 1, 1], th.float16)), {})'
cnt: 5, '((T([4, 512, 37, 38], th.float16), T([1, 512, 1, 1], th.float16)), {})'
cnt: 4, '((T([1, 2048, 1, 1], th.float16), 0.0), {})'
cnt: 4, '((T([4, 2048, 37, 38], th.float16), T([1, 2048, 1, 1], th.float16)), {})'
cnt: 2, '((T([4, 256, 74, 76], th.float16), T([4, 256, 74, 76], th.float16)), {})'
cnt: 2, '((T([4, 256, 148, 152], th.float16), T([4, 256, 148, 152], th.float16)), {})'
cnt: 1, '((T([4, 256, 296, 304], th.float16), T([4, 256, 296, 304], th.float16)), {})'
cnt: 1, '((T([89984, 1, 4], th.int32), T([1, 3, 4], th.float16)), {})'
cnt: 1, '((T([22496, 1, 4], th.int32), T([1, 3, 4], th.float16)), {})'
cnt: 1, '((T([5624, 1, 4], th.int32), T([1, 3, 4], th.float16)), {})'
cnt: 1, '((T([1406, 1, 4], th.int32), T([1, 3, 4], th.float16)), {})'
cnt: 1, '((T([361, 1, 4], th.int32), T([1, 3, 4], th.float16)), {})'
cnt: 2, '((T([1438452], th.float16, (4,)), T([1438452], th.float16)), {})'
cnt: 4, '((T([1438452, 1], th.float16), T([1438452, 1], th.float16)), {})'
cnt: 1, '((T([4, 1000], th.int64), 0), {})'
cnt: 1, '((T([4, 1000], th.int64), 269952), {})'
cnt: 1, '((T([4, 1000], th.int64), 337440), {})'
cnt: 1, '((T([4, 1000], th.int64), 354312), {})'
cnt: 1, '((T([4, 1000], th.int64), 358530), {})'
cnt: 2, '((T([0], th.float32), 4), {})'
cnt: 2, '((T([0], th.float32), T([], th.float32)), {})'
cnt: 18, '((T([0], th.float16), T([0], th.float16)), {})'
cnt: 2, '((T([0, 91], th.float16), T([0, 1], th.float16)), {})'
cnt: 6, '((T([0, 91], th.float16), T([0, 91], th.float16)), {})'
cnt: 4, '((T([], th.float16), 0), {})'
cnt: 4, '((T([], th.float16), T([], th.float32)), {})'
cnt: 8, '((T([], th.float32), T([], th.float16)), {})'
cnt: 1, '((T([], th.float32), 0), {})'
cnt: 3, '((T([], th.float32), T([], th.float32)), {})'
cnt: 7, '((T([0, 364], th.float16), T([0, 364], th.float16)), {})'
cnt: 1, '((T([0, 1024], th.float16), T([0, 1024], th.float16)), {})'
cnt: 1, '((T([4, 256, 37, 38], th.float16), T([4, 256, 37, 38], th.float16)), {})'
cnt: 2, '((T([4, 2048, 37, 38], th.float16), T([4, 2048, 37, 38], th.float16)), {})'
cnt: 7, '((T([4, 1024, 74, 76], th.float16), T([4, 1024, 74, 76], th.float16)), {})'
cnt: 5, '((T([4, 512, 148, 152], th.float16), T([4, 512, 148, 152], th.float16)), {})'
Operator: aten.add_.Tensor
cnt: 3, '((T([4, 256, 296, 304], th.float16), T([4, 256, 296, 304], th.float16)), {})'
cnt: 4, '((T([4, 512, 148, 152], th.float16), T([4, 512, 148, 152], th.float16)), {})'
cnt: 6, '((T([4, 1024, 74, 76], th.float16), T([4, 1024, 74, 76], th.float16)), {})'
cnt: 3, '((T([4, 2048, 37, 38], th.float16), T([4, 2048, 37, 38], th.float16)), {})'
Operator: aten.addmm.default
cnt: 1, '((T([1024], th.float16), T([0, 12544], th.float16), T([12544, 1024], th.float16, (1, 12544))), {})'
cnt: 1, '((T([1024], th.float16), T([0, 1024], th.float16), T([1024, 1024], th.float16, (1, 1024))), {})'
cnt: 1, '((T([91], th.float16), T([0, 1024], th.float16), T([1024, 91], th.float16, (1, 1024))), {})'
cnt: 1, '((T([364], th.float16), T([0, 1024], th.float16), T([1024, 364], th.float16, (1, 1024))), {})'
Operator: aten.bitwise_and.Tensor
cnt: 4, '((T([5000], th.bool), T([5000], th.bool)), {})'
cnt: 4, '((T([0], th.bool), T([0], th.bool)), {})'
Operator: aten.cat.default
cnt: 4, '(([T([269952, 4], th.float16), T([67488, 4], th.float16), T([16872, 4], th.float16), T([4218, 4], th.float16), T([1083, 4], th.float16)],), {})'
cnt: 1, '(([T([4, 269952, 1], th.float16), T([4, 67488, 1], th.float16), T([4, 16872, 1], th.float16), T([4, 4218, 1], th.float16), T([4, 1083, 1], th.float16)], 1), {})'
cnt: 1, '(([T([4, 269952, 4], th.float16), T([4, 67488, 4], th.float16), T([4, 16872, 4], th.float16), T([4, 4218, 4], th.float16), T([4, 1083, 4], th.float16)], 1), {})'
cnt: 1, '(([T([359613, 4], th.float16), T([359613, 4], th.float16), T([359613, 4], th.float16), T([359613, 4], th.float16)],), {})'
cnt: 1, '(([T([269952], th.int64), T([67488], th.int64), T([16872], th.int64), T([4218], th.int64), T([1083], th.int64)],), {})'
cnt: 1, '(([T([4, 1000], th.int64), T([4, 1000], th.int64), T([4, 1000], th.int64), T([4, 1000], th.int64), T([4, 1000], th.int64)], 1), {})'
cnt: 3, '(([T([0, 4], th.float16), T([0, 4], th.float16), T([0, 4], th.float16), T([0, 4], th.float16)],), {})'
cnt: 2, '(([T([0, 1], th.float16), T([0, 1], th.float16), T([0, 1], th.float16), T([0, 1], th.float16)],), {})'
cnt: 2, '(([T([0, 1], th.float16), T([0, 4], th.float16)], 1), {})'
cnt: 2, '(([T([0], th.float32), T([0], th.float32), T([0], th.float32), T([0], th.float32)],), {})'
cnt: 1, '(([T([0], th.int64), T([0], th.int64), T([0], th.int64), T([0], th.int64)],), {})'
cnt: 1, '(([T([0, 91], th.float16), T([0, 91], th.float16), T([0, 91], th.float16), T([0, 91], th.float16)],), {})'
cnt: 1, '(([T([0, 364], th.float16), T([0, 364], th.float16), T([0, 364], th.float16), T([0, 364], th.float16)],), {})'
Operator: aten.clamp.default
cnt: 2, '((T([1438452, 1], th.float16), None, 4.135166556742356), {})'
cnt: 1, '((T([5000, 2], th.float16, (4, 2)), 0, 1199), {})'
cnt: 2, '((T([5000, 2], th.float16, (4, 2)), 0, 799), {})'
cnt: 3, '((T([5000, 2], th.float16, (4, 2)), 0, 800), {})'
cnt: 1, '((T([5000, 2], th.float16, (4, 2)), 0, 1155), {})'
cnt: 1, '((T([5000, 2], th.float16, (4, 2)), 0, 1115), {})'
cnt: 2, '((T([0], th.float32), 2, 5), {})'
cnt: 2, '((T([0, 91], th.float16), None, 4.135166556742356), {})'
cnt: 1, '((T([0, 182], th.float16), 0, 1199), {})'
cnt: 2, '((T([0, 182], th.float16), 0, 799), {})'
cnt: 3, '((T([0, 182], th.float16), 0, 800), {})'
cnt: 1, '((T([0, 182], th.float16), 0, 1155), {})'
cnt: 1, '((T([0, 182], th.float16), 0, 1115), {})'
Operator: aten.constant_pad_nd.default
cnt: 4, '((T([0, 1, 28, 28], th.float16), [1, 1, 1, 1], 0.0), {})'
Operator: aten.convolution.default
cnt: 1, '((T([4, 3, 1184, 1216], th.float16), T([64, 3, 7, 7], th.float16), None, [2, 2], [3, 3], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 64, 296, 304], th.float16), T([64, 64, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([4, 64, 296, 304], th.float16), T([64, 64, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([4, 64, 296, 304], th.float16), T([256, 64, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([4, 256, 296, 304], th.float16), T([64, 256, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 296, 304], th.float16), T([128, 256, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 128, 296, 304], th.float16), T([128, 128, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([4, 128, 148, 152], th.float16), T([512, 128, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 296, 304], th.float16), T([512, 256, 1, 1], th.float16), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([4, 512, 148, 152], th.float16), T([128, 512, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([4, 128, 148, 152], th.float16), T([128, 128, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 512, 148, 152], th.float16), T([256, 512, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 148, 152], th.float16), T([256, 256, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 6, '((T([4, 256, 74, 76], th.float16), T([1024, 256, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 512, 148, 152], th.float16), T([1024, 512, 1, 1], th.float16), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 5, '((T([4, 1024, 74, 76], th.float16), T([256, 1024, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 5, '((T([4, 256, 74, 76], th.float16), T([256, 256, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 1024, 74, 76], th.float16), T([512, 1024, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 512, 74, 76], th.float16), T([512, 512, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([4, 512, 37, 38], th.float16), T([2048, 512, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 1024, 74, 76], th.float16), T([2048, 1024, 1, 1], th.float16), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([4, 2048, 37, 38], th.float16), T([512, 2048, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([4, 512, 37, 38], th.float16), T([512, 512, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 2048, 37, 38], th.float16), T([256, 2048, 1, 1], th.float16), T([256], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([4, 256, 37, 38], th.float16), T([256, 256, 3, 3], th.float16), T([256], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 1024, 74, 76], th.float16), T([256, 1024, 1, 1], th.float16), T([256], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([4, 256, 74, 76], th.float16), T([256, 256, 3, 3], th.float16), T([256], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 512, 148, 152], th.float16), T([256, 512, 1, 1], th.float16), T([256], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([4, 256, 148, 152], th.float16), T([256, 256, 3, 3], th.float16), T([256], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 296, 304], th.float16), T([256, 256, 1, 1], th.float16), T([256], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([4, 256, 296, 304], th.float16), T([256, 256, 3, 3], th.float16), T([256], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 296, 304], th.float16), T([3, 256, 1, 1], th.float16), T([3], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 296, 304], th.float16), T([12, 256, 1, 1], th.float16), T([12], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 148, 152], th.float16), T([3, 256, 1, 1], th.float16), T([3], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 148, 152], th.float16), T([12, 256, 1, 1], th.float16), T([12], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 74, 76], th.float16), T([3, 256, 1, 1], th.float16), T([3], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 74, 76], th.float16), T([12, 256, 1, 1], th.float16), T([12], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 37, 38], th.float16), T([3, 256, 1, 1], th.float16), T([3], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 37, 38], th.float16), T([12, 256, 1, 1], th.float16), T([12], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 19, 19], th.float16), T([256, 256, 3, 3], th.float16), T([256], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 19, 19], th.float16), T([3, 256, 1, 1], th.float16), T([3], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([4, 256, 19, 19], th.float16), T([12, 256, 1, 1], th.float16), T([12], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([0, 256, 14, 14], th.float16), T([256, 256, 3, 3], th.float16), T([256], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([0, 256, 14, 14], th.float16), T([256, 256, 2, 2], th.float16), T([256], th.float16), [2, 2], [0, 0], [1, 1], True, [0, 0], 1), {})'
cnt: 1, '((T([0, 256, 28, 28], th.float16), T([91, 256, 1, 1], th.float16), T([91], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
Operator: aten.convolution_backward.default
cnt: 1, '((T([4, 256, 296, 304], th.float16), T([4, 256, 296, 304], th.float16), T([256, 256, 3, 3], th.float16), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([4, 256, 296, 304], th.float16), T([4, 256, 296, 304], th.float16), T([256, 256, 1, 1], th.float16), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})'
cnt: 1, '((T([4, 256, 148, 152], th.float16), T([4, 256, 148, 152], th.float16), T([256, 256, 3, 3], th.float16), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([4, 256, 148, 152], th.float16), T([4, 512, 148, 152], th.float16), T([256, 512, 1, 1], th.float16), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([4, 256, 74, 76], th.float16), T([4, 256, 74, 76], th.float16), T([256, 256, 3, 3], th.float16), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([4, 256, 74, 76], th.float16), T([4, 1024, 74, 76], th.float16), T([256, 1024, 1, 1], th.float16), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([4, 256, 37, 38], th.float16), T([4, 256, 37, 38], th.float16), T([256, 256, 3, 3], th.float16), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([4, 256, 37, 38], th.float16), T([4, 2048, 37, 38], th.float16), T([256, 2048, 1, 1], th.float16), [256], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 3, '((T([4, 2048, 37, 38], th.float16), T([4, 512, 37, 38], th.float16), T([2048, 512, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([4, 512, 37, 38], th.float16), T([4, 512, 37, 38], th.float16), T([512, 512, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([4, 512, 37, 38], th.float16), T([4, 2048, 37, 38], th.float16), T([512, 2048, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([4, 2048, 37, 38], th.float16), T([4, 1024, 74, 76], th.float16), T([2048, 1024, 1, 1], th.float16), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([4, 512, 37, 38], th.float16), T([4, 512, 74, 76], th.float16), T([512, 512, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([4, 512, 74, 76], th.float16), T([4, 1024, 74, 76], th.float16), T([512, 1024, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 6, '((T([4, 1024, 74, 76], th.float16), T([4, 256, 74, 76], th.float16), T([1024, 256, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 5, '((T([4, 256, 74, 76], th.float16), T([4, 256, 74, 76], th.float16), T([256, 256, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 5, '((T([4, 256, 74, 76], th.float16), T([4, 1024, 74, 76], th.float16), T([256, 1024, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([4, 1024, 74, 76], th.float16), T([4, 512, 148, 152], th.float16), T([1024, 512, 1, 1], th.float16), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([4, 256, 74, 76], th.float16), T([4, 256, 148, 152], th.float16), T([256, 256, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([4, 256, 148, 152], th.float16), T([4, 512, 148, 152], th.float16), T([256, 512, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 4, '((T([4, 512, 148, 152], th.float16), T([4, 128, 148, 152], th.float16), T([512, 128, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 3, '((T([4, 128, 148, 152], th.float16), T([4, 128, 148, 152], th.float16), T([128, 128, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 3, '((T([4, 128, 148, 152], th.float16), T([4, 512, 148, 152], th.float16), T([128, 512, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([4, 512, 148, 152], th.float16), T([4, 256, 296, 304], th.float16), T([512, 256, 1, 1], th.float16), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [False, True, False]), {})'
cnt: 1, '((T([4, 128, 148, 152], th.float16), T([4, 128, 296, 304], th.float16), T([128, 128, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([4, 128, 296, 304], th.float16), T([4, 256, 296, 304], th.float16), T([128, 256, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [False, True, False]), {})'
Operator: aten.copy_.default
cnt: 1, '((T([3, 799, 1199], th.float16, (1439744, 1216, 1)), T([3, 799, 1199], th.float16)), {})'
cnt: 1, '((T([3, 800, 800], th.float16, (1439744, 1216, 1)), T([3, 800, 800], th.float16)), {})'
cnt: 1, '((T([3, 1155, 800], th.float16, (1439744, 1216, 1)), T([3, 1155, 800], th.float16)), {})'
cnt: 1, '((T([3, 799, 1115], th.float16, (1439744, 1216, 1)), T([3, 799, 1115], th.float16)), {})'
cnt: 16, '((T([0], th.float16), T([0], th.float16)), {})'
Operator: aten.div.Tensor
cnt: 1, '((T([3, 427, 640], th.float16, (1, 1920, 3)), T([3, 1, 1], th.float16)), {})'
cnt: 1, '((T([3, 612, 612], th.float16, (1, 1836, 3)), T([3, 1, 1], th.float16)), {})'
cnt: 1, '((T([3, 640, 443], th.float16, (1, 1329, 3)), T([3, 1, 1], th.float16)), {})'
cnt: 1, '((T([3, 459, 640], th.float16, (1, 1920, 3)), T([3, 1, 1], th.float16)), {})'
cnt: 4, '((T([1438452, 1], th.float16, (4, 4)), 1.0), {})'
cnt: 2, '((T([0], th.float32), 224), {})'
cnt: 4, '((T([0, 91], th.float16), 10.0), {})'
cnt: 4, '((T([0, 91], th.float16), 5.0), {})'
cnt: 8, '((T([], th.float32), T([], th.float32)), {})'
cnt: 20, '((T([], th.float16), 0), {})'
cnt: 4, '((T([], th.int64), 0), {})'
cnt: 10, '((T([], th.float32), 4), {})'
Operator: aten.eq.Scalar
cnt: 2, '((T([0], th.int64), 0), {})'
cnt: 2, '((T([0], th.int64), 1), {})'
cnt: 2, '((T([0], th.int64), 2), {})'
cnt: 2, '((T([0], th.int64), 3), {})'
Operator: aten.exp.default
cnt: 2, '((T([1438452, 1], th.float16),), {})'
cnt: 2, '((T([0, 91], th.float16),), {})'
Operator: aten.fill_.Scalar
cnt: 2, '((T([], th.int64), 4), {})'
cnt: 2, '((T([], th.int64), 8), {})'
cnt: 2, '((T([], th.int64), 16), {})'
cnt: 2, '((T([], th.int64), 32), {})'
cnt: 1, '((T([], th.int64), 62), {})'
cnt: 1, '((T([], th.int64), 64), {})'
Operator: aten.floor.default
cnt: 2, '((T([0], th.float32),), {})'
Operator: aten.ge.Scalar
cnt: 8, '((T([5000], th.float16), 0.001), {})'
cnt: 4, '((T([0], th.float16), 0.0), {})'
cnt: 8, '((T([0], th.float16), 0.01), {})'
cnt: 8, '((T([0, 182], th.float16), 0), {})'
Operator: aten.gt.Scalar
cnt: 4, '((T([0], th.float16), 0.05), {})'
Operator: aten.index.Tensor
cnt: 1, '((T([4, 359613], th.float16), [T([4, 1], th.int64), T([4, 5000], th.int64)]), {})'
cnt: 1, '((T([4, 359613], th.int64, (0, 1)), [T([4, 1], th.int64), T([4, 5000], th.int64)]), {})'
cnt: 1, '((T([4, 359613, 4], th.float16), [T([4, 1], th.int64), T([4, 5000], th.int64)]), {})'
cnt: 4, '((T([5000, 4], th.float16), [T([0], th.int64)]), {})'
cnt: 4, '((T([5000], th.float16), [T([0], th.int64)]), {})'
cnt: 4, '((T([5000], th.int64), [T([0], th.int64)]), {})'
cnt: 20, '((T([0, 4], th.float16), [T([0], th.int64)]), {})'
cnt: 20, '((T([0], th.float16), [T([0], th.int64)]), {})'
cnt: 16, '((T([0], th.int64), [T([0], th.int64)]), {})'
cnt: 8, '((T([0, 5], th.float16), [T([0], th.int64)]), {})'
cnt: 1, '((T([0, 91, 28, 28], th.float16), [T([0], th.int64), T([0], th.int64)]), {})'
cnt: 4, '((T([0, 256, 7, 7], th.float16), [T([0], th.int64)]), {})'
Operator: aten.index_put.default
cnt: 3, '((T([0, 256, 7, 7], th.float16), [T([0], th.int64)], T([0, 256, 7, 7], th.float16)), {})'
Operator: aten.index_put_.default
cnt: 4, '((T([0, 256, 7, 7], th.float16), [T([0], th.int64)], T([0, 256, 7, 7], th.float16)), {})'
cnt: 4, '((T([0, 256, 14, 14], th.float16), [T([0], th.int64)], T([0, 256, 14, 14], th.float16)), {})'
Operator: aten.le.Scalar
cnt: 2, '((T([0, 182], th.float16), 799), {})'
cnt: 1, '((T([0, 182], th.float16), 1115), {})'
cnt: 1, '((T([0, 182], th.float16), 1155), {})'
cnt: 3, '((T([0, 182], th.float16), 800), {})'
cnt: 1, '((T([0, 182], th.float16), 1199), {})'
cnt: 2, '((T([0, 91], th.float16), 4.135166556742356), {})'
Operator: aten.log2.default
cnt: 20, '((T([], th.float32),), {})'
cnt: 2, '((T([0], th.float32),), {})'
Operator: aten.logical_and_.default
cnt: 8, '((T([0, 182], th.bool), T([0, 182], th.bool)), {})'
Operator: aten.max.default
cnt: 4, '((T([2], th.int64),), {})'
Operator: aten.max_pool2d_with_indices.default
cnt: 1, '((T([4, 64, 592, 608], th.float16), [3, 3], [2, 2], [1, 1]), {})'
cnt: 1, '((T([4, 256, 37, 38], th.float16), [1, 1], [2, 2]), {})'
Operator: aten.min.default
cnt: 4, '((T([2], th.int64),), {})'
Operator: aten.minimum.default
cnt: 4, '((T([], th.float32), T([], th.float32)), {})'
Operator: aten.mm.default
cnt: 1, '((T([0, 364], th.float16), T([364, 1024], th.float16)), {})'
cnt: 1, '((T([364, 0], th.float16), T([0, 1024], th.float16)), {})'
cnt: 1, '((T([0, 91], th.float16), T([91, 1024], th.float16)), {})'
cnt: 1, '((T([91, 0], th.float16), T([0, 1024], th.float16)), {})'
cnt: 1, '((T([0, 1024], th.float16), T([1024, 1024], th.float16)), {})'
cnt: 1, '((T([1024, 0], th.float16), T([0, 1024], th.float16)), {})'
cnt: 1, '((T([0, 1024], th.float16), T([1024, 12544], th.float16)), {})'
cnt: 1, '((T([1024, 0], th.float16), T([0, 12544], th.float16)), {})'
Operator: aten.mul.Tensor
cnt: 4, '((T([], th.float32), 800.0), {})'
cnt: 4, '((T([], th.float32), 1333.0), {})'
cnt: 14, '((T([1, 64, 1, 1], th.float16), T([1, 64, 1, 1], th.float16)), {})'
cnt: 1, '((T([4, 64, 592, 608], th.float16), T([1, 64, 1, 1], th.float16)), {})'
cnt: 6, '((T([4, 64, 296, 304], th.float16), T([1, 64, 1, 1], th.float16)), {})'
cnt: 32, '((T([1, 256, 1, 1], th.float16), T([1, 256, 1, 1], th.float16)), {})'
cnt: 4, '((T([4, 256, 296, 304], th.float16), T([1, 256, 1, 1], th.float16)), {})'
cnt: 16, '((T([1, 128, 1, 1], th.float16), T([1, 128, 1, 1], th.float16)), {})'
cnt: 2, '((T([4, 128, 296, 304], th.float16), T([1, 128, 1, 1], th.float16)), {})'
cnt: 14, '((T([4, 128, 148, 152], th.float16), T([1, 128, 1, 1], th.float16)), {})'
cnt: 22, '((T([1, 512, 1, 1], th.float16), T([1, 512, 1, 1], th.float16)), {})'
cnt: 10, '((T([4, 512, 148, 152], th.float16), T([1, 512, 1, 1], th.float16)), {})'
cnt: 2, '((T([4, 256, 148, 152], th.float16), T([1, 256, 1, 1], th.float16)), {})'
cnt: 22, '((T([4, 256, 74, 76], th.float16), T([1, 256, 1, 1], th.float16)), {})'
cnt: 14, '((T([1, 1024, 1, 1], th.float16), T([1, 1024, 1, 1], th.float16)), {})'
cnt: 14, '((T([4, 1024, 74, 76], th.float16), T([1, 1024, 1, 1], th.float16)), {})'
cnt: 2, '((T([4, 512, 74, 76], th.float16), T([1, 512, 1, 1], th.float16)), {})'
cnt: 10, '((T([4, 512, 37, 38], th.float16), T([1, 512, 1, 1], th.float16)), {})'
cnt: 8, '((T([1, 2048, 1, 1], th.float16), T([1, 2048, 1, 1], th.float16)), {})'
cnt: 8, '((T([4, 2048, 37, 38], th.float16), T([1, 2048, 1, 1], th.float16)), {})'
cnt: 1, '((T([304], th.int32), T([], th.int64)), {})'
cnt: 1, '((T([296], th.int32), T([], th.int64)), {})'
cnt: 1, '((T([152], th.int32), T([], th.int64)), {})'
cnt: 1, '((T([148], th.int32), T([], th.int64)), {})'
cnt: 1, '((T([76], th.int32), T([], th.int64)), {})'
cnt: 1, '((T([74], th.int32), T([], th.int64)), {})'
cnt: 1, '((T([38], th.int32), T([], th.int64)), {})'
cnt: 1, '((T([37], th.int32), T([], th.int64)), {})'
cnt: 2, '((T([19], th.int32), T([], th.int64)), {})'
cnt: 2, '((T([1438452], th.float16), 0.5), {})'
cnt: 4, '((T([1438452, 1], th.float16), T([1438452, 1], th.float16)), {})'
cnt: 2, '((T([], th.float16), T([1438452, 1], th.float16)), {})'
cnt: 8, '((T([0], th.float32), T([0], th.float32)), {})'
cnt: 18, '((T([0], th.float16), 0.5), {})'
cnt: 8, '((T([0, 91], th.float16), T([0, 1], th.float16)), {})'
cnt: 2, '((T([], th.float16), T([0, 91], th.float16)), {})'
cnt: 32, '((T([0], th.float16), T([], th.float32)), {})'
cnt: 2, '((T([0, 91], th.float16), T([], th.float16)), {})'
cnt: 2, '((T([0, 91], th.float16), T([0, 91], th.float16)), {})'
Operator: aten.mul_.Tensor
cnt: 8, '((T([0], th.float16), 1.0714285714285714), {})'
Operator: aten.neg.default
cnt: 2, '((T([0, 91], th.float16),), {})'
Operator: aten.new_empty.default
cnt: 1, '((T([0, 1, 30, 30], th.float16), [0, 1, 427, 640]), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided, \'pin_memory\': False})'
cnt: 1, '((T([0, 1, 30, 30], th.float16), [0, 1, 612, 612]), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided, \'pin_memory\': False})'
cnt: 1, '((T([0, 1, 30, 30], th.float16), [0, 1, 640, 443]), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided, \'pin_memory\': False})'
cnt: 1, '((T([0, 1, 30, 30], th.float16), [0, 1, 459, 640]), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided, \'pin_memory\': False})'
Operator: aten.new_full.default
cnt: 1, '((T([3, 799, 1199], th.float16), [4, 3, 1184, 1216], 0), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided, \'pin_memory\': False})'
Operator: aten.new_zeros.default
cnt: 12, '((T([0], th.float16), [0]), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided})'
cnt: 12, '((T([0, 4], th.float16), [0, 4]), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided})'
Operator: aten.nonzero.default
cnt: 4, '((T([5000], th.bool),), {})'
cnt: 20, '((T([0], th.bool),), {})'
Operator: aten.reciprocal.default
cnt: 8, '((T([], th.float32),), {})'
Operator: aten.relu.default
cnt: 2, '((T([0, 1024], th.float16),), {})'
Operator: aten.relu_.default
cnt: 1, '((T([4, 64, 592, 608], th.float16),), {})'
cnt: 6, '((T([4, 64, 296, 304], th.float16),), {})'
cnt: 4, '((T([4, 256, 296, 304], th.float16),), {})'
cnt: 1, '((T([4, 128, 296, 304], th.float16),), {})'
cnt: 7, '((T([4, 128, 148, 152], th.float16),), {})'
cnt: 4, '((T([4, 512, 148, 152], th.float16),), {})'
cnt: 2, '((T([4, 256, 148, 152], th.float16),), {})'
cnt: 12, '((T([4, 256, 74, 76], th.float16),), {})'
cnt: 6, '((T([4, 1024, 74, 76], th.float16),), {})'
cnt: 1, '((T([4, 512, 74, 76], th.float16),), {})'
cnt: 5, '((T([4, 512, 37, 38], th.float16),), {})'
cnt: 3, '((T([4, 2048, 37, 38], th.float16),), {})'
cnt: 1, '((T([4, 256, 37, 38], th.float16),), {})'
cnt: 1, '((T([4, 256, 19, 19], th.float16),), {})'
cnt: 4, '((T([0, 256, 14, 14], th.float16),), {})'
cnt: 1, '((T([0, 256, 28, 28], th.float16),), {})'
Operator: aten.round.default
cnt: 16, '((T([], th.float32),), {})'
Operator: aten.rsqrt.default
cnt: 7, '((T([1, 64, 1, 1], th.float16),), {})'
cnt: 16, '((T([1, 256, 1, 1], th.float16),), {})'
cnt: 8, '((T([1, 128, 1, 1], th.float16),), {})'
cnt: 11, '((T([1, 512, 1, 1], th.float16),), {})'
cnt: 7, '((T([1, 1024, 1, 1], th.float16),), {})'
cnt: 4, '((T([1, 2048, 1, 1], th.float16),), {})'
Operator: aten.sigmoid.default
cnt: 1, '((T([4, 5000], th.float16),), {})'
cnt: 1, '((T([0, 91, 28, 28], th.float16),), {})'
Operator: aten.slice_backward.default
cnt: 4, '((T([0, 90], th.float16), [0, 91], 1, 1, 9223372036854775807, 1), {})'
cnt: 4, '((T([0, 91], th.float16), [0, 91], 0, 0, 9223372036854775807, 1), {})'
cnt: 4, '((T([0, 363], th.float16), [0, 364], 1, 1, 9223372036854775807, 1), {})'
cnt: 8, '((T([0, 364], th.float16), [0, 364], 0, 0, 9223372036854775807, 1), {})'
cnt: 4, '((T([0, 182], th.float16), [0, 364], 1, 1, 9223372036854775807, 2), {})'
cnt: 4, '((T([0, 182], th.float16), [0, 364], 1, 0, 9223372036854775807, 2), {})'
cnt: 1, '((T([0, 91], th.float16), [0, 364], 1, 3, 9223372036854775807, 4), {})'
cnt: 1, '((T([0, 91], th.float16), [0, 364], 1, 2, 9223372036854775807, 4), {})'
cnt: 1, '((T([0, 91], th.float16), [0, 364], 1, 1, 9223372036854775807, 4), {})'
cnt: 1, '((T([0, 91], th.float16), [0, 364], 1, 0, 9223372036854775807, 4), {})'
Operator: aten.split_with_sizes.default
cnt: 1, '((T([4, 359613], th.float16), [269952, 67488, 16872, 4218, 1083], 1), {})'
cnt: 1, '((T([0, 364], th.float16), [0, 0, 0, 0]), {})'
cnt: 1, '((T([0, 91], th.float16), [0, 0, 0, 0]), {})'
cnt: 1, '((T([0, 1, 28, 28], th.float16), [0, 0, 0, 0]), {})'
Operator: aten.sqrt.default
cnt: 2, '((T([0], th.float32),), {})'
Operator: aten.stack.default
cnt: 1, '(([T([89984], th.int32), T([89984], th.int32), T([89984], th.int32), T([89984], th.int32)], 1), {})'
cnt: 1, '(([T([22496], th.int32), T([22496], th.int32), T([22496], th.int32), T([22496], th.int32)], 1), {})'
cnt: 1, '(([T([5624], th.int32), T([5624], th.int32), T([5624], th.int32), T([5624], th.int32)], 1), {})'
cnt: 1, '(([T([1406], th.int32), T([1406], th.int32), T([1406], th.int32), T([1406], th.int32)], 1), {})'
cnt: 1, '(([T([361], th.int32), T([361], th.int32), T([361], th.int32), T([361], th.int32)], 1), {})'
cnt: 1, '(([T([1438452, 1], th.float16), T([1438452, 1], th.float16), T([1438452, 1], th.float16), T([1438452, 1], th.float16)], 2), {})'
cnt: 4, '(([T([5000, 2], th.float16), T([5000, 2], th.float16)], 2), {})'
cnt: 1, '(([T([0, 91], th.float16), T([0, 91], th.float16), T([0, 91], th.float16), T([0, 91], th.float16)], 2), {})'
cnt: 4, '(([T([0, 182], th.float16), T([0, 182], th.float16)], 2), {})'
cnt: 8, '(([T([0], th.float16), T([0], th.float16), T([0], th.float16), T([0], th.float16)], 1), {})'
Operator: aten.sub.Tensor
cnt: 1, '((T([3, 427, 640], th.float16, (1, 1920, 3)), T([3, 1, 1], th.float16)), {})'
cnt: 1, '((T([3, 612, 612], th.float16, (1, 1836, 3)), T([3, 1, 1], th.float16)), {})'
cnt: 1, '((T([3, 640, 443], th.float16, (1, 1329, 3)), T([3, 1, 1], th.float16)), {})'
cnt: 1, '((T([3, 459, 640], th.float16, (1, 1920, 3)), T([3, 1, 1], th.float16)), {})'
cnt: 7, '((T([1, 64, 1, 1], th.float16), T([1, 64, 1, 1], th.float16)), {})'
cnt: 16, '((T([1, 256, 1, 1], th.float16), T([1, 256, 1, 1], th.float16)), {})'
cnt: 8, '((T([1, 128, 1, 1], th.float16), T([1, 128, 1, 1], th.float16)), {})'
cnt: 11, '((T([1, 512, 1, 1], th.float16), T([1, 512, 1, 1], th.float16)), {})'
cnt: 7, '((T([1, 1024, 1, 1], th.float16), T([1, 1024, 1, 1], th.float16)), {})'
cnt: 4, '((T([1, 2048, 1, 1], th.float16), T([1, 2048, 1, 1], th.float16)), {})'
cnt: 2, '((T([1438452], th.float16, (4,)), T([1438452], th.float16, (4,))), {})'
cnt: 2, '((T([1438452, 1], th.float16), T([1438452, 1], th.float16)), {})'
cnt: 8, '((T([5000], th.float16, (4,)), T([5000], th.float16, (4,))), {})'
cnt: 16, '((T([0], th.float32), T([0], th.float32)), {})'
cnt: 2, '((T([0], th.int64), 2), {})'
cnt: 26, '((T([0], th.float16), T([0], th.float16)), {})'
cnt: 2, '((T([0, 91], th.float16), T([0, 91], th.float16)), {})'
Operator: aten.sum.SymInt
cnt: 1, '((T([0, 364], th.float16), [0], True), {})'
cnt: 1, '((T([0, 91], th.float16), [0], True), {})'
cnt: 2, '((T([0, 1024], th.float16), [0], True), {})'
Operator: aten.sum.default
cnt: 4, '((T([0, 4], th.float16),), {})'
cnt: 4, '((T([0], th.int64),), {})'
cnt: 4, '((T([0], th.float16),), {})'
cnt: 1, '((T([0, 1, 427, 640], th.float16),), {})'
cnt: 1, '((T([0, 1, 612, 612], th.float16),), {})'
cnt: 1, '((T([0, 1, 640, 443], th.float16),), {})'
cnt: 1, '((T([0, 1, 459, 640], th.float16),), {})'
Operator: aten.threshold_backward.default
cnt: 2, '((T([0, 1024], th.float16), T([0, 1024], th.float16), 0), {})'
cnt: 3, '((T([4, 2048, 37, 38], th.float16), T([4, 2048, 37, 38], th.float16), 0), {})'
cnt: 5, '((T([4, 512, 37, 38], th.float16), T([4, 512, 37, 38], th.float16), 0), {})'
cnt: 1, '((T([4, 512, 74, 76], th.float16), T([4, 512, 74, 76], th.float16), 0), {})'
cnt: 6, '((T([4, 1024, 74, 76], th.float16), T([4, 1024, 74, 76], th.float16), 0), {})'
cnt: 11, '((T([4, 256, 74, 76], th.float16), T([4, 256, 74, 76], th.float16), 0), {})'
cnt: 1, '((T([4, 256, 148, 152], th.float16), T([4, 256, 148, 152], th.float16), 0), {})'
cnt: 4, '((T([4, 512, 148, 152], th.float16), T([4, 512, 148, 152], th.float16), 0), {})'
cnt: 7, '((T([4, 128, 148, 152], th.float16), T([4, 128, 148, 152], th.float16), 0), {})'
cnt: 1, '((T([4, 128, 296, 304], th.float16), T([4, 128, 296, 304], th.float16), 0), {})'
Operator: aten.topk.default
cnt: 1, '((T([4, 269952], th.float16, (359613, 1)), 1000, 1), {})'
cnt: 1, '((T([4, 67488], th.float16, (359613, 1)), 1000, 1), {})'
cnt: 1, '((T([4, 16872], th.float16, (359613, 1)), 1000, 1), {})'
cnt: 1, '((T([4, 4218], th.float16, (359613, 1)), 1000, 1), {})'
cnt: 1, '((T([4, 1083], th.float16, (359613, 1)), 1000, 1), {})'
Operator: aten.unbind.int
cnt: 1, '((T([4, 5000, 4], th.float16),), {})'
cnt: 1, '((T([4, 5000], th.float16),), {})'
cnt: 1, '((T([4, 5000], th.int64),), {})'
cnt: 24, '((T([0, 1], th.int64), 1), {})'
cnt: 8, '((T([0, 4], th.float16), 1), {})'
cnt: 4, '((T([0, 182, 2], th.float16), 2), {})'
cnt: 1, '((T([0, 91, 4], th.float16), 2), {})'
Operator: aten.upsample_bilinear2d.vec
cnt: 1, '((T([1, 3, 427, 640], th.float16, (3, 1, 1920, 3)), [799, 1199], False, None), {})'
cnt: 1, '((T([1, 3, 612, 612], th.float16, (3, 1, 1836, 3)), [800, 800], False, None), {})'
cnt: 1, '((T([1, 3, 640, 443], th.float16, (3, 1, 1329, 3)), [1155, 800], False, None), {})'
cnt: 1, '((T([1, 3, 459, 640], th.float16, (3, 1, 1920, 3)), [799, 1115], False, None), {})'
Operator: aten.upsample_nearest2d.vec
cnt: 1, '((T([4, 256, 37, 38], th.float16), [74, 76], None), {})'
cnt: 1, '((T([4, 256, 74, 76], th.float16), [148, 152], None), {})'
cnt: 1, '((T([4, 256, 148, 152], th.float16), [296, 304], None), {})'
Operator: aten.upsample_nearest2d_backward.vec
cnt: 1, '((T([4, 256, 296, 304], th.float16), [296, 304], [4, 256, 148, 152], None), {})'
cnt: 1, '((T([4, 256, 148, 152], th.float16), [148, 152], [4, 256, 74, 76], None), {})'
cnt: 1, '((T([4, 256, 74, 76], th.float16), [74, 76], [4, 256, 37, 38], None), {})'
Operator: aten.where.self
cnt: 8, '((T([0, 182], th.bool), T([0, 182], th.float16), T([], th.float16)), {})'
cnt: 2, '((T([0, 91], th.bool), T([0, 91], th.float16), T([], th.float16)), {})'
