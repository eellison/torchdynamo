Operator: aten._index_put_impl_.default
cnt: 1, '((T([5000, 1], th.float32), [T([100], th.int64)], T([100, 1], th.float32, (0, 0)), True, True), {})'
cnt: 1, '((T([5000, 4], th.float32), [T([100], th.int64)], T([100, 4], th.float32), True, True), {})'
Operator: aten._to_copy.default
cnt: 1, "((T([5000, 4], th.float16),), {'dtype': th.float32})"
cnt: 1, "((T([5000], th.float16),), {'dtype': th.float32})"
cnt: 1, '((T([5000], th.int64),), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float32, \'layout\': th.strided, \'pin_memory\': False})'
cnt: 1, '((T([], th.int64),), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float32, \'layout\': th.strided, \'pin_memory\': False})'
cnt: 1, "((T([100, 1], th.int64),), {'dtype': th.float32})"
cnt: 1, '((T([5000], th.float32),), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided})'
cnt: 1, '((T([5000, 4], th.float32),), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided})'
Operator: aten._unsafe_view.default
cnt: 1, '((T([1, 80, 80, 810], th.float16), [1, 57600, 90]), {})'
cnt: 1, '((T([1, 40, 40, 810], th.float16), [1, 14400, 90]), {})'
cnt: 1, '((T([1, 20, 20, 810], th.float16), [1, 3600, 90]), {})'
cnt: 1, '((T([1, 10, 10, 810], th.float16), [1, 900, 90]), {})'
cnt: 1, '((T([1, 5, 5, 810], th.float16), [1, 225, 90]), {})'
cnt: 1, '((T([1, 80, 80, 36], th.float16), [1, 57600, 4]), {})'
cnt: 1, '((T([1, 40, 40, 36], th.float16), [1, 14400, 4]), {})'
cnt: 1, '((T([1, 20, 20, 36], th.float16), [1, 3600, 4]), {})'
cnt: 1, '((T([1, 10, 10, 36], th.float16), [1, 900, 4]), {})'
cnt: 1, '((T([1, 5, 5, 36], th.float16), [1, 225, 4]), {})'
Operator: aten.add.Scalar
cnt: 1, '((T([100, 1], th.int64), 1), {})'
Operator: aten.add.Tensor
cnt: 3, '((T([1, 16, 320, 320], th.float16), T([1, 16, 320, 320], th.float16)), {})'
cnt: 4, '((T([1, 24, 160, 160], th.float16), T([1, 24, 160, 160], th.float16)), {})'
cnt: 5, '((T([1, 40, 80, 80], th.float16), T([1, 40, 80, 80], th.float16)), {})'
cnt: 6, '((T([1, 80, 40, 40], th.float16), T([1, 80, 40, 40], th.float16)), {})'
cnt: 8, '((T([1, 112, 40, 40], th.float16), T([1, 112, 40, 40], th.float16)), {})'
cnt: 8, '((T([1, 192, 20, 20], th.float16), T([1, 192, 20, 20], th.float16)), {})'
cnt: 4, '((T([1, 320, 20, 20], th.float16), T([1, 320, 20, 20], th.float16)), {})'
cnt: 76, '((T([], th.float16), 0.0001), {})'
cnt: 2, '((T([5000], th.float16, (4,)), T([5000], th.float16, (4,))), {})'
cnt: 2, '((T([5000], th.float32), T([5000], th.float16)), {})'
cnt: 2, '((T([5000], th.float32), T([5000], th.float32)), {})'
cnt: 1, '((T([], th.float32), T([], th.float32)), {})'
cnt: 1, '((T([5000, 4], th.float32), T([5000, 1], th.float32)), {})'
cnt: 2, '((T([5000], th.float32, (4,)), T([5000], th.float32, (4,))), {})'
cnt: 2, '((T([5000], th.float32, (4,)), T([5000], th.float32)), {})'
cnt: 4, '((T([36, 88, 1, 1], th.float16), T([36, 88, 1, 1], th.float16)), {})'
cnt: 4, '((T([36], th.float16), T([36], th.float16)), {})'
cnt: 32, '((T([88, 1, 3, 3], th.float16), T([88, 1, 3, 3], th.float16)), {})'
cnt: 24, '((T([88, 88, 1, 1], th.float16), T([88, 88, 1, 1], th.float16)), {})'
cnt: 24, '((T([88], th.float16), T([88], th.float16)), {})'
cnt: 5, '((T([1, 88, 5, 5], th.float16), T([1, 88, 5, 5], th.float16)), {})'
cnt: 4, '((T([810, 88, 1, 1], th.float16), T([810, 88, 1, 1], th.float16)), {})'
cnt: 4, '((T([810], th.float16), T([810], th.float16)), {})'
cnt: 14, '((T([1, 88, 10, 10], th.float16), T([1, 88, 10, 10], th.float16)), {})'
cnt: 12, '((T([1, 88, 20, 20], th.float16), T([1, 88, 20, 20], th.float16)), {})'
cnt: 12, '((T([1, 88, 40, 40], th.float16), T([1, 88, 40, 40], th.float16)), {})'
cnt: 5, '((T([1, 88, 80, 80], th.float16), T([1, 88, 80, 80], th.float16)), {})'
cnt: 44, '((T([], th.float16), T([], th.float16)), {})'
cnt: 20, '((T([2], th.float16), T([2], th.float16)), {})'
cnt: 20, '((T([2], th.float16), T([2], th.float16, (0,))), {})'
cnt: 24, '((T([3], th.float16), T([3], th.float16)), {})'
cnt: 12, '((T([3], th.float16), T([3], th.float16, (0,))), {})'
cnt: 1, '((T([1, 1920, 20, 20], th.float16), T([1, 1920, 20, 20], th.float16)), {})'
cnt: 5, '((T([1, 1152, 20, 20], th.float16), T([1, 1152, 20, 20], th.float16)), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16), T([1, 672, 20, 20], th.float16)), {})'
cnt: 3, '((T([1, 672, 40, 40], th.float16), T([1, 672, 40, 40], th.float16)), {})'
cnt: 4, '((T([1, 480, 40, 40], th.float16), T([1, 480, 40, 40], th.float16)), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16), T([1, 240, 40, 40], th.float16)), {})'
cnt: 2, '((T([1, 240, 80, 80], th.float16), T([1, 240, 80, 80], th.float16)), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16), T([1, 144, 80, 80], th.float16)), {})'
cnt: 2, '((T([1, 144, 160, 160], th.float16), T([1, 144, 160, 160], th.float16)), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16), T([1, 96, 160, 160], th.float16)), {})'
cnt: 1, '((T([1, 32, 320, 320], th.float16), T([1, 32, 320, 320], th.float16)), {})'
Operator: aten.cat.default
cnt: 1, '(([T([1, 57600, 90], th.float16), T([1, 14400, 90], th.float16), T([1, 3600, 90], th.float16), T([1, 900, 90], th.float16), T([1, 225, 90], th.float16)], 1), {})'
cnt: 1, '(([T([1, 57600, 4], th.float16), T([1, 14400, 4], th.float16), T([1, 3600, 4], th.float16), T([1, 900, 4], th.float16), T([1, 225, 4], th.float16)], 1), {})'
cnt: 1, '(([T([2], th.float16), T([2], th.float16)],), {})'
cnt: 1, '(([T([100, 4], th.float32), T([100, 1], th.float32), T([100, 1], th.float32)], 1), {})'
Operator: aten.clamp.default
cnt: 1, '((T([5000, 4], th.float32), 0), {})'
Operator: aten.clone.default
cnt: 1, '((T([1, 3, 640, 640], th.float16),), {})'
cnt: 2, '((T([1, 32, 320, 320], th.float16),), {})'
cnt: 1, '((T([1, 8, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16),), {})'
cnt: 2, '((T([1, 4, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 96, 320, 320], th.float16),), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16),), {})'
cnt: 5, '((T([1, 144, 160, 160], th.float16),), {})'
cnt: 3, '((T([1, 6, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16),), {})'
cnt: 5, '((T([1, 240, 80, 80], th.float16),), {})'
cnt: 3, '((T([1, 10, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16),), {})'
cnt: 8, '((T([1, 480, 40, 40], th.float16),), {})'
cnt: 4, '((T([1, 20, 1, 1], th.float16),), {})'
cnt: 7, '((T([1, 672, 40, 40], th.float16),), {})'
cnt: 4, '((T([1, 28, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16),), {})'
cnt: 10, '((T([1, 1152, 20, 20], th.float16),), {})'
cnt: 5, '((T([1, 48, 1, 1], th.float16),), {})'
cnt: 2, '((T([1, 1920, 20, 20], th.float16),), {})'
cnt: 1, '((T([1, 80, 1, 1], th.float16),), {})'
cnt: 14, '((T([1, 88, 10, 10], th.float16),), {})'
cnt: 14, '((T([1, 88, 20, 20], th.float16),), {})'
cnt: 14, '((T([1, 88, 40, 40], th.float16),), {})'
cnt: 10, '((T([1, 88, 80, 80], th.float16),), {})'
cnt: 10, '((T([1, 88, 5, 5], th.float16),), {})'
Operator: aten.constant_pad_nd.default
cnt: 1, '((T([1, 3, 640, 640], th.float16), [0, 1, 0, 1], 0.0), {})'
cnt: 1, '((T([1, 96, 320, 320], th.float16), [0, 1, 0, 1], 0.0), {})'
cnt: 1, '((T([1, 144, 160, 160], th.float16), [1, 2, 1, 2], 0.0), {})'
cnt: 1, '((T([1, 240, 80, 80], th.float16), [0, 1, 0, 1], 0.0), {})'
cnt: 1, '((T([1, 672, 40, 40], th.float16), [1, 2, 1, 2], 0.0), {})'
cnt: 5, '((T([1, 88, 20, 20], th.float16), [0, 1, 0, 1], -inf), {})'
cnt: 5, '((T([1, 88, 10, 10], th.float16), [0, 1, 0, 1], -inf), {})'
cnt: 4, '((T([1, 88, 80, 80], th.float16), [0, 1, 0, 1], -inf), {})'
cnt: 4, '((T([1, 88, 40, 40], th.float16), [0, 1, 0, 1], -inf), {})'
cnt: 5, '((T([1, 88, 11, 11], th.float16), [0, -1, 0, -1]), {})'
cnt: 5, '((T([1, 88, 21, 21], th.float16), [0, -1, 0, -1]), {})'
cnt: 4, '((T([1, 88, 41, 41], th.float16), [0, -1, 0, -1]), {})'
cnt: 4, '((T([1, 88, 81, 81], th.float16), [0, -1, 0, -1]), {})'
cnt: 1, '((T([1, 672, 43, 43], th.float16), [-1, -2, -1, -2]), {})'
cnt: 1, '((T([1, 240, 81, 81], th.float16), [0, -1, 0, -1]), {})'
cnt: 1, '((T([1, 144, 163, 163], th.float16), [-1, -2, -1, -2]), {})'
cnt: 1, '((T([1, 96, 321, 321], th.float16), [0, -1, 0, -1]), {})'
Operator: aten.convolution.default
cnt: 1, '((T([1, 3, 641, 641], th.float16), T([32, 3, 3, 3], th.float16), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 32, 320, 320], th.float16), T([32, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 32), {})'
cnt: 1, '((T([1, 32, 1, 1], th.float16), T([8, 32, 1, 1], th.float16), T([8], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 8, 1, 1], th.float16), T([32, 8, 1, 1], th.float16), T([32], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 32, 320, 320], th.float16), T([16, 32, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16), T([16, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 16), {})'
cnt: 1, '((T([1, 16, 1, 1], th.float16), T([4, 16, 1, 1], th.float16), T([4], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 4, 1, 1], th.float16), T([16, 4, 1, 1], th.float16), T([16], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16), T([16, 16, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16), T([96, 16, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 96, 321, 321], th.float16), T([96, 1, 3, 3], th.float16), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 96), {})'
cnt: 1, '((T([1, 96, 1, 1], th.float16), T([4, 96, 1, 1], th.float16), T([4], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 4, 1, 1], th.float16), T([96, 4, 1, 1], th.float16), T([96], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16), T([24, 96, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([1, 24, 160, 160], th.float16), T([144, 24, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([1, 144, 160, 160], th.float16), T([144, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 144), {})'
cnt: 3, '((T([1, 144, 1, 1], th.float16), T([6, 144, 1, 1], th.float16), T([6], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([1, 6, 1, 1], th.float16), T([144, 6, 1, 1], th.float16), T([144], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([1, 144, 160, 160], th.float16), T([24, 144, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 144, 163, 163], th.float16), T([144, 1, 5, 5], th.float16), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 144), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16), T([40, 144, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([1, 40, 80, 80], th.float16), T([240, 40, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([1, 240, 80, 80], th.float16), T([240, 1, 5, 5], th.float16), None, [1, 1], [2, 2], [1, 1], False, [0, 0], 240), {})'
cnt: 3, '((T([1, 240, 1, 1], th.float16), T([10, 240, 1, 1], th.float16), T([10], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([1, 10, 1, 1], th.float16), T([240, 10, 1, 1], th.float16), T([240], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([1, 240, 80, 80], th.float16), T([40, 240, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 240, 81, 81], th.float16), T([240, 1, 3, 3], th.float16), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 240), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16), T([80, 240, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([1, 80, 40, 40], th.float16), T([480, 80, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([1, 480, 40, 40], th.float16), T([480, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 480), {})'
cnt: 4, '((T([1, 480, 1, 1], th.float16), T([20, 480, 1, 1], th.float16), T([20], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([1, 20, 1, 1], th.float16), T([480, 20, 1, 1], th.float16), T([480], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([1, 480, 40, 40], th.float16), T([80, 480, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 480, 40, 40], th.float16), T([480, 1, 5, 5], th.float16), None, [1, 1], [2, 2], [1, 1], False, [0, 0], 480), {})'
cnt: 1, '((T([1, 480, 40, 40], th.float16), T([112, 480, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([1, 112, 40, 40], th.float16), T([672, 112, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([1, 672, 40, 40], th.float16), T([672, 1, 5, 5], th.float16), None, [1, 1], [2, 2], [1, 1], False, [0, 0], 672), {})'
cnt: 4, '((T([1, 672, 1, 1], th.float16), T([28, 672, 1, 1], th.float16), T([28], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([1, 28, 1, 1], th.float16), T([672, 28, 1, 1], th.float16), T([672], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([1, 672, 40, 40], th.float16), T([112, 672, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 672, 43, 43], th.float16), T([672, 1, 5, 5], th.float16), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 672), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16), T([192, 672, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 5, '((T([1, 192, 20, 20], th.float16), T([1152, 192, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([1, 1152, 20, 20], th.float16), T([1152, 1, 5, 5], th.float16), None, [1, 1], [2, 2], [1, 1], False, [0, 0], 1152), {})'
cnt: 5, '((T([1, 1152, 1, 1], th.float16), T([48, 1152, 1, 1], th.float16), T([48], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 5, '((T([1, 48, 1, 1], th.float16), T([1152, 48, 1, 1], th.float16), T([1152], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([1, 1152, 20, 20], th.float16), T([192, 1152, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 1152, 20, 20], th.float16), T([1152, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1152), {})'
cnt: 1, '((T([1, 1152, 20, 20], th.float16), T([320, 1152, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 320, 20, 20], th.float16), T([1920, 320, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 1920, 20, 20], th.float16), T([1920, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1920), {})'
cnt: 1, '((T([1, 1920, 1, 1], th.float16), T([80, 1920, 1, 1], th.float16), T([80], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 80, 1, 1], th.float16), T([1920, 80, 1, 1], th.float16), T([1920], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 1920, 20, 20], th.float16), T([320, 1920, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([1, 320, 20, 20], th.float16), T([88, 320, 1, 1], th.float16), T([88], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 16, '((T([1, 88, 10, 10], th.float16), T([88, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 88), {})'
cnt: 14, '((T([1, 88, 10, 10], th.float16), T([88, 88, 1, 1], th.float16), T([88], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 16, '((T([1, 88, 20, 20], th.float16), T([88, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 88), {})'
cnt: 14, '((T([1, 88, 20, 20], th.float16), T([88, 88, 1, 1], th.float16), T([88], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([1, 112, 40, 40], th.float16), T([88, 112, 1, 1], th.float16), T([88], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 16, '((T([1, 88, 40, 40], th.float16), T([88, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 88), {})'
cnt: 14, '((T([1, 88, 40, 40], th.float16), T([88, 88, 1, 1], th.float16), T([88], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 40, 80, 80], th.float16), T([88, 40, 1, 1], th.float16), T([88], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 12, '((T([1, 88, 80, 80], th.float16), T([88, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 88), {})'
cnt: 10, '((T([1, 88, 80, 80], th.float16), T([88, 88, 1, 1], th.float16), T([88], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 12, '((T([1, 88, 5, 5], th.float16), T([88, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 88), {})'
cnt: 10, '((T([1, 88, 5, 5], th.float16), T([88, 88, 1, 1], th.float16), T([88], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 88, 80, 80], th.float16), T([810, 88, 1, 1], th.float16), T([810], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 88, 40, 40], th.float16), T([810, 88, 1, 1], th.float16), T([810], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 88, 20, 20], th.float16), T([810, 88, 1, 1], th.float16), T([810], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 88, 10, 10], th.float16), T([810, 88, 1, 1], th.float16), T([810], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 88, 5, 5], th.float16), T([810, 88, 1, 1], th.float16), T([810], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 88, 80, 80], th.float16), T([36, 88, 1, 1], th.float16), T([36], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 88, 40, 40], th.float16), T([36, 88, 1, 1], th.float16), T([36], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 88, 20, 20], th.float16), T([36, 88, 1, 1], th.float16), T([36], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 88, 10, 10], th.float16), T([36, 88, 1, 1], th.float16), T([36], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([1, 88, 5, 5], th.float16), T([36, 88, 1, 1], th.float16), T([36], th.float16), [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
Operator: aten.convolution_backward.default
cnt: 1, '((T([1, 36, 5, 5], th.float16, (900, 1, 180, 36)), T([1, 88, 5, 5], th.float16), T([36, 88, 1, 1], th.float16), [36], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 12, '((T([1, 88, 5, 5], th.float16), T([1, 88, 5, 5], th.float16), T([88, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 88, [True, True, False]), {})'
cnt: 10, '((T([1, 88, 5, 5], th.float16), T([1, 88, 5, 5], th.float16), T([88, 88, 1, 1], th.float16), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 36, 10, 10], th.float16, (3600, 1, 360, 36)), T([1, 88, 10, 10], th.float16), T([36, 88, 1, 1], th.float16), [36], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 16, '((T([1, 88, 10, 10], th.float16), T([1, 88, 10, 10], th.float16), T([88, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 88, [True, True, False]), {})'
cnt: 14, '((T([1, 88, 10, 10], th.float16), T([1, 88, 10, 10], th.float16), T([88, 88, 1, 1], th.float16), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 36, 20, 20], th.float16, (14400, 1, 720, 36)), T([1, 88, 20, 20], th.float16), T([36, 88, 1, 1], th.float16), [36], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 16, '((T([1, 88, 20, 20], th.float16), T([1, 88, 20, 20], th.float16), T([88, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 88, [True, True, False]), {})'
cnt: 14, '((T([1, 88, 20, 20], th.float16), T([1, 88, 20, 20], th.float16), T([88, 88, 1, 1], th.float16), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 36, 40, 40], th.float16, (57600, 1, 1440, 36)), T([1, 88, 40, 40], th.float16), T([36, 88, 1, 1], th.float16), [36], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 16, '((T([1, 88, 40, 40], th.float16), T([1, 88, 40, 40], th.float16), T([88, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 88, [True, True, False]), {})'
cnt: 14, '((T([1, 88, 40, 40], th.float16), T([1, 88, 40, 40], th.float16), T([88, 88, 1, 1], th.float16), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 36, 80, 80], th.float16, (230400, 1, 2880, 36)), T([1, 88, 80, 80], th.float16), T([36, 88, 1, 1], th.float16), [36], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 12, '((T([1, 88, 80, 80], th.float16), T([1, 88, 80, 80], th.float16), T([88, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 88, [True, True, False]), {})'
cnt: 10, '((T([1, 88, 80, 80], th.float16), T([1, 88, 80, 80], th.float16), T([88, 88, 1, 1], th.float16), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 810, 5, 5], th.float16, (20250, 1, 4050, 810)), T([1, 88, 5, 5], th.float16), T([810, 88, 1, 1], th.float16), [810], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 810, 10, 10], th.float16, (81000, 1, 8100, 810)), T([1, 88, 10, 10], th.float16), T([810, 88, 1, 1], th.float16), [810], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 810, 20, 20], th.float16, (324000, 1, 16200, 810)), T([1, 88, 20, 20], th.float16), T([810, 88, 1, 1], th.float16), [810], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 810, 40, 40], th.float16, (1296000, 1, 32400, 810)), T([1, 88, 40, 40], th.float16), T([810, 88, 1, 1], th.float16), [810], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 810, 80, 80], th.float16, (5184000, 1, 64800, 810)), T([1, 88, 80, 80], th.float16), T([810, 88, 1, 1], th.float16), [810], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 3, '((T([1, 88, 20, 20], th.float16), T([1, 320, 20, 20], th.float16), T([88, 320, 1, 1], th.float16), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 2, '((T([1, 88, 40, 40], th.float16), T([1, 112, 40, 40], th.float16), T([88, 112, 1, 1], th.float16), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 88, 80, 80], th.float16), T([1, 40, 80, 80], th.float16), T([88, 40, 1, 1], th.float16), [88], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 320, 20, 20], th.float16), T([1, 1920, 20, 20], th.float16), T([320, 1920, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([1, 1920, 1, 1], th.float16), T([1, 80, 1, 1], th.float16), T([1920, 80, 1, 1], th.float16), [1920], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 80, 1, 1], th.float16), T([1, 1920, 1, 1], th.float16), T([80, 1920, 1, 1], th.float16), [80], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 1920, 20, 20], th.float16), T([1, 1920, 20, 20], th.float16), T([1920, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1920, [True, True, False]), {})'
cnt: 1, '((T([1, 1920, 20, 20], th.float16), T([1, 320, 20, 20], th.float16), T([1920, 320, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([1, 320, 20, 20], th.float16), T([1, 1152, 20, 20], th.float16), T([320, 1152, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 5, '((T([1, 1152, 1, 1], th.float16), T([1, 48, 1, 1], th.float16), T([1152, 48, 1, 1], th.float16), [1152], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 5, '((T([1, 48, 1, 1], th.float16), T([1, 1152, 1, 1], th.float16), T([48, 1152, 1, 1], th.float16), [48], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 1152, 20, 20], th.float16), T([1, 1152, 20, 20], th.float16), T([1152, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1152, [True, True, False]), {})'
cnt: 5, '((T([1, 1152, 20, 20], th.float16), T([1, 192, 20, 20], th.float16), T([1152, 192, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 4, '((T([1, 192, 20, 20], th.float16), T([1, 1152, 20, 20], th.float16), T([192, 1152, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 4, '((T([1, 1152, 20, 20], th.float16), T([1, 1152, 20, 20], th.float16), T([1152, 1, 5, 5], th.float16), [0], [1, 1], [2, 2], [1, 1], False, [0, 0], 1152, [True, True, False]), {})'
cnt: 1, '((T([1, 192, 20, 20], th.float16), T([1, 672, 20, 20], th.float16), T([192, 672, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 4, '((T([1, 672, 1, 1], th.float16), T([1, 28, 1, 1], th.float16), T([672, 28, 1, 1], th.float16), [672], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 4, '((T([1, 28, 1, 1], th.float16), T([1, 672, 1, 1], th.float16), T([28, 672, 1, 1], th.float16), [28], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16), T([1, 672, 43, 43], th.float16), T([672, 1, 5, 5], th.float16), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 672, [True, True, False]), {})'
cnt: 4, '((T([1, 672, 40, 40], th.float16), T([1, 112, 40, 40], th.float16), T([672, 112, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 3, '((T([1, 112, 40, 40], th.float16), T([1, 672, 40, 40], th.float16), T([112, 672, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 3, '((T([1, 672, 40, 40], th.float16), T([1, 672, 40, 40], th.float16), T([672, 1, 5, 5], th.float16), [0], [1, 1], [2, 2], [1, 1], False, [0, 0], 672, [True, True, False]), {})'
cnt: 1, '((T([1, 112, 40, 40], th.float16), T([1, 480, 40, 40], th.float16), T([112, 480, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 4, '((T([1, 480, 1, 1], th.float16), T([1, 20, 1, 1], th.float16), T([480, 20, 1, 1], th.float16), [480], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 4, '((T([1, 20, 1, 1], th.float16), T([1, 480, 1, 1], th.float16), T([20, 480, 1, 1], th.float16), [20], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 480, 40, 40], th.float16), T([1, 480, 40, 40], th.float16), T([480, 1, 5, 5], th.float16), [0], [1, 1], [2, 2], [1, 1], False, [0, 0], 480, [True, True, False]), {})'
cnt: 4, '((T([1, 480, 40, 40], th.float16), T([1, 80, 40, 40], th.float16), T([480, 80, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 3, '((T([1, 80, 40, 40], th.float16), T([1, 480, 40, 40], th.float16), T([80, 480, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 3, '((T([1, 480, 40, 40], th.float16), T([1, 480, 40, 40], th.float16), T([480, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 480, [True, True, False]), {})'
cnt: 1, '((T([1, 80, 40, 40], th.float16), T([1, 240, 40, 40], th.float16), T([80, 240, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 3, '((T([1, 240, 1, 1], th.float16), T([1, 10, 1, 1], th.float16), T([240, 10, 1, 1], th.float16), [240], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 3, '((T([1, 10, 1, 1], th.float16), T([1, 240, 1, 1], th.float16), T([10, 240, 1, 1], th.float16), [10], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16), T([1, 240, 81, 81], th.float16), T([240, 1, 3, 3], th.float16), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 240, [True, True, False]), {})'
cnt: 3, '((T([1, 240, 80, 80], th.float16), T([1, 40, 80, 80], th.float16), T([240, 40, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([1, 40, 80, 80], th.float16), T([1, 240, 80, 80], th.float16), T([40, 240, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([1, 240, 80, 80], th.float16), T([1, 240, 80, 80], th.float16), T([240, 1, 5, 5], th.float16), [0], [1, 1], [2, 2], [1, 1], False, [0, 0], 240, [True, True, False]), {})'
cnt: 1, '((T([1, 40, 80, 80], th.float16), T([1, 144, 80, 80], th.float16), T([40, 144, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 3, '((T([1, 144, 1, 1], th.float16), T([1, 6, 1, 1], th.float16), T([144, 6, 1, 1], th.float16), [144], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 3, '((T([1, 6, 1, 1], th.float16), T([1, 144, 1, 1], th.float16), T([6, 144, 1, 1], th.float16), [6], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16), T([1, 144, 163, 163], th.float16), T([144, 1, 5, 5], th.float16), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 144, [True, True, False]), {})'
cnt: 3, '((T([1, 144, 160, 160], th.float16), T([1, 24, 160, 160], th.float16), T([144, 24, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([1, 24, 160, 160], th.float16), T([1, 144, 160, 160], th.float16), T([24, 144, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([1, 144, 160, 160], th.float16), T([1, 144, 160, 160], th.float16), T([144, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 144, [True, True, False]), {})'
cnt: 1, '((T([1, 24, 160, 160], th.float16), T([1, 96, 160, 160], th.float16), T([24, 96, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([1, 96, 1, 1], th.float16), T([1, 4, 1, 1], th.float16), T([96, 4, 1, 1], th.float16), [96], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 4, 1, 1], th.float16), T([1, 96, 1, 1], th.float16), T([4, 96, 1, 1], th.float16), [4], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16), T([1, 96, 321, 321], th.float16), T([96, 1, 3, 3], th.float16), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 96, [True, True, False]), {})'
cnt: 1, '((T([1, 96, 320, 320], th.float16), T([1, 16, 320, 320], th.float16), T([96, 16, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16), T([1, 16, 320, 320], th.float16), T([16, 16, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([1, 16, 1, 1], th.float16), T([1, 4, 1, 1], th.float16), T([16, 4, 1, 1], th.float16), [16], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 4, 1, 1], th.float16), T([1, 16, 1, 1], th.float16), T([4, 16, 1, 1], th.float16), [4], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16), T([1, 16, 320, 320], th.float16), T([16, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 16, [True, True, False]), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16), T([1, 32, 320, 320], th.float16), T([16, 32, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([1, 32, 1, 1], th.float16), T([1, 8, 1, 1], th.float16), T([32, 8, 1, 1], th.float16), [32], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 8, 1, 1], th.float16), T([1, 32, 1, 1], th.float16), T([8, 32, 1, 1], th.float16), [8], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([1, 32, 320, 320], th.float16), T([1, 32, 320, 320], th.float16), T([32, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 32, [True, True, False]), {})'
cnt: 1, '((T([1, 32, 320, 320], th.float16), T([1, 3, 641, 641], th.float16), T([32, 3, 3, 3], th.float16), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [False, True, False]), {})'
Operator: aten.copy_.default
cnt: 1, '((T([1, 3, 640, 640], th.float16), T([1, 3, 640, 640], th.float16)), {})'
Operator: aten.div.Scalar
cnt: 2, '((T([5000], th.float16), 2), {})'
cnt: 2, '((T([5000], th.float32), 2.0), {})'
cnt: 1, '((T([5000, 4], th.float32), 2), {})'
cnt: 1, '((T([1, 1920, 20, 20], th.float16, (1920, 1, 0, 0)), 400), {})'
cnt: 5, '((T([1, 1152, 20, 20], th.float16, (1152, 1, 0, 0)), 400), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16, (672, 1, 0, 0)), 400), {})'
cnt: 3, '((T([1, 672, 40, 40], th.float16, (672, 1, 0, 0)), 1600), {})'
cnt: 4, '((T([1, 480, 40, 40], th.float16, (480, 1, 0, 0)), 1600), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16, (240, 1, 0, 0)), 1600), {})'
cnt: 2, '((T([1, 240, 80, 80], th.float16, (240, 1, 0, 0)), 6400), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16, (144, 1, 0, 0)), 6400), {})'
cnt: 2, '((T([1, 144, 160, 160], th.float16, (144, 1, 0, 0)), 25600), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16, (96, 1, 0, 0)), 25600), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16, (16, 1, 0, 0)), 102400), {})'
cnt: 1, '((T([1, 32, 320, 320], th.float16, (32, 1, 0, 0)), 102400), {})'
Operator: aten.div.Tensor
cnt: 80, '((T([1, 88, 10, 10], th.float16), T([], th.float16)), {})'
cnt: 80, '((T([1, 88, 20, 20], th.float16), T([], th.float16)), {})'
cnt: 80, '((T([1, 88, 40, 40], th.float16), T([], th.float16)), {})'
cnt: 32, '((T([1, 88, 80, 80], th.float16), T([], th.float16)), {})'
cnt: 32, '((T([1, 88, 5, 5], th.float16), T([], th.float16)), {})'
cnt: 1, '((T([2], th.int32), T([], th.float16)), {})'
cnt: 2, '((T([], th.float32), 600), {})'
cnt: 2, '((T([5000], th.float32), T([], th.float64)), {})'
Operator: aten.eq.Tensor
cnt: 1, '((T([5000, 4], th.float32), T([4], th.float16)), {})'
Operator: aten.exp.default
cnt: 2, '((T([5000], th.float32, (4,)),), {})'
Operator: aten.floor_divide.default
cnt: 1, '((T([1, 5000], th.int64), 90), {})'
Operator: aten.gather.default
cnt: 1, '((T([1, 76725, 4], th.float16), 1, T([1, 5000, 4], th.int64, (5000, 1, 0))), {})'
cnt: 1, '((T([1, 76725, 90], th.float16), 1, T([1, 5000, 90], th.int64, (5000, 1, 0))), {})'
cnt: 1, '((T([1, 5000, 90], th.float16), 2, T([1, 5000, 1], th.int64)), {})'
Operator: aten.ge.Scalar
cnt: 1, '((T([5000, 4], th.float32), 0), {})'
Operator: aten.gt.Tensor
cnt: 1, '((T([5000, 4], th.float32), T([4], th.float16)), {})'
Operator: aten.index.Tensor
cnt: 1, '((T([76725, 4], th.float16, (1, 76725)), [T([5000], th.int64)]), {})'
cnt: 1, '((T([5000, 4], th.float32), [T([100], th.int64)]), {})'
cnt: 1, '((T([5000, 1], th.float32), [T([100], th.int64)]), {})'
cnt: 1, '((T([5000, 1], th.int64), [T([100], th.int64)]), {})'
Operator: aten.masked_fill_.Scalar
cnt: 1, '((T([5000, 4], th.float32), T([5000, 4], th.bool), 0), {})'
Operator: aten.max.default
cnt: 1, '((T([5000, 4], th.float32),), {})'
Operator: aten.max_pool2d_with_indices.default
cnt: 5, '((T([1, 88, 21, 21], th.float16), [3, 3], [2, 2]), {})'
cnt: 5, '((T([1, 88, 11, 11], th.float16), [3, 3], [2, 2]), {})'
cnt: 4, '((T([1, 88, 81, 81], th.float16), [3, 3], [2, 2]), {})'
cnt: 4, '((T([1, 88, 41, 41], th.float16), [3, 3], [2, 2]), {})'
Operator: aten.max_pool2d_with_indices_backward.default
cnt: 5, '((T([1, 88, 5, 5], th.float16), T([1, 88, 11, 11], th.float16), [3, 3], [2, 2], [0, 0], [1, 1], False, T([1, 88, 5, 5], th.int64)), {})'
cnt: 5, '((T([1, 88, 10, 10], th.float16), T([1, 88, 21, 21], th.float16), [3, 3], [2, 2], [0, 0], [1, 1], False, T([1, 88, 10, 10], th.int64)), {})'
cnt: 4, '((T([1, 88, 20, 20], th.float16), T([1, 88, 41, 41], th.float16), [3, 3], [2, 2], [0, 0], [1, 1], False, T([1, 88, 20, 20], th.int64)), {})'
cnt: 4, '((T([1, 88, 40, 40], th.float16), T([1, 88, 81, 81], th.float16), [3, 3], [2, 2], [0, 0], [1, 1], False, T([1, 88, 40, 40], th.int64)), {})'
Operator: aten.mean.dim
cnt: 1, '((T([1, 32, 320, 320], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16), [2, 3], True), {})'
cnt: 2, '((T([1, 144, 160, 160], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16), [2, 3], True), {})'
cnt: 2, '((T([1, 240, 80, 80], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16), [2, 3], True), {})'
cnt: 4, '((T([1, 480, 40, 40], th.float16), [2, 3], True), {})'
cnt: 3, '((T([1, 672, 40, 40], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16), [2, 3], True), {})'
cnt: 5, '((T([1, 1152, 20, 20], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 1920, 20, 20], th.float16), [2, 3], True), {})'
Operator: aten.minimum.default
cnt: 1, '((T([5000, 4], th.float32), T([4], th.float16)), {})'
Operator: aten.mul.Tensor
cnt: 2, '((T([1, 32, 320, 320], th.float16), T([1, 32, 1, 1], th.float16)), {})'
cnt: 2, '((T([1, 16, 320, 320], th.float16), T([1, 16, 1, 1], th.float16)), {})'
cnt: 2, '((T([1, 96, 160, 160], th.float16), T([1, 96, 1, 1], th.float16)), {})'
cnt: 4, '((T([1, 144, 160, 160], th.float16), T([1, 144, 1, 1], th.float16)), {})'
cnt: 2, '((T([1, 144, 80, 80], th.float16), T([1, 144, 1, 1], th.float16)), {})'
cnt: 4, '((T([1, 240, 80, 80], th.float16), T([1, 240, 1, 1], th.float16)), {})'
cnt: 2, '((T([1, 240, 40, 40], th.float16), T([1, 240, 1, 1], th.float16)), {})'
cnt: 8, '((T([1, 480, 40, 40], th.float16), T([1, 480, 1, 1], th.float16)), {})'
cnt: 6, '((T([1, 672, 40, 40], th.float16), T([1, 672, 1, 1], th.float16)), {})'
cnt: 2, '((T([1, 672, 20, 20], th.float16), T([1, 672, 1, 1], th.float16)), {})'
cnt: 10, '((T([1, 1152, 20, 20], th.float16), T([1, 1152, 1, 1], th.float16)), {})'
cnt: 2, '((T([1, 1920, 20, 20], th.float16), T([1, 1920, 1, 1], th.float16)), {})'
cnt: 40, '((T([1, 88, 10, 10], th.float16), T([], th.float16)), {})'
cnt: 40, '((T([1, 88, 20, 20], th.float16), T([], th.float16)), {})'
cnt: 40, '((T([1, 88, 40, 40], th.float16), T([], th.float16)), {})'
cnt: 16, '((T([1, 88, 80, 80], th.float16), T([], th.float16)), {})'
cnt: 16, '((T([1, 88, 5, 5], th.float16), T([], th.float16)), {})'
cnt: 6, '((T([5000], th.float32), T([5000], th.float16)), {})'
cnt: 2, '((T([5000], th.float32, (4,)), T([5000], th.float16)), {})'
cnt: 1, '((T([5000], th.float32), T([], th.float32)), {})'
cnt: 1, '((T([100, 4], th.float32), T([], th.float16)), {})'
cnt: 1, '((T([100, 4], th.float32, (0, 0)), T([], th.float16)), {})'
cnt: 2, '((T([5000], th.float32), T([5000], th.float32)), {})'
cnt: 16, '((T([1, 88, 5, 5], th.float16), T([1, 88, 5, 5], th.float16)), {})'
cnt: 40, '((T([1, 88, 10, 10], th.float16), T([1, 88, 10, 10], th.float16)), {})'
cnt: 40, '((T([1, 88, 20, 20], th.float16), T([1, 88, 20, 20], th.float16)), {})'
cnt: 40, '((T([1, 88, 40, 40], th.float16), T([1, 88, 40, 40], th.float16)), {})'
cnt: 16, '((T([1, 88, 80, 80], th.float16), T([1, 88, 80, 80], th.float16)), {})'
cnt: 1, '((T([1, 1920, 20, 20], th.float16), T([1, 1920, 20, 20], th.float16)), {})'
cnt: 5, '((T([1, 1152, 20, 20], th.float16), T([1, 1152, 20, 20], th.float16)), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16), T([1, 672, 20, 20], th.float16)), {})'
cnt: 3, '((T([1, 672, 40, 40], th.float16), T([1, 672, 40, 40], th.float16)), {})'
cnt: 4, '((T([1, 480, 40, 40], th.float16), T([1, 480, 40, 40], th.float16)), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16), T([1, 240, 40, 40], th.float16)), {})'
cnt: 2, '((T([1, 240, 80, 80], th.float16), T([1, 240, 80, 80], th.float16)), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16), T([1, 144, 80, 80], th.float16)), {})'
cnt: 2, '((T([1, 144, 160, 160], th.float16), T([1, 144, 160, 160], th.float16)), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16), T([1, 96, 160, 160], th.float16)), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16), T([1, 16, 320, 320], th.float16)), {})'
cnt: 1, '((T([1, 32, 320, 320], th.float16), T([1, 32, 320, 320], th.float16)), {})'
Operator: aten.native_batch_norm.default
cnt: 2, '((T([1, 32, 320, 320], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), False, 0.1, 0.001), {})'
cnt: 3, '((T([1, 16, 320, 320], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float16), False, 0.1, 0.001), {})'
cnt: 1, '((T([1, 96, 320, 320], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), False, 0.1, 0.001), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), False, 0.1, 0.001), {})'
cnt: 3, '((T([1, 24, 160, 160], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float16), False, 0.1, 0.001), {})'
cnt: 5, '((T([1, 144, 160, 160], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), False, 0.1, 0.001), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), False, 0.1, 0.001), {})'
cnt: 3, '((T([1, 40, 80, 80], th.float16), T([40], th.float16), T([40], th.float16), T([40], th.float16), T([40], th.float16), False, 0.1, 0.001), {})'
cnt: 5, '((T([1, 240, 80, 80], th.float16), T([240], th.float16), T([240], th.float16), T([240], th.float16), T([240], th.float16), False, 0.1, 0.001), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16), T([240], th.float16), T([240], th.float16), T([240], th.float16), T([240], th.float16), False, 0.1, 0.001), {})'
cnt: 4, '((T([1, 80, 40, 40], th.float16), T([80], th.float16), T([80], th.float16), T([80], th.float16), T([80], th.float16), False, 0.1, 0.001), {})'
cnt: 8, '((T([1, 480, 40, 40], th.float16), T([480], th.float16), T([480], th.float16), T([480], th.float16), T([480], th.float16), False, 0.1, 0.001), {})'
cnt: 4, '((T([1, 112, 40, 40], th.float16), T([112], th.float16), T([112], th.float16), T([112], th.float16), T([112], th.float16), False, 0.1, 0.001), {})'
cnt: 7, '((T([1, 672, 40, 40], th.float16), T([672], th.float16), T([672], th.float16), T([672], th.float16), T([672], th.float16), False, 0.1, 0.001), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16), T([672], th.float16), T([672], th.float16), T([672], th.float16), T([672], th.float16), False, 0.1, 0.001), {})'
cnt: 5, '((T([1, 192, 20, 20], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float16), False, 0.1, 0.001), {})'
cnt: 10, '((T([1, 1152, 20, 20], th.float16), T([1152], th.float16), T([1152], th.float16), T([1152], th.float16), T([1152], th.float16), False, 0.1, 0.001), {})'
cnt: 2, '((T([1, 320, 20, 20], th.float16), T([320], th.float16), T([320], th.float16), T([320], th.float16), T([320], th.float16), False, 0.1, 0.001), {})'
cnt: 2, '((T([1, 1920, 20, 20], th.float16), T([1920], th.float16), T([1920], th.float16), T([1920], th.float16), T([1920], th.float16), False, 0.1, 0.001), {})'
cnt: 17, '((T([1, 88, 20, 20], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), False, 0.01, 0.001), {})'
cnt: 14, '((T([1, 88, 10, 10], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), False, 0.01, 0.001), {})'
cnt: 16, '((T([1, 88, 40, 40], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), False, 0.01, 0.001), {})'
cnt: 11, '((T([1, 88, 80, 80], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), False, 0.01, 0.001), {})'
cnt: 10, '((T([1, 88, 5, 5], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), False, 0.01, 0.001), {})'
Operator: aten.native_batch_norm_backward.default
cnt: 10, '((T([1, 88, 5, 5], th.float16), T([1, 88, 5, 5], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float32), T([88], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 14, '((T([1, 88, 10, 10], th.float16), T([1, 88, 10, 10], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float32), T([88], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 17, '((T([1, 88, 20, 20], th.float16), T([1, 88, 20, 20], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float32), T([88], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 16, '((T([1, 88, 40, 40], th.float16), T([1, 88, 40, 40], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float32), T([88], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 11, '((T([1, 88, 80, 80], th.float16), T([1, 88, 80, 80], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float16), T([88], th.float32), T([88], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 2, '((T([1, 320, 20, 20], th.float16), T([1, 320, 20, 20], th.float16), T([320], th.float16), T([320], th.float16), T([320], th.float16), T([320], th.float32), T([320], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 2, '((T([1, 1920, 20, 20], th.float16), T([1, 1920, 20, 20], th.float16), T([1920], th.float16), T([1920], th.float16), T([1920], th.float16), T([1920], th.float32), T([1920], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 10, '((T([1, 1152, 20, 20], th.float16), T([1, 1152, 20, 20], th.float16), T([1152], th.float16), T([1152], th.float16), T([1152], th.float16), T([1152], th.float32), T([1152], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 5, '((T([1, 192, 20, 20], th.float16), T([1, 192, 20, 20], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float32), T([192], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16), T([1, 672, 20, 20], th.float16), T([672], th.float16), T([672], th.float16), T([672], th.float16), T([672], th.float32), T([672], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 7, '((T([1, 672, 40, 40], th.float16), T([1, 672, 40, 40], th.float16), T([672], th.float16), T([672], th.float16), T([672], th.float16), T([672], th.float32), T([672], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 4, '((T([1, 112, 40, 40], th.float16), T([1, 112, 40, 40], th.float16), T([112], th.float16), T([112], th.float16), T([112], th.float16), T([112], th.float32), T([112], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 8, '((T([1, 480, 40, 40], th.float16), T([1, 480, 40, 40], th.float16), T([480], th.float16), T([480], th.float16), T([480], th.float16), T([480], th.float32), T([480], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 4, '((T([1, 80, 40, 40], th.float16), T([1, 80, 40, 40], th.float16), T([80], th.float16), T([80], th.float16), T([80], th.float16), T([80], th.float32), T([80], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16), T([1, 240, 40, 40], th.float16), T([240], th.float16), T([240], th.float16), T([240], th.float16), T([240], th.float32), T([240], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 5, '((T([1, 240, 80, 80], th.float16), T([1, 240, 80, 80], th.float16), T([240], th.float16), T([240], th.float16), T([240], th.float16), T([240], th.float32), T([240], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 3, '((T([1, 40, 80, 80], th.float16), T([1, 40, 80, 80], th.float16), T([40], th.float16), T([40], th.float16), T([40], th.float16), T([40], th.float32), T([40], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16), T([1, 144, 80, 80], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float32), T([144], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 5, '((T([1, 144, 160, 160], th.float16), T([1, 144, 160, 160], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float32), T([144], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 3, '((T([1, 24, 160, 160], th.float16), T([1, 24, 160, 160], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float32), T([24], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16), T([1, 96, 160, 160], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float32), T([96], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 1, '((T([1, 96, 320, 320], th.float16), T([1, 96, 320, 320], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float32), T([96], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 3, '((T([1, 16, 320, 320], th.float16), T([1, 16, 320, 320], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float32), T([16], th.float32), False, 0.001, [True, True, True]), {})'
cnt: 2, '((T([1, 32, 320, 320], th.float16), T([1, 32, 320, 320], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float32), T([32], th.float32), False, 0.001, [True, True, True]), {})'
Operator: aten.neg.default
cnt: 2, '((T([5000], th.float32, (4,)),), {})'
cnt: 8, '((T([1, 88, 5, 5], th.float16),), {})'
cnt: 20, '((T([1, 88, 10, 10], th.float16),), {})'
cnt: 20, '((T([1, 88, 20, 20], th.float16),), {})'
cnt: 20, '((T([1, 88, 40, 40], th.float16),), {})'
cnt: 8, '((T([1, 88, 80, 80], th.float16),), {})'
Operator: aten.new_zeros.default
cnt: 1, '((T([100, 1], th.float32, (0, 0)), [5000, 1]), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float32, \'layout\': th.strided})'
cnt: 1, '((T([100, 4], th.float32), [5000, 4]), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float32, \'layout\': th.strided})'
cnt: 1, '((T([1, 5000, 1], th.float16), [1, 5000, 90]), {})'
cnt: 1, '((T([1, 5000, 90], th.float16), [1, 76725, 90]), {})'
cnt: 1, '((T([1, 5000, 4], th.float16), [1, 76725, 4]), {})'
Operator: aten.relu.default
cnt: 20, '((T([2], th.float16),), {})'
cnt: 12, '((T([3], th.float16),), {})'
Operator: aten.remainder.Scalar
cnt: 1, '((T([1, 5000], th.int64), 90), {})'
Operator: aten.scatter_add_.default
cnt: 1, '((T([1, 5000, 90], th.float16), 2, T([1, 5000, 1], th.int64), T([1, 5000, 1], th.float16)), {})'
cnt: 1, '((T([1, 76725, 90], th.float16), 1, T([1, 5000, 90], th.int64, (5000, 1, 0)), T([1, 5000, 90], th.float16)), {})'
cnt: 1, '((T([1, 76725, 4], th.float16), 1, T([1, 5000, 4], th.int64, (5000, 1, 0)), T([1, 5000, 4], th.float16)), {})'
Operator: aten.select_backward.default
cnt: 1, '((T([5000, 4], th.float16), [1, 5000, 4], 0, 0), {})'
cnt: 1, '((T([5000, 1], th.float16), [1, 5000, 1], 0, 0), {})'
cnt: 20, '((T([], th.float16), [2], 0, 1), {})'
cnt: 20, '((T([], th.float16), [2], 0, 0), {})'
cnt: 12, '((T([], th.float16), [3], 0, 2), {})'
cnt: 12, '((T([], th.float16), [3], 0, 1), {})'
cnt: 12, '((T([], th.float16), [3], 0, 0), {})'
Operator: aten.sigmoid.default
cnt: 1, '((T([1, 32, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 16, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 96, 1, 1], th.float16),), {})'
cnt: 3, '((T([1, 144, 1, 1], th.float16),), {})'
cnt: 3, '((T([1, 240, 1, 1], th.float16),), {})'
cnt: 4, '((T([1, 480, 1, 1], th.float16),), {})'
cnt: 4, '((T([1, 672, 1, 1], th.float16),), {})'
cnt: 5, '((T([1, 1152, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 1920, 1, 1], th.float16),), {})'
cnt: 1, '((T([5000, 1], th.float16),), {})'
Operator: aten.sigmoid_backward.default
cnt: 1, '((T([5000, 1], th.float16), T([5000, 1], th.float16)), {})'
cnt: 1, '((T([1, 1920, 1, 1], th.float16), T([1, 1920, 1, 1], th.float16)), {})'
cnt: 5, '((T([1, 1152, 1, 1], th.float16), T([1, 1152, 1, 1], th.float16)), {})'
cnt: 4, '((T([1, 672, 1, 1], th.float16), T([1, 672, 1, 1], th.float16)), {})'
cnt: 4, '((T([1, 480, 1, 1], th.float16), T([1, 480, 1, 1], th.float16)), {})'
cnt: 3, '((T([1, 240, 1, 1], th.float16), T([1, 240, 1, 1], th.float16)), {})'
cnt: 3, '((T([1, 144, 1, 1], th.float16), T([1, 144, 1, 1], th.float16)), {})'
cnt: 1, '((T([1, 96, 1, 1], th.float16), T([1, 96, 1, 1], th.float16)), {})'
cnt: 1, '((T([1, 16, 1, 1], th.float16), T([1, 16, 1, 1], th.float16)), {})'
cnt: 1, '((T([1, 32, 1, 1], th.float16), T([1, 32, 1, 1], th.float16)), {})'
Operator: aten.silu_.default
cnt: 2, '((T([1, 32, 320, 320], th.float16),), {})'
cnt: 1, '((T([1, 8, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16),), {})'
cnt: 2, '((T([1, 4, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 96, 320, 320], th.float16),), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16),), {})'
cnt: 5, '((T([1, 144, 160, 160], th.float16),), {})'
cnt: 3, '((T([1, 6, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16),), {})'
cnt: 5, '((T([1, 240, 80, 80], th.float16),), {})'
cnt: 3, '((T([1, 10, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16),), {})'
cnt: 8, '((T([1, 480, 40, 40], th.float16),), {})'
cnt: 4, '((T([1, 20, 1, 1], th.float16),), {})'
cnt: 7, '((T([1, 672, 40, 40], th.float16),), {})'
cnt: 4, '((T([1, 28, 1, 1], th.float16),), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16),), {})'
cnt: 10, '((T([1, 1152, 20, 20], th.float16),), {})'
cnt: 5, '((T([1, 48, 1, 1], th.float16),), {})'
cnt: 2, '((T([1, 1920, 20, 20], th.float16),), {})'
cnt: 1, '((T([1, 80, 1, 1], th.float16),), {})'
cnt: 14, '((T([1, 88, 10, 10], th.float16),), {})'
cnt: 14, '((T([1, 88, 20, 20], th.float16),), {})'
cnt: 14, '((T([1, 88, 40, 40], th.float16),), {})'
cnt: 10, '((T([1, 88, 80, 80], th.float16),), {})'
cnt: 10, '((T([1, 88, 5, 5], th.float16),), {})'
Operator: aten.silu_backward.default
cnt: 10, '((T([1, 88, 5, 5], th.float16), T([1, 88, 5, 5], th.float16)), {})'
cnt: 14, '((T([1, 88, 10, 10], th.float16), T([1, 88, 10, 10], th.float16)), {})'
cnt: 14, '((T([1, 88, 20, 20], th.float16), T([1, 88, 20, 20], th.float16)), {})'
cnt: 14, '((T([1, 88, 40, 40], th.float16), T([1, 88, 40, 40], th.float16)), {})'
cnt: 10, '((T([1, 88, 80, 80], th.float16), T([1, 88, 80, 80], th.float16)), {})'
cnt: 1, '((T([1, 80, 1, 1], th.float16), T([1, 80, 1, 1], th.float16)), {})'
cnt: 2, '((T([1, 1920, 20, 20], th.float16), T([1, 1920, 20, 20], th.float16)), {})'
cnt: 5, '((T([1, 48, 1, 1], th.float16), T([1, 48, 1, 1], th.float16)), {})'
cnt: 10, '((T([1, 1152, 20, 20], th.float16), T([1, 1152, 20, 20], th.float16)), {})'
cnt: 4, '((T([1, 28, 1, 1], th.float16), T([1, 28, 1, 1], th.float16)), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16), T([1, 672, 20, 20], th.float16)), {})'
cnt: 7, '((T([1, 672, 40, 40], th.float16), T([1, 672, 40, 40], th.float16)), {})'
cnt: 4, '((T([1, 20, 1, 1], th.float16), T([1, 20, 1, 1], th.float16)), {})'
cnt: 8, '((T([1, 480, 40, 40], th.float16), T([1, 480, 40, 40], th.float16)), {})'
cnt: 3, '((T([1, 10, 1, 1], th.float16), T([1, 10, 1, 1], th.float16)), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16), T([1, 240, 40, 40], th.float16)), {})'
cnt: 5, '((T([1, 240, 80, 80], th.float16), T([1, 240, 80, 80], th.float16)), {})'
cnt: 3, '((T([1, 6, 1, 1], th.float16), T([1, 6, 1, 1], th.float16)), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16), T([1, 144, 80, 80], th.float16)), {})'
cnt: 5, '((T([1, 144, 160, 160], th.float16), T([1, 144, 160, 160], th.float16)), {})'
cnt: 2, '((T([1, 4, 1, 1], th.float16), T([1, 4, 1, 1], th.float16)), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16), T([1, 96, 160, 160], th.float16)), {})'
cnt: 1, '((T([1, 96, 320, 320], th.float16), T([1, 96, 320, 320], th.float16)), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16), T([1, 16, 320, 320], th.float16)), {})'
cnt: 1, '((T([1, 8, 1, 1], th.float16), T([1, 8, 1, 1], th.float16)), {})'
cnt: 2, '((T([1, 32, 320, 320], th.float16), T([1, 32, 320, 320], th.float16)), {})'
Operator: aten.stack.default
cnt: 4, '(([T([1, 88, 10, 10], th.float16), T([1, 88, 10, 10], th.float16)], -1), {})'
cnt: 4, '(([T([1, 88, 20, 20], th.float16), T([1, 88, 20, 20], th.float16)], -1), {})'
cnt: 4, '(([T([1, 88, 40, 40], th.float16), T([1, 88, 40, 40], th.float16)], -1), {})'
cnt: 4, '(([T([1, 88, 80, 80], th.float16), T([1, 88, 80, 80], th.float16)], -1), {})'
cnt: 4, '(([T([1, 88, 40, 40], th.float16), T([1, 88, 40, 40], th.float16), T([1, 88, 40, 40], th.float16)], -1), {})'
cnt: 4, '(([T([1, 88, 20, 20], th.float16), T([1, 88, 20, 20], th.float16), T([1, 88, 20, 20], th.float16)], -1), {})'
cnt: 4, '(([T([1, 88, 10, 10], th.float16), T([1, 88, 10, 10], th.float16), T([1, 88, 10, 10], th.float16)], -1), {})'
cnt: 4, '(([T([1, 88, 5, 5], th.float16), T([1, 88, 5, 5], th.float16)], -1), {})'
cnt: 2, '(([T([5000], th.float32), T([5000], th.float32), T([5000], th.float32), T([5000], th.float32)], 1), {})'
cnt: 1, '(([T([100, 6], th.float32)],), {})'
Operator: aten.sub.Tensor
cnt: 2, '((T([5000], th.float16, (4,)), T([5000], th.float16, (4,))), {})'
cnt: 2, '((T([5000], th.float32), T([5000], th.float32)), {})'
Operator: aten.sum.SymInt
cnt: 1, '((T([1, 1920, 20, 20], th.float16), [2, 3], True), {})'
cnt: 5, '((T([1, 1152, 20, 20], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 672, 20, 20], th.float16), [2, 3], True), {})'
cnt: 3, '((T([1, 672, 40, 40], th.float16), [2, 3], True), {})'
cnt: 4, '((T([1, 480, 40, 40], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 240, 40, 40], th.float16), [2, 3], True), {})'
cnt: 2, '((T([1, 240, 80, 80], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 144, 80, 80], th.float16), [2, 3], True), {})'
cnt: 2, '((T([1, 144, 160, 160], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 96, 160, 160], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 16, 320, 320], th.float16), [2, 3], True), {})'
cnt: 1, '((T([1, 32, 320, 320], th.float16), [2, 3], True), {})'
Operator: aten.sum.default
cnt: 20, '((T([2], th.float16),), {})'
cnt: 12, '((T([3], th.float16),), {})'
cnt: 1, '((T([1, 100, 6], th.float32),), {})'
cnt: 16, '((T([1, 88, 5, 5], th.float16),), {})'
cnt: 40, '((T([1, 88, 10, 10], th.float16),), {})'
cnt: 40, '((T([1, 88, 20, 20], th.float16),), {})'
cnt: 40, '((T([1, 88, 40, 40], th.float16),), {})'
cnt: 16, '((T([1, 88, 80, 80], th.float16),), {})'
Operator: aten.sum.dim_IntList
cnt: 4, '((T([1, 88, 10, 10, 2], th.float16), [-1]), {})'
cnt: 4, '((T([1, 88, 20, 20, 2], th.float16), [-1]), {})'
cnt: 4, '((T([1, 88, 40, 40, 2], th.float16), [-1]), {})'
cnt: 4, '((T([1, 88, 80, 80, 2], th.float16), [-1]), {})'
cnt: 4, '((T([1, 88, 40, 40, 3], th.float16), [-1]), {})'
cnt: 4, '((T([1, 88, 20, 20, 3], th.float16), [-1]), {})'
cnt: 4, '((T([1, 88, 10, 10, 3], th.float16), [-1]), {})'
cnt: 4, '((T([1, 88, 5, 5, 2], th.float16), [-1]), {})'
Operator: aten.threshold_backward.default
cnt: 20, '((T([2], th.float16), T([2], th.float16), 0), {})'
cnt: 12, '((T([3], th.float16), T([3], th.float16), 0), {})'
Operator: aten.topk.default
cnt: 1, '((T([1, 6905250], th.float16), 5000, 1), {})'
Operator: aten.unbind.int
cnt: 2, '((T([5000, 4], th.float32), 1), {})'
cnt: 1, '((T([1, 100, 6], th.float32, (0, 0, 0)),), {})'
cnt: 4, '((T([1, 88, 5, 5, 2], th.float16, (2200, 25, 5, 1, 0)), -1), {})'
cnt: 4, '((T([1, 88, 10, 10, 3], th.float16, (8800, 100, 10, 1, 0)), -1), {})'
cnt: 4, '((T([1, 88, 20, 20, 3], th.float16, (35200, 400, 20, 1, 0)), -1), {})'
cnt: 4, '((T([1, 88, 40, 40, 3], th.float16, (140800, 1600, 40, 1, 0)), -1), {})'
cnt: 4, '((T([1, 88, 80, 80, 2], th.float16, (563200, 6400, 80, 1, 0)), -1), {})'
cnt: 4, '((T([1, 88, 40, 40, 2], th.float16, (140800, 1600, 40, 1, 0)), -1), {})'
cnt: 4, '((T([1, 88, 20, 20, 2], th.float16, (35200, 400, 20, 1, 0)), -1), {})'
cnt: 4, '((T([1, 88, 10, 10, 2], th.float16, (8800, 100, 10, 1, 0)), -1), {})'
Operator: aten.upsample_nearest2d.vec
cnt: 4, '((T([1, 88, 5, 5], th.float16), [10, 10], None), {})'
cnt: 4, '((T([1, 88, 10, 10], th.float16), [20, 20], None), {})'
cnt: 4, '((T([1, 88, 20, 20], th.float16), [40, 40], None), {})'
cnt: 4, '((T([1, 88, 40, 40], th.float16), [80, 80], None), {})'
Operator: aten.upsample_nearest2d_backward.vec
cnt: 4, '((T([1, 88, 80, 80], th.float16), [80, 80], [1, 88, 40, 40], None), {})'
cnt: 4, '((T([1, 88, 40, 40], th.float16), [40, 40], [1, 88, 20, 20], None), {})'
cnt: 4, '((T([1, 88, 20, 20], th.float16), [20, 20], [1, 88, 10, 10], None), {})'
cnt: 4, '((T([1, 88, 10, 10], th.float16), [10, 10], [1, 88, 5, 5], None), {})'
Operator: aten.where.self
cnt: 1, '((T([5000, 4], th.bool), T([5000, 4], th.float32), T([5000, 4], th.float32)), {})'
cnt: 1, '((T([5000, 4], th.bool), T([5000, 4], th.float32), T([], th.float32)), {})'
