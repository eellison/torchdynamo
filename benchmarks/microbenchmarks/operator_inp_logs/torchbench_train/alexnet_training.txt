Operator: aten._adaptive_avg_pool2d.default
cnt: 1, '((T([128, 256, 6, 6], th.float16), [6, 6]), {})'
Operator: aten._adaptive_avg_pool2d_backward.default
cnt: 1, '((T([128, 256, 6, 6], th.float16), T([128, 256, 6, 6], th.float16)), {})'
Operator: aten.addmm.default
cnt: 1, '((T([4096], th.float16), T([128, 9216], th.float16), T([9216, 4096], th.float16, (1, 9216))), {})'
cnt: 1, '((T([4096], th.float16), T([128, 4096], th.float16), T([4096, 4096], th.float16, (1, 4096))), {})'
cnt: 1, '((T([1000], th.float16), T([128, 4096], th.float16), T([4096, 1000], th.float16, (1, 4096))), {})'
Operator: aten.clone.default
cnt: 1, '((T([128, 3, 224, 224], th.float16),), {})'
Operator: aten.convolution.default
cnt: 1, '((T([128, 3, 224, 224], th.float16), T([64, 3, 11, 11], th.float16), T([64], th.float16), [4, 4], [2, 2], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 64, 27, 27], th.float16), T([192, 64, 5, 5], th.float16), T([192], th.float16), [1, 1], [2, 2], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 192, 13, 13], th.float16), T([384, 192, 3, 3], th.float16), T([384], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 384, 13, 13], th.float16), T([256, 384, 3, 3], th.float16), T([256], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 256, 13, 13], th.float16), T([256, 256, 3, 3], th.float16), T([256], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
Operator: aten.convolution_backward.default
cnt: 1, '((T([128, 256, 13, 13], th.float16), T([128, 256, 13, 13], th.float16), T([256, 256, 3, 3], th.float16), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([128, 256, 13, 13], th.float16), T([128, 384, 13, 13], th.float16), T([256, 384, 3, 3], th.float16), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([128, 384, 13, 13], th.float16), T([128, 192, 13, 13], th.float16), T([384, 192, 3, 3], th.float16), [384], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([128, 192, 27, 27], th.float16), T([128, 64, 27, 27], th.float16), T([192, 64, 5, 5], th.float16), [192], [1, 1], [2, 2], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([128, 64, 55, 55], th.float16), T([128, 3, 224, 224], th.float16), T([64, 3, 11, 11], th.float16), [64], [4, 4], [2, 2], [1, 1], False, [0, 0], 1, [False, True, True]), {})'
Operator: aten.copy_.default
cnt: 1, '((T([128, 3, 224, 224], th.float16), T([128, 3, 224, 224], th.float16)), {})'
Operator: aten.div.Tensor
cnt: 2, '((T([], th.float16), 128000), {})'
Operator: aten.max_pool2d_with_indices.default
cnt: 1, '((T([128, 64, 55, 55], th.float16), [3, 3], [2, 2]), {})'
cnt: 1, '((T([128, 192, 27, 27], th.float16), [3, 3], [2, 2]), {})'
cnt: 1, '((T([128, 256, 13, 13], th.float16), [3, 3], [2, 2]), {})'
Operator: aten.max_pool2d_with_indices_backward.default
cnt: 1, '((T([128, 256, 6, 6], th.float16), T([128, 256, 13, 13], th.float16), [3, 3], [2, 2], [0, 0], [1, 1], False, T([128, 256, 6, 6], th.int64)), {})'
cnt: 1, '((T([128, 192, 13, 13], th.float16), T([128, 192, 27, 27], th.float16), [3, 3], [2, 2], [0, 0], [1, 1], False, T([128, 192, 13, 13], th.int64)), {})'
cnt: 1, '((T([128, 64, 27, 27], th.float16), T([128, 64, 55, 55], th.float16), [3, 3], [2, 2], [0, 0], [1, 1], False, T([128, 64, 27, 27], th.int64)), {})'
Operator: aten.mm.default
cnt: 1, '((T([128, 1000], th.float16, (0, 0)), T([1000, 4096], th.float16)), {})'
cnt: 1, '((T([1000, 128], th.float16, (0, 0)), T([128, 4096], th.float16)), {})'
cnt: 1, '((T([128, 4096], th.float16), T([4096, 4096], th.float16)), {})'
cnt: 1, '((T([4096, 128], th.float16, (1, 4096)), T([128, 4096], th.float16)), {})'
cnt: 1, '((T([128, 4096], th.float16), T([4096, 9216], th.float16)), {})'
cnt: 1, '((T([4096, 128], th.float16, (1, 4096)), T([128, 9216], th.float16)), {})'
Operator: aten.relu_.default
cnt: 1, '((T([128, 64, 55, 55], th.float16),), {})'
cnt: 1, '((T([128, 192, 27, 27], th.float16),), {})'
cnt: 1, '((T([128, 384, 13, 13], th.float16),), {})'
cnt: 2, '((T([128, 256, 13, 13], th.float16),), {})'
cnt: 2, '((T([128, 4096], th.float16),), {})'
Operator: aten.sum.SymInt
cnt: 1, '((T([128, 1000], th.float16, (0, 0)), [0], True), {})'
cnt: 2, '((T([128, 4096], th.float16), [0], True), {})'
Operator: aten.sum.default
cnt: 1, '((T([128, 1000], th.float16),), {})'
Operator: aten.threshold_backward.default
cnt: 2, '((T([128, 4096], th.float16), T([128, 4096], th.float16), 0), {})'
cnt: 2, '((T([128, 256, 13, 13], th.float16), T([128, 256, 13, 13], th.float16), 0), {})'
cnt: 1, '((T([128, 384, 13, 13], th.float16), T([128, 384, 13, 13], th.float16), 0), {})'
cnt: 1, '((T([128, 192, 27, 27], th.float16), T([128, 192, 27, 27], th.float16), 0), {})'
cnt: 1, '((T([128, 64, 55, 55], th.float16), T([128, 64, 55, 55], th.float16), 0), {})'
