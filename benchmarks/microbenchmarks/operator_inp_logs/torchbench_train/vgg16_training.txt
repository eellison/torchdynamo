Operator: aten._adaptive_avg_pool2d.default
cnt: 1, '((T([64, 512, 7, 7], th.float16), [7, 7]), {})'
Operator: aten._adaptive_avg_pool2d_backward.default
cnt: 1, '((T([64, 512, 7, 7], th.float16), T([64, 512, 7, 7], th.float16)), {})'
Operator: aten.addmm.default
cnt: 1, '((T([4096], th.float16), T([64, 25088], th.float16), T([25088, 4096], th.float16, (1, 25088))), {})'
cnt: 1, '((T([4096], th.float16), T([64, 4096], th.float16), T([4096, 4096], th.float16, (1, 4096))), {})'
cnt: 1, '((T([1000], th.float16), T([64, 4096], th.float16), T([4096, 1000], th.float16, (1, 4096))), {})'
Operator: aten.clone.default
cnt: 1, '((T([64, 3, 224, 224], th.float16),), {})'
Operator: aten.convolution.default
cnt: 1, '((T([64, 3, 224, 224], th.float16), T([64, 3, 3, 3], th.float16), T([64], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([64, 64, 224, 224], th.float16), T([64, 64, 3, 3], th.float16), T([64], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([64, 64, 112, 112], th.float16), T([128, 64, 3, 3], th.float16), T([128], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([64, 128, 112, 112], th.float16), T([128, 128, 3, 3], th.float16), T([128], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([64, 128, 56, 56], th.float16), T([256, 128, 3, 3], th.float16), T([256], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([64, 256, 56, 56], th.float16), T([256, 256, 3, 3], th.float16), T([256], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([64, 256, 28, 28], th.float16), T([512, 256, 3, 3], th.float16), T([512], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([64, 512, 28, 28], th.float16), T([512, 512, 3, 3], th.float16), T([512], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([64, 512, 14, 14], th.float16), T([512, 512, 3, 3], th.float16), T([512], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
Operator: aten.convolution_backward.default
cnt: 3, '((T([64, 512, 14, 14], th.float16), T([64, 512, 14, 14], th.float16), T([512, 512, 3, 3], th.float16), [512], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 2, '((T([64, 512, 28, 28], th.float16), T([64, 512, 28, 28], th.float16), T([512, 512, 3, 3], th.float16), [512], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([64, 512, 28, 28], th.float16), T([64, 256, 28, 28], th.float16), T([512, 256, 3, 3], th.float16), [512], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 2, '((T([64, 256, 56, 56], th.float16), T([64, 256, 56, 56], th.float16), T([256, 256, 3, 3], th.float16), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([64, 256, 56, 56], th.float16), T([64, 128, 56, 56], th.float16), T([256, 128, 3, 3], th.float16), [256], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([64, 128, 112, 112], th.float16), T([64, 128, 112, 112], th.float16), T([128, 128, 3, 3], th.float16), [128], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([64, 128, 112, 112], th.float16), T([64, 64, 112, 112], th.float16), T([128, 64, 3, 3], th.float16), [128], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([64, 64, 224, 224], th.float16), T([64, 64, 224, 224], th.float16), T([64, 64, 3, 3], th.float16), [64], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([64, 64, 224, 224], th.float16), T([64, 3, 224, 224], th.float16), T([64, 3, 3, 3], th.float16), [64], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [False, True, True]), {})'
Operator: aten.copy_.default
cnt: 1, '((T([64, 3, 224, 224], th.float16), T([64, 3, 224, 224], th.float16)), {})'
Operator: aten.div.Tensor
cnt: 2, '((T([], th.float16), 64000), {})'
Operator: aten.max_pool2d_with_indices.default
cnt: 1, '((T([64, 64, 224, 224], th.float16), [2, 2], [2, 2]), {})'
cnt: 1, '((T([64, 128, 112, 112], th.float16), [2, 2], [2, 2]), {})'
cnt: 1, '((T([64, 256, 56, 56], th.float16), [2, 2], [2, 2]), {})'
cnt: 1, '((T([64, 512, 28, 28], th.float16), [2, 2], [2, 2]), {})'
cnt: 1, '((T([64, 512, 14, 14], th.float16), [2, 2], [2, 2]), {})'
Operator: aten.max_pool2d_with_indices_backward.default
cnt: 1, '((T([64, 512, 7, 7], th.float16), T([64, 512, 14, 14], th.float16), [2, 2], [2, 2], [0, 0], [1, 1], False, T([64, 512, 7, 7], th.int64)), {})'
cnt: 1, '((T([64, 512, 14, 14], th.float16), T([64, 512, 28, 28], th.float16), [2, 2], [2, 2], [0, 0], [1, 1], False, T([64, 512, 14, 14], th.int64)), {})'
cnt: 1, '((T([64, 256, 28, 28], th.float16), T([64, 256, 56, 56], th.float16), [2, 2], [2, 2], [0, 0], [1, 1], False, T([64, 256, 28, 28], th.int64)), {})'
cnt: 1, '((T([64, 128, 56, 56], th.float16), T([64, 128, 112, 112], th.float16), [2, 2], [2, 2], [0, 0], [1, 1], False, T([64, 128, 56, 56], th.int64)), {})'
cnt: 1, '((T([64, 64, 112, 112], th.float16), T([64, 64, 224, 224], th.float16), [2, 2], [2, 2], [0, 0], [1, 1], False, T([64, 64, 112, 112], th.int64)), {})'
Operator: aten.mm.default
cnt: 1, '((T([64, 1000], th.float16, (0, 0)), T([1000, 4096], th.float16)), {})'
cnt: 1, '((T([1000, 64], th.float16, (0, 0)), T([64, 4096], th.float16)), {})'
cnt: 1, '((T([64, 4096], th.float16), T([4096, 4096], th.float16)), {})'
cnt: 1, '((T([4096, 64], th.float16, (1, 4096)), T([64, 4096], th.float16)), {})'
cnt: 1, '((T([64, 4096], th.float16), T([4096, 25088], th.float16)), {})'
cnt: 1, '((T([4096, 64], th.float16, (1, 4096)), T([64, 25088], th.float16)), {})'
Operator: aten.relu_.default
cnt: 2, '((T([64, 64, 224, 224], th.float16),), {})'
cnt: 2, '((T([64, 128, 112, 112], th.float16),), {})'
cnt: 3, '((T([64, 256, 56, 56], th.float16),), {})'
cnt: 3, '((T([64, 512, 28, 28], th.float16),), {})'
cnt: 3, '((T([64, 512, 14, 14], th.float16),), {})'
cnt: 2, '((T([64, 4096], th.float16),), {})'
Operator: aten.sum.SymInt
cnt: 1, '((T([64, 1000], th.float16, (0, 0)), [0], True), {})'
cnt: 2, '((T([64, 4096], th.float16), [0], True), {})'
Operator: aten.sum.default
cnt: 1, '((T([64, 1000], th.float16),), {})'
Operator: aten.threshold_backward.default
cnt: 2, '((T([64, 4096], th.float16), T([64, 4096], th.float16), 0), {})'
cnt: 3, '((T([64, 512, 14, 14], th.float16), T([64, 512, 14, 14], th.float16), 0), {})'
cnt: 3, '((T([64, 512, 28, 28], th.float16), T([64, 512, 28, 28], th.float16), 0), {})'
cnt: 3, '((T([64, 256, 56, 56], th.float16), T([64, 256, 56, 56], th.float16), 0), {})'
cnt: 2, '((T([64, 128, 112, 112], th.float16), T([64, 128, 112, 112], th.float16), 0), {})'
cnt: 2, '((T([64, 64, 224, 224], th.float16), T([64, 64, 224, 224], th.float16), 0), {})'
