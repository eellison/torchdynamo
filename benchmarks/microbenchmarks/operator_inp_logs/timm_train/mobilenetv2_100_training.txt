Operator: aten._log_softmax.default
cnt: 1, '((T([128, 1000], th.float16), 1, False), {})'
Operator: aten._log_softmax_backward_data.default
cnt: 1, '((T([128, 1000], th.float16), T([128, 1000], th.float16), 1, th.float16), {})'
Operator: aten.add.Tensor
cnt: 52, '((T([], th.int64), 1), {})'
cnt: 2, '((T([128, 24, 56, 56], th.float16), T([128, 24, 56, 56], th.float16)), {})'
cnt: 4, '((T([128, 32, 28, 28], th.float16), T([128, 32, 28, 28], th.float16)), {})'
cnt: 6, '((T([128, 64, 14, 14], th.float16), T([128, 64, 14, 14], th.float16)), {})'
cnt: 4, '((T([128, 96, 14, 14], th.float16), T([128, 96, 14, 14], th.float16)), {})'
cnt: 4, '((T([128, 160, 7, 7], th.float16), T([128, 160, 7, 7], th.float16)), {})'
Operator: aten.addmm.default
cnt: 1, '((T([1000], th.float16), T([128, 1280], th.float16), T([1280, 1000], th.float16, (1, 1280))), {})'
Operator: aten.clone.default
cnt: 1, '((T([128, 3, 224, 224], th.float16),), {})'
cnt: 2, '((T([128, 32, 112, 112], th.float16),), {})'
cnt: 1, '((T([128, 96, 112, 112], th.float16),), {})'
cnt: 1, '((T([128, 96, 56, 56], th.float16),), {})'
cnt: 3, '((T([128, 144, 56, 56], th.float16),), {})'
cnt: 1, '((T([128, 144, 28, 28], th.float16),), {})'
cnt: 5, '((T([128, 192, 28, 28], th.float16),), {})'
cnt: 1, '((T([128, 192, 14, 14], th.float16),), {})'
cnt: 8, '((T([128, 384, 14, 14], th.float16),), {})'
cnt: 5, '((T([128, 576, 14, 14], th.float16),), {})'
cnt: 1, '((T([128, 576, 7, 7], th.float16),), {})'
cnt: 6, '((T([128, 960, 7, 7], th.float16),), {})'
cnt: 1, '((T([128, 1280, 7, 7], th.float16),), {})'
Operator: aten.convolution.default
cnt: 1, '((T([128, 3, 224, 224], th.float16), T([32, 3, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 32, 112, 112], th.float16), T([32, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 32), {})'
cnt: 1, '((T([128, 32, 112, 112], th.float16), T([16, 32, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 16, 112, 112], th.float16), T([96, 16, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 96, 112, 112], th.float16), T([96, 1, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 96), {})'
cnt: 1, '((T([128, 96, 56, 56], th.float16), T([24, 96, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([128, 24, 56, 56], th.float16), T([144, 24, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 144, 56, 56], th.float16), T([144, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 144), {})'
cnt: 1, '((T([128, 144, 56, 56], th.float16), T([24, 144, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 144, 56, 56], th.float16), T([144, 1, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 144), {})'
cnt: 1, '((T([128, 144, 28, 28], th.float16), T([32, 144, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([128, 32, 28, 28], th.float16), T([192, 32, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([128, 192, 28, 28], th.float16), T([192, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 192), {})'
cnt: 2, '((T([128, 192, 28, 28], th.float16), T([32, 192, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 192, 28, 28], th.float16), T([192, 1, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 192), {})'
cnt: 1, '((T([128, 192, 14, 14], th.float16), T([64, 192, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([128, 64, 14, 14], th.float16), T([384, 64, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([128, 384, 14, 14], th.float16), T([384, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 384), {})'
cnt: 3, '((T([128, 384, 14, 14], th.float16), T([64, 384, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 384, 14, 14], th.float16), T([96, 384, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([128, 96, 14, 14], th.float16), T([576, 96, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([128, 576, 14, 14], th.float16), T([576, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 576), {})'
cnt: 2, '((T([128, 576, 14, 14], th.float16), T([96, 576, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 576, 14, 14], th.float16), T([576, 1, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 576), {})'
cnt: 1, '((T([128, 576, 7, 7], th.float16), T([160, 576, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([128, 160, 7, 7], th.float16), T([960, 160, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([128, 960, 7, 7], th.float16), T([960, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 960), {})'
cnt: 2, '((T([128, 960, 7, 7], th.float16), T([160, 960, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 960, 7, 7], th.float16), T([320, 960, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 320, 7, 7], th.float16), T([1280, 320, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
Operator: aten.convolution_backward.default
cnt: 1, '((T([128, 1280, 7, 7], th.float16), T([128, 320, 7, 7], th.float16), T([1280, 320, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 320, 7, 7], th.float16), T([128, 960, 7, 7], th.float16), T([320, 960, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 3, '((T([128, 960, 7, 7], th.float16), T([128, 960, 7, 7], th.float16), T([960, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 960, [True, True, False]), {})'
cnt: 3, '((T([128, 960, 7, 7], th.float16), T([128, 160, 7, 7], th.float16), T([960, 160, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([128, 160, 7, 7], th.float16), T([128, 960, 7, 7], th.float16), T([160, 960, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 160, 7, 7], th.float16), T([128, 576, 7, 7], th.float16), T([160, 576, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 576, 7, 7], th.float16), T([128, 576, 14, 14], th.float16), T([576, 1, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 576, [True, True, False]), {})'
cnt: 3, '((T([128, 576, 14, 14], th.float16), T([128, 96, 14, 14], th.float16), T([576, 96, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([128, 96, 14, 14], th.float16), T([128, 576, 14, 14], th.float16), T([96, 576, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([128, 576, 14, 14], th.float16), T([128, 576, 14, 14], th.float16), T([576, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 576, [True, True, False]), {})'
cnt: 1, '((T([128, 96, 14, 14], th.float16), T([128, 384, 14, 14], th.float16), T([96, 384, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 4, '((T([128, 384, 14, 14], th.float16), T([128, 384, 14, 14], th.float16), T([384, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 384, [True, True, False]), {})'
cnt: 4, '((T([128, 384, 14, 14], th.float16), T([128, 64, 14, 14], th.float16), T([384, 64, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 3, '((T([128, 64, 14, 14], th.float16), T([128, 384, 14, 14], th.float16), T([64, 384, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 64, 14, 14], th.float16), T([128, 192, 14, 14], th.float16), T([64, 192, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 192, 14, 14], th.float16), T([128, 192, 28, 28], th.float16), T([192, 1, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 192, [True, True, False]), {})'
cnt: 3, '((T([128, 192, 28, 28], th.float16), T([128, 32, 28, 28], th.float16), T([192, 32, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([128, 32, 28, 28], th.float16), T([128, 192, 28, 28], th.float16), T([32, 192, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([128, 192, 28, 28], th.float16), T([128, 192, 28, 28], th.float16), T([192, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 192, [True, True, False]), {})'
cnt: 1, '((T([128, 32, 28, 28], th.float16), T([128, 144, 28, 28], th.float16), T([32, 144, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 144, 28, 28], th.float16), T([128, 144, 56, 56], th.float16), T([144, 1, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 144, [True, True, False]), {})'
cnt: 2, '((T([128, 144, 56, 56], th.float16), T([128, 24, 56, 56], th.float16), T([144, 24, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 24, 56, 56], th.float16), T([128, 144, 56, 56], th.float16), T([24, 144, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 144, 56, 56], th.float16), T([128, 144, 56, 56], th.float16), T([144, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 144, [True, True, False]), {})'
cnt: 1, '((T([128, 24, 56, 56], th.float16), T([128, 96, 56, 56], th.float16), T([24, 96, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 96, 56, 56], th.float16), T([128, 96, 112, 112], th.float16), T([96, 1, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 96, [True, True, False]), {})'
cnt: 1, '((T([128, 96, 112, 112], th.float16), T([128, 16, 112, 112], th.float16), T([96, 16, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 16, 112, 112], th.float16), T([128, 32, 112, 112], th.float16), T([16, 32, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 32, 112, 112], th.float16), T([128, 32, 112, 112], th.float16), T([32, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 32, [True, True, False]), {})'
cnt: 1, '((T([128, 32, 112, 112], th.float16), T([128, 3, 224, 224], th.float16), T([32, 3, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]), {})'
Operator: aten.copy_.default
cnt: 1, '((T([128, 3, 224, 224], th.float16), T([128, 3, 224, 224], th.float16)), {})'
Operator: aten.div.Scalar
cnt: 1, '((T([128, 1280, 7, 7], th.float16, (1280, 1, 0, 0)), 49), {})'
Operator: aten.hardtanh_.default
cnt: 2, '((T([128, 32, 112, 112], th.float16), 0.0, 6.0), {})'
cnt: 1, '((T([128, 96, 112, 112], th.float16), 0.0, 6.0), {})'
cnt: 1, '((T([128, 96, 56, 56], th.float16), 0.0, 6.0), {})'
cnt: 3, '((T([128, 144, 56, 56], th.float16), 0.0, 6.0), {})'
cnt: 1, '((T([128, 144, 28, 28], th.float16), 0.0, 6.0), {})'
cnt: 5, '((T([128, 192, 28, 28], th.float16), 0.0, 6.0), {})'
cnt: 1, '((T([128, 192, 14, 14], th.float16), 0.0, 6.0), {})'
cnt: 8, '((T([128, 384, 14, 14], th.float16), 0.0, 6.0), {})'
cnt: 5, '((T([128, 576, 14, 14], th.float16), 0.0, 6.0), {})'
cnt: 1, '((T([128, 576, 7, 7], th.float16), 0.0, 6.0), {})'
cnt: 6, '((T([128, 960, 7, 7], th.float16), 0.0, 6.0), {})'
cnt: 1, '((T([128, 1280, 7, 7], th.float16), 0.0, 6.0), {})'
Operator: aten.hardtanh_backward.default
cnt: 1, '((T([128, 1280, 7, 7], th.float16), T([128, 1280, 7, 7], th.float16), 0.0, 6.0), {})'
cnt: 6, '((T([128, 960, 7, 7], th.float16), T([128, 960, 7, 7], th.float16), 0.0, 6.0), {})'
cnt: 1, '((T([128, 576, 7, 7], th.float16), T([128, 576, 7, 7], th.float16), 0.0, 6.0), {})'
cnt: 5, '((T([128, 576, 14, 14], th.float16), T([128, 576, 14, 14], th.float16), 0.0, 6.0), {})'
cnt: 8, '((T([128, 384, 14, 14], th.float16), T([128, 384, 14, 14], th.float16), 0.0, 6.0), {})'
cnt: 1, '((T([128, 192, 14, 14], th.float16), T([128, 192, 14, 14], th.float16), 0.0, 6.0), {})'
cnt: 5, '((T([128, 192, 28, 28], th.float16), T([128, 192, 28, 28], th.float16), 0.0, 6.0), {})'
cnt: 1, '((T([128, 144, 28, 28], th.float16), T([128, 144, 28, 28], th.float16), 0.0, 6.0), {})'
cnt: 3, '((T([128, 144, 56, 56], th.float16), T([128, 144, 56, 56], th.float16), 0.0, 6.0), {})'
cnt: 1, '((T([128, 96, 56, 56], th.float16), T([128, 96, 56, 56], th.float16), 0.0, 6.0), {})'
cnt: 1, '((T([128, 96, 112, 112], th.float16), T([128, 96, 112, 112], th.float16), 0.0, 6.0), {})'
cnt: 2, '((T([128, 32, 112, 112], th.float16), T([128, 32, 112, 112], th.float16), 0.0, 6.0), {})'
Operator: aten.mean.dim
cnt: 1, '((T([128, 1280, 7, 7], th.float16), [-1, -2], True), {})'
Operator: aten.mm.default
cnt: 1, '((T([128, 1000], th.float16), T([1000, 1280], th.float16)), {})'
cnt: 1, '((T([1000, 128], th.float16, (1, 1000)), T([128, 1280], th.float16)), {})'
Operator: aten.native_batch_norm.default
cnt: 2, '((T([128, 32, 112, 112], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 16, 112, 112], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 96, 112, 112], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 96, 56, 56], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), True, 0.1, 1e-05), {})'
cnt: 2, '((T([128, 24, 56, 56], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 144, 56, 56], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 144, 28, 28], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 32, 28, 28], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), True, 0.1, 1e-05), {})'
cnt: 5, '((T([128, 192, 28, 28], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 192, 14, 14], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float16), True, 0.1, 1e-05), {})'
cnt: 4, '((T([128, 64, 14, 14], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), True, 0.1, 1e-05), {})'
cnt: 8, '((T([128, 384, 14, 14], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 96, 14, 14], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), True, 0.1, 1e-05), {})'
cnt: 5, '((T([128, 576, 14, 14], th.float16), T([576], th.float16), T([576], th.float16), T([576], th.float16), T([576], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 576, 7, 7], th.float16), T([576], th.float16), T([576], th.float16), T([576], th.float16), T([576], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 160, 7, 7], th.float16), T([160], th.float16), T([160], th.float16), T([160], th.float16), T([160], th.float16), True, 0.1, 1e-05), {})'
cnt: 6, '((T([128, 960, 7, 7], th.float16), T([960], th.float16), T([960], th.float16), T([960], th.float16), T([960], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 320, 7, 7], th.float16), T([320], th.float16), T([320], th.float16), T([320], th.float16), T([320], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 1280, 7, 7], th.float16), T([1280], th.float16), T([1280], th.float16), T([1280], th.float16), T([1280], th.float16), True, 0.1, 1e-05), {})'
Operator: aten.native_batch_norm_backward.default
cnt: 1, '((T([128, 1280, 7, 7], th.float16), T([128, 1280, 7, 7], th.float16), T([1280], th.float16), T([1280], th.float16), T([1280], th.float16), T([1280], th.float32), T([1280], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 320, 7, 7], th.float16), T([128, 320, 7, 7], th.float16), T([320], th.float16), T([320], th.float16), T([320], th.float16), T([320], th.float32), T([320], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 6, '((T([128, 960, 7, 7], th.float16), T([128, 960, 7, 7], th.float16), T([960], th.float16), T([960], th.float16), T([960], th.float16), T([960], th.float32), T([960], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 3, '((T([128, 160, 7, 7], th.float16), T([128, 160, 7, 7], th.float16), T([160], th.float16), T([160], th.float16), T([160], th.float16), T([160], th.float32), T([160], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 576, 7, 7], th.float16), T([128, 576, 7, 7], th.float16), T([576], th.float16), T([576], th.float16), T([576], th.float16), T([576], th.float32), T([576], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 5, '((T([128, 576, 14, 14], th.float16), T([128, 576, 14, 14], th.float16), T([576], th.float16), T([576], th.float16), T([576], th.float16), T([576], th.float32), T([576], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 3, '((T([128, 96, 14, 14], th.float16), T([128, 96, 14, 14], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float32), T([96], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 8, '((T([128, 384, 14, 14], th.float16), T([128, 384, 14, 14], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float32), T([384], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 4, '((T([128, 64, 14, 14], th.float16), T([128, 64, 14, 14], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float32), T([64], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 192, 14, 14], th.float16), T([128, 192, 14, 14], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float32), T([192], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 5, '((T([128, 192, 28, 28], th.float16), T([128, 192, 28, 28], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float16), T([192], th.float32), T([192], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 3, '((T([128, 32, 28, 28], th.float16), T([128, 32, 28, 28], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float32), T([32], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 144, 28, 28], th.float16), T([128, 144, 28, 28], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float32), T([144], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 3, '((T([128, 144, 56, 56], th.float16), T([128, 144, 56, 56], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float16), T([144], th.float32), T([144], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 2, '((T([128, 24, 56, 56], th.float16), T([128, 24, 56, 56], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float32), T([24], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 96, 56, 56], th.float16), T([128, 96, 56, 56], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float32), T([96], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 96, 112, 112], th.float16), T([128, 96, 112, 112], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float32), T([96], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 16, 112, 112], th.float16), T([128, 16, 112, 112], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float32), T([16], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 2, '((T([128, 32, 112, 112], th.float16), T([128, 32, 112, 112], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float32), T([32], th.float32), True, 1e-05, [True, True, True]), {})'
Operator: aten.nll_loss_backward.default
cnt: 1, '((T([], th.float16), T([128, 1000], th.float16), T([128], th.int64), None, 1, -100, T([], th.float16)), {})'
Operator: aten.nll_loss_forward.default
cnt: 1, '((T([128, 1000], th.float16), T([128], th.int64), None, 1, -100), {})'
Operator: aten.sum.SymInt
cnt: 1, '((T([128, 1000], th.float16), [0], True), {})'
