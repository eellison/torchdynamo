Operator: aten._log_softmax.default
cnt: 1, '((T([128, 1000], th.float16), 1, False), {})'
Operator: aten._log_softmax_backward_data.default
cnt: 1, '((T([128, 1000], th.float16), T([128, 1000], th.float16), 1, th.float16), {})'
Operator: aten._softmax.default
cnt: 3, '((T([128, 1, 3136, 49], th.float16), -1, False), {})'
cnt: 4, '((T([128, 2, 784, 49], th.float16), -1, False), {})'
cnt: 18, '((T([128, 5, 196, 49], th.float16), -1, False), {})'
cnt: 3, '((T([128, 8, 49, 49], th.float16), -1, False), {})'
Operator: aten._softmax_backward_data.default
cnt: 3, '((T([128, 8, 49, 49], th.float16), T([128, 8, 49, 49], th.float16), -1, th.float16), {})'
cnt: 18, '((T([128, 5, 196, 49], th.float16), T([128, 5, 196, 49], th.float16), -1, th.float16), {})'
cnt: 4, '((T([128, 2, 784, 49], th.float16), T([128, 2, 784, 49], th.float16), -1, th.float16), {})'
cnt: 3, '((T([128, 1, 3136, 49], th.float16), T([128, 1, 3136, 49], th.float16), -1, th.float16), {})'
Operator: aten._unsafe_view.default
cnt: 3, '((T([128, 3136, 49], th.float16), [128, 1, 3136, 49]), {})'
cnt: 3, '((T([128, 3136, 64], th.float16), [128, 1, 3136, 64]), {})'
cnt: 8, '((T([128, 2, 784, 64], th.float16), [256, 784, 64]), {})'
cnt: 4, '((T([128, 2, 64, 49], th.float16), [256, 64, 49]), {})'
cnt: 4, '((T([256, 784, 49], th.float16), [128, 2, 784, 49]), {})'
cnt: 4, '((T([128, 2, 49, 64], th.float16), [256, 49, 64]), {})'
cnt: 4, '((T([256, 784, 64], th.float16), [128, 2, 784, 64]), {})'
cnt: 8, '((T([128, 784, 2, 64], th.float16), [128, 784, 128]), {})'
cnt: 36, '((T([128, 5, 196, 64], th.float16), [640, 196, 64]), {})'
cnt: 18, '((T([128, 5, 64, 49], th.float16), [640, 64, 49]), {})'
cnt: 18, '((T([640, 196, 49], th.float16), [128, 5, 196, 49]), {})'
cnt: 18, '((T([128, 5, 49, 64], th.float16), [640, 49, 64]), {})'
cnt: 18, '((T([640, 196, 64], th.float16), [128, 5, 196, 64]), {})'
cnt: 36, '((T([128, 196, 5, 64], th.float16), [128, 196, 320]), {})'
cnt: 9, '((T([128, 8, 49, 64], th.float16), [1024, 49, 64]), {})'
cnt: 3, '((T([128, 8, 64, 49], th.float16), [1024, 64, 49]), {})'
cnt: 3, '((T([1024, 49, 49], th.float16), [128, 8, 49, 49]), {})'
cnt: 3, '((T([1024, 49, 64], th.float16), [128, 8, 49, 64]), {})'
cnt: 6, '((T([128, 49, 8, 64], th.float16), [128, 49, 512]), {})'
cnt: 3, '((T([128, 49, 2, 8, 64], th.float16), [128, 49, 1024]), {})'
cnt: 36, '((T([128, 196, 320], th.float16), [25088, 320]), {})'
cnt: 18, '((T([128, 49, 2, 5, 64], th.float16), [128, 49, 640]), {})'
cnt: 8, '((T([128, 784, 128], th.float16), [100352, 128]), {})'
cnt: 4, '((T([128, 49, 2, 2, 64], th.float16), [128, 49, 256]), {})'
cnt: 6, '((T([128, 3136, 64], th.float16), [401408, 64]), {})'
cnt: 3, '((T([128, 49, 2, 1, 64], th.float16), [128, 49, 128]), {})'
Operator: aten.add.Tensor
cnt: 9, '((T([128, 3136, 64], th.float16), T([128, 3136, 64], th.float16)), {})'
cnt: 12, '((T([128, 784, 128], th.float16), T([128, 784, 128], th.float16)), {})'
cnt: 54, '((T([128, 196, 320], th.float16), T([128, 196, 320], th.float16)), {})'
cnt: 15, '((T([128, 49, 512], th.float16), T([128, 49, 512], th.float16)), {})'
cnt: 3, '((T([2, 128, 8, 49, 64], th.float16), T([2, 128, 8, 49, 64], th.float16)), {})'
cnt: 1, '((T([128, 512, 7, 7], th.float16, (25088, 1, 3584, 512)), T([128, 512, 7, 7], th.float16, (25088, 1, 3584, 512))), {})'
cnt: 36, '((T([128, 196, 320], th.float16, (62720, 1, 196)), T([128, 196, 320], th.float16)), {})'
cnt: 18, '((T([2, 128, 5, 49, 64], th.float16), T([2, 128, 5, 49, 64], th.float16)), {})'
cnt: 1, '((T([128, 320, 14, 14], th.float16), T([128, 320, 14, 14], th.float16, (62720, 1, 4480, 320))), {})'
cnt: 8, '((T([128, 784, 128], th.float16, (100352, 1, 784)), T([128, 784, 128], th.float16)), {})'
cnt: 4, '((T([2, 128, 2, 49, 64], th.float16), T([2, 128, 2, 49, 64], th.float16)), {})'
cnt: 1, '((T([128, 128, 28, 28], th.float16), T([128, 128, 28, 28], th.float16, (100352, 1, 3584, 128))), {})'
cnt: 6, '((T([128, 3136, 64], th.float16, (200704, 1, 3136)), T([128, 3136, 64], th.float16)), {})'
cnt: 3, '((T([2, 128, 1, 49, 64], th.float16), T([2, 128, 1, 49, 64], th.float16)), {})'
cnt: 1, '((T([128, 64, 56, 56], th.float16), T([128, 64, 56, 56], th.float16, (200704, 1, 3584, 64))), {})'
Operator: aten.add_.Tensor
cnt: 1, '((T([128, 64, 56, 56], th.float16, (200704, 1, 3584, 64)), T([128, 64, 56, 56], th.float16, (200704, 1, 3584, 64))), {})'
cnt: 1, '((T([128, 128, 28, 28], th.float16, (100352, 1, 3584, 128)), T([128, 128, 28, 28], th.float16, (100352, 1, 3584, 128))), {})'
cnt: 1, '((T([128, 320, 14, 14], th.float16, (62720, 1, 4480, 320)), T([128, 320, 14, 14], th.float16, (62720, 1, 4480, 320))), {})'
cnt: 1, '((T([128, 512, 7, 7], th.float16, (25088, 1, 3584, 512)), T([128, 512, 7, 7], th.float16, (25088, 1, 3584, 512))), {})'
Operator: aten.addmm.default
cnt: 6, '((T([64], th.float16), T([401408, 64], th.float16), T([64, 64], th.float16, (1, 64))), {})'
cnt: 3, '((T([128], th.float16), T([6272, 64], th.float16), T([64, 128], th.float16, (1, 64))), {})'
cnt: 3, '((T([512], th.float16), T([401408, 64], th.float16), T([64, 512], th.float16, (1, 64))), {})'
cnt: 3, '((T([64], th.float16), T([401408, 512], th.float16), T([512, 64], th.float16, (1, 512))), {})'
cnt: 8, '((T([128], th.float16), T([100352, 128], th.float16), T([128, 128], th.float16, (1, 128))), {})'
cnt: 4, '((T([256], th.float16), T([6272, 128], th.float16), T([128, 256], th.float16, (1, 128))), {})'
cnt: 4, '((T([1024], th.float16), T([100352, 128], th.float16), T([128, 1024], th.float16, (1, 128))), {})'
cnt: 4, '((T([128], th.float16), T([100352, 1024], th.float16), T([1024, 128], th.float16, (1, 1024))), {})'
cnt: 36, '((T([320], th.float16), T([25088, 320], th.float16), T([320, 320], th.float16, (1, 320))), {})'
cnt: 18, '((T([640], th.float16), T([6272, 320], th.float16), T([320, 640], th.float16, (1, 320))), {})'
cnt: 18, '((T([1280], th.float16), T([25088, 320], th.float16), T([320, 1280], th.float16, (1, 320))), {})'
cnt: 18, '((T([320], th.float16), T([25088, 1280], th.float16), T([1280, 320], th.float16, (1, 1280))), {})'
cnt: 6, '((T([512], th.float16), T([6272, 512], th.float16), T([512, 512], th.float16, (1, 512))), {})'
cnt: 3, '((T([1024], th.float16), T([6272, 512], th.float16), T([512, 1024], th.float16, (1, 512))), {})'
cnt: 3, '((T([2048], th.float16), T([6272, 512], th.float16), T([512, 2048], th.float16, (1, 512))), {})'
cnt: 3, '((T([512], th.float16), T([6272, 2048], th.float16), T([2048, 512], th.float16, (1, 2048))), {})'
cnt: 1, '((T([1000], th.float16), T([128, 512], th.float16), T([512, 1000], th.float16, (1, 512))), {})'
Operator: aten.bmm.default
cnt: 6, '((T([128, 3136, 64], th.float16), T([128, 64, 49], th.float16, (6272, 1, 128))), {})'
cnt: 6, '((T([128, 3136, 49], th.float16), T([128, 49, 64], th.float16, (6272, 128, 1))), {})'
cnt: 4, '((T([256, 784, 64], th.float16), T([256, 64, 49], th.float16)), {})'
cnt: 4, '((T([256, 784, 49], th.float16), T([256, 49, 64], th.float16)), {})'
cnt: 18, '((T([640, 196, 64], th.float16), T([640, 64, 49], th.float16)), {})'
cnt: 18, '((T([640, 196, 49], th.float16), T([640, 49, 64], th.float16)), {})'
cnt: 3, '((T([1024, 49, 64], th.float16), T([1024, 64, 49], th.float16)), {})'
cnt: 3, '((T([1024, 49, 49], th.float16), T([1024, 49, 64], th.float16)), {})'
cnt: 3, '((T([1024, 49, 49], th.float16, (2401, 1, 49)), T([1024, 49, 64], th.float16)), {})'
cnt: 3, '((T([1024, 49, 64], th.float16), T([1024, 64, 49], th.float16, (3136, 1, 64))), {})'
cnt: 3, '((T([1024, 64, 49], th.float16, (3136, 1, 64)), T([1024, 49, 49], th.float16)), {})'
cnt: 3, '((T([1024, 49, 49], th.float16), T([1024, 49, 64], th.float16, (3136, 1, 49))), {})'
cnt: 18, '((T([640, 49, 196], th.float16, (9604, 1, 49)), T([640, 196, 64], th.float16)), {})'
cnt: 18, '((T([640, 196, 64], th.float16), T([640, 64, 49], th.float16, (3136, 1, 64))), {})'
cnt: 18, '((T([640, 64, 196], th.float16, (12544, 1, 64)), T([640, 196, 49], th.float16)), {})'
cnt: 18, '((T([640, 196, 49], th.float16), T([640, 49, 64], th.float16, (3136, 1, 49))), {})'
cnt: 4, '((T([256, 49, 784], th.float16, (38416, 1, 49)), T([256, 784, 64], th.float16)), {})'
cnt: 4, '((T([256, 784, 64], th.float16), T([256, 64, 49], th.float16, (3136, 1, 64))), {})'
cnt: 4, '((T([256, 64, 784], th.float16, (50176, 1, 64)), T([256, 784, 49], th.float16)), {})'
cnt: 4, '((T([256, 784, 49], th.float16), T([256, 49, 64], th.float16, (3136, 1, 49))), {})'
cnt: 3, '((T([128, 49, 3136], th.float16, (153664, 1, 49)), T([128, 3136, 64], th.float16)), {})'
cnt: 3, '((T([128, 64, 3136], th.float16, (200704, 1, 64)), T([128, 3136, 49], th.float16)), {})'
Operator: aten.clone.default
cnt: 1, '((T([128, 3, 224, 224], th.float16),), {})'
Operator: aten.convolution.default
cnt: 1, '((T([128, 3, 224, 224], th.float16), T([64, 3, 4, 4], th.float16), T([64], th.float16), [4, 4], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([128, 64, 56, 56], th.float16, (200704, 1, 3584, 64)), T([64, 64, 8, 8], th.float16), T([64], th.float16), [8, 8], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 64, 56, 56], th.float16, (200704, 1, 3584, 64)), T([64, 1, 3, 3], th.float16), T([64], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 64), {})'
cnt: 1, '((T([128, 64, 56, 56], th.float16), T([128, 64, 2, 2], th.float16), T([128], th.float16), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 4, '((T([128, 128, 28, 28], th.float16, (100352, 1, 3584, 128)), T([128, 128, 4, 4], th.float16), T([128], th.float16), [4, 4], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 128, 28, 28], th.float16, (100352, 1, 3584, 128)), T([128, 1, 3, 3], th.float16), T([128], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 128), {})'
cnt: 1, '((T([128, 128, 28, 28], th.float16), T([320, 128, 2, 2], th.float16), T([320], th.float16), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 18, '((T([128, 320, 14, 14], th.float16, (62720, 1, 4480, 320)), T([320, 320, 2, 2], th.float16), T([320], th.float16), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 320, 14, 14], th.float16, (62720, 1, 4480, 320)), T([320, 1, 3, 3], th.float16), T([320], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 320), {})'
cnt: 1, '((T([128, 320, 14, 14], th.float16), T([512, 320, 2, 2], th.float16), T([512], th.float16), [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 512, 7, 7], th.float16, (25088, 1, 3584, 512)), T([512, 1, 3, 3], th.float16), T([512], th.float16), [1, 1], [1, 1], [1, 1], False, [0, 0], 512), {})'
Operator: aten.convolution_backward.default
cnt: 1, '((T([128, 512, 7, 7], th.float16, (25088, 1, 3584, 512)), T([128, 512, 7, 7], th.float16, (25088, 1, 3584, 512)), T([512, 1, 3, 3], th.float16), [512], [1, 1], [1, 1], [1, 1], False, [0, 0], 512, [True, True, True]), {})'
cnt: 1, '((T([128, 512, 7, 7], th.float16, (25088, 1, 3584, 512)), T([128, 320, 14, 14], th.float16), T([512, 320, 2, 2], th.float16), [512], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 18, '((T([128, 320, 7, 7], th.float16, (15680, 1, 2240, 320)), T([128, 320, 14, 14], th.float16, (62720, 1, 4480, 320)), T([320, 320, 2, 2], th.float16), [320], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([128, 320, 14, 14], th.float16), T([128, 320, 14, 14], th.float16, (62720, 1, 4480, 320)), T([320, 1, 3, 3], th.float16), [320], [1, 1], [1, 1], [1, 1], False, [0, 0], 320, [True, True, True]), {})'
cnt: 1, '((T([128, 320, 14, 14], th.float16, (62720, 1, 4480, 320)), T([128, 128, 28, 28], th.float16), T([320, 128, 2, 2], th.float16), [320], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 4, '((T([128, 128, 7, 7], th.float16, (6272, 1, 896, 128)), T([128, 128, 28, 28], th.float16, (100352, 1, 3584, 128)), T([128, 128, 4, 4], th.float16), [128], [4, 4], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([128, 128, 28, 28], th.float16), T([128, 128, 28, 28], th.float16, (100352, 1, 3584, 128)), T([128, 1, 3, 3], th.float16), [128], [1, 1], [1, 1], [1, 1], False, [0, 0], 128, [True, True, True]), {})'
cnt: 1, '((T([128, 128, 28, 28], th.float16, (100352, 1, 3584, 128)), T([128, 64, 56, 56], th.float16), T([128, 64, 2, 2], th.float16), [128], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 3, '((T([128, 64, 7, 7], th.float16, (3136, 1, 448, 64)), T([128, 64, 56, 56], th.float16, (200704, 1, 3584, 64)), T([64, 64, 8, 8], th.float16), [64], [8, 8], [0, 0], [1, 1], False, [0, 0], 1, [True, True, True]), {})'
cnt: 1, '((T([128, 64, 56, 56], th.float16), T([128, 64, 56, 56], th.float16, (200704, 1, 3584, 64)), T([64, 1, 3, 3], th.float16), [64], [1, 1], [1, 1], [1, 1], False, [0, 0], 64, [True, True, True]), {})'
cnt: 1, '((T([128, 64, 56, 56], th.float16, (200704, 1, 3584, 64)), T([128, 3, 224, 224], th.float16), T([64, 3, 4, 4], th.float16), [64], [4, 4], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})'
Operator: aten.copy_.default
cnt: 1, '((T([128, 3, 224, 224], th.float16), T([128, 3, 224, 224], th.float16)), {})'
cnt: 18, '((T([320, 320, 2, 2], th.float16), T([320, 320, 2, 2], th.float16, (1280, 1, 640, 320))), {})'
cnt: 4, '((T([128, 128, 4, 4], th.float16), T([128, 128, 4, 4], th.float16, (2048, 1, 512, 128))), {})'
cnt: 3, '((T([64, 64, 8, 8], th.float16), T([64, 64, 8, 8], th.float16, (4096, 1, 512, 64))), {})'
Operator: aten.div.Scalar
cnt: 1, '((T([128, 49, 512], th.float16, (512, 0, 1)), 49), {})'
Operator: aten.gelu.default
cnt: 3, '((T([128, 3136, 512], th.float16),), {})'
cnt: 4, '((T([128, 784, 1024], th.float16),), {})'
cnt: 18, '((T([128, 196, 1280], th.float16),), {})'
cnt: 3, '((T([128, 49, 2048], th.float16),), {})'
Operator: aten.gelu_backward.default
cnt: 3, '((T([128, 49, 2048], th.float16), T([128, 49, 2048], th.float16)), {})'
cnt: 18, '((T([128, 196, 1280], th.float16), T([128, 196, 1280], th.float16)), {})'
cnt: 4, '((T([128, 784, 1024], th.float16), T([128, 784, 1024], th.float16)), {})'
cnt: 3, '((T([128, 3136, 512], th.float16), T([128, 3136, 512], th.float16)), {})'
Operator: aten.mean.dim
cnt: 1, '((T([128, 49, 512], th.float16), [1]), {})'
Operator: aten.mm.default
cnt: 1, '((T([128, 1000], th.float16), T([1000, 512], th.float16)), {})'
cnt: 1, '((T([1000, 128], th.float16, (1, 1000)), T([128, 512], th.float16)), {})'
cnt: 3, '((T([6272, 512], th.float16), T([512, 2048], th.float16)), {})'
cnt: 3, '((T([512, 6272], th.float16, (1, 512)), T([6272, 2048], th.float16)), {})'
cnt: 3, '((T([6272, 2048], th.float16), T([2048, 512], th.float16)), {})'
cnt: 3, '((T([2048, 6272], th.float16, (1, 2048)), T([6272, 512], th.float16)), {})'
cnt: 6, '((T([6272, 512], th.float16), T([512, 512], th.float16)), {})'
cnt: 6, '((T([512, 6272], th.float16, (1, 512)), T([6272, 512], th.float16)), {})'
cnt: 3, '((T([6272, 1024], th.float16), T([1024, 512], th.float16)), {})'
cnt: 3, '((T([1024, 6272], th.float16, (1, 1024)), T([6272, 512], th.float16)), {})'
cnt: 18, '((T([25088, 320], th.float16), T([320, 1280], th.float16)), {})'
cnt: 18, '((T([320, 25088], th.float16, (1, 320)), T([25088, 1280], th.float16)), {})'
cnt: 18, '((T([25088, 1280], th.float16), T([1280, 320], th.float16)), {})'
cnt: 18, '((T([1280, 25088], th.float16, (1, 1280)), T([25088, 320], th.float16)), {})'
cnt: 36, '((T([25088, 320], th.float16), T([320, 320], th.float16)), {})'
cnt: 36, '((T([320, 25088], th.float16, (1, 320)), T([25088, 320], th.float16)), {})'
cnt: 18, '((T([6272, 640], th.float16), T([640, 320], th.float16)), {})'
cnt: 18, '((T([640, 6272], th.float16, (1, 640)), T([6272, 320], th.float16)), {})'
cnt: 4, '((T([100352, 128], th.float16), T([128, 1024], th.float16)), {})'
cnt: 4, '((T([128, 100352], th.float16, (1, 128)), T([100352, 1024], th.float16)), {})'
cnt: 4, '((T([100352, 1024], th.float16), T([1024, 128], th.float16)), {})'
cnt: 4, '((T([1024, 100352], th.float16, (1, 1024)), T([100352, 128], th.float16)), {})'
cnt: 8, '((T([100352, 128], th.float16), T([128, 128], th.float16)), {})'
cnt: 8, '((T([128, 100352], th.float16, (1, 128)), T([100352, 128], th.float16)), {})'
cnt: 4, '((T([6272, 256], th.float16), T([256, 128], th.float16)), {})'
cnt: 4, '((T([256, 6272], th.float16, (1, 256)), T([6272, 128], th.float16)), {})'
cnt: 3, '((T([401408, 64], th.float16), T([64, 512], th.float16)), {})'
cnt: 3, '((T([64, 401408], th.float16, (1, 64)), T([401408, 512], th.float16)), {})'
cnt: 3, '((T([401408, 512], th.float16), T([512, 64], th.float16)), {})'
cnt: 3, '((T([512, 401408], th.float16, (1, 512)), T([401408, 64], th.float16)), {})'
cnt: 6, '((T([401408, 64], th.float16), T([64, 64], th.float16)), {})'
cnt: 6, '((T([64, 401408], th.float16, (1, 64)), T([401408, 64], th.float16)), {})'
cnt: 3, '((T([6272, 128], th.float16), T([128, 64], th.float16)), {})'
cnt: 3, '((T([128, 6272], th.float16, (1, 128)), T([6272, 64], th.float16)), {})'
Operator: aten.mul.Tensor
cnt: 6, '((T([128, 1, 3136, 49], th.float16), 0.125), {})'
cnt: 8, '((T([128, 2, 784, 49], th.float16), 0.125), {})'
cnt: 36, '((T([128, 5, 196, 49], th.float16), 0.125), {})'
cnt: 6, '((T([128, 8, 49, 49], th.float16), 0.125), {})'
Operator: aten.native_layer_norm.default
cnt: 1, '((T([128, 3136, 64], th.float16, (200704, 1, 3136)), [64], T([64], th.float16), T([64], th.float16), 1e-05), {})'
cnt: 6, '((T([128, 3136, 64], th.float16), [64], T([64], th.float16), T([64], th.float16), 1e-06), {})'
cnt: 3, '((T([128, 49, 64], th.float16), [64], T([64], th.float16), T([64], th.float16), 1e-05), {})'
cnt: 1, '((T([128, 784, 128], th.float16, (100352, 1, 784)), [128], T([128], th.float16), T([128], th.float16), 1e-05), {})'
cnt: 8, '((T([128, 784, 128], th.float16), [128], T([128], th.float16), T([128], th.float16), 1e-06), {})'
cnt: 4, '((T([128, 49, 128], th.float16), [128], T([128], th.float16), T([128], th.float16), 1e-05), {})'
cnt: 1, '((T([128, 196, 320], th.float16, (62720, 1, 196)), [320], T([320], th.float16), T([320], th.float16), 1e-05), {})'
cnt: 36, '((T([128, 196, 320], th.float16), [320], T([320], th.float16), T([320], th.float16), 1e-06), {})'
cnt: 18, '((T([128, 49, 320], th.float16), [320], T([320], th.float16), T([320], th.float16), 1e-05), {})'
cnt: 1, '((T([128, 49, 512], th.float16, (25088, 1, 49)), [512], T([512], th.float16), T([512], th.float16), 1e-05), {})'
cnt: 7, '((T([128, 49, 512], th.float16), [512], T([512], th.float16), T([512], th.float16), 1e-06), {})'
Operator: aten.native_layer_norm_backward.default
cnt: 7, '((T([128, 49, 512], th.float16), T([128, 49, 512], th.float16), [512], T([128, 49, 1], th.float32), T([128, 49, 1], th.float32), T([512], th.float16), T([512], th.float16), [True, True, True]), {})'
cnt: 1, '((T([128, 49, 512], th.float16), T([128, 49, 512], th.float16, (25088, 1, 49)), [512], T([128, 49, 1], th.float32), T([128, 49, 1], th.float32), T([512], th.float16), T([512], th.float16), [True, True, True]), {})'
cnt: 36, '((T([128, 196, 320], th.float16), T([128, 196, 320], th.float16), [320], T([128, 196, 1], th.float32), T([128, 196, 1], th.float32), T([320], th.float16), T([320], th.float16), [True, True, True]), {})'
cnt: 18, '((T([128, 49, 320], th.float16), T([128, 49, 320], th.float16), [320], T([128, 49, 1], th.float32), T([128, 49, 1], th.float32), T([320], th.float16), T([320], th.float16), [True, True, True]), {})'
cnt: 1, '((T([128, 196, 320], th.float16, (62720, 1, 196)), T([128, 196, 320], th.float16, (62720, 1, 196)), [320], T([128, 196, 1], th.float32), T([128, 196, 1], th.float32), T([320], th.float16), T([320], th.float16), [True, True, True]), {})'
cnt: 8, '((T([128, 784, 128], th.float16), T([128, 784, 128], th.float16), [128], T([128, 784, 1], th.float32), T([128, 784, 1], th.float32), T([128], th.float16), T([128], th.float16), [True, True, True]), {})'
cnt: 4, '((T([128, 49, 128], th.float16), T([128, 49, 128], th.float16), [128], T([128, 49, 1], th.float32), T([128, 49, 1], th.float32), T([128], th.float16), T([128], th.float16), [True, True, True]), {})'
cnt: 1, '((T([128, 784, 128], th.float16, (100352, 1, 784)), T([128, 784, 128], th.float16, (100352, 1, 784)), [128], T([128, 784, 1], th.float32), T([128, 784, 1], th.float32), T([128], th.float16), T([128], th.float16), [True, True, True]), {})'
cnt: 6, '((T([128, 3136, 64], th.float16), T([128, 3136, 64], th.float16), [64], T([128, 3136, 1], th.float32), T([128, 3136, 1], th.float32), T([64], th.float16), T([64], th.float16), [True, True, True]), {})'
cnt: 3, '((T([128, 49, 64], th.float16), T([128, 49, 64], th.float16), [64], T([128, 49, 1], th.float32), T([128, 49, 1], th.float32), T([64], th.float16), T([64], th.float16), [True, True, True]), {})'
cnt: 1, '((T([128, 3136, 64], th.float16, (200704, 1, 3136)), T([128, 3136, 64], th.float16, (200704, 1, 3136)), [64], T([128, 3136, 1], th.float32), T([128, 3136, 1], th.float32), T([64], th.float16), T([64], th.float16), [True, True, True]), {})'
Operator: aten.new_empty_strided.default
cnt: 18, '((T([320, 320, 2, 2], th.float16, (1280, 1, 640, 320)), [320, 320, 2, 2], [1280, 4, 2, 1]), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided})'
cnt: 4, '((T([128, 128, 4, 4], th.float16, (2048, 1, 512, 128)), [128, 128, 4, 4], [2048, 16, 4, 1]), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided})'
cnt: 3, '((T([64, 64, 8, 8], th.float16, (4096, 1, 512, 64)), [64, 64, 8, 8], [4096, 64, 8, 1]), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided})'
Operator: aten.nll_loss_backward.default
cnt: 1, '((T([], th.float16), T([128, 1000], th.float16), T([128], th.int64), None, 1, -100, T([], th.float16)), {})'
Operator: aten.nll_loss_forward.default
cnt: 1, '((T([128, 1000], th.float16), T([128], th.int64), None, 1, -100), {})'
Operator: aten.select_backward.default
cnt: 3, '((T([128, 8, 49, 64], th.float16), [2, 128, 8, 49, 64], 0, 1), {})'
cnt: 3, '((T([128, 8, 49, 64], th.float16, (25088, 3136, 1, 49)), [2, 128, 8, 49, 64], 0, 0), {})'
cnt: 18, '((T([128, 5, 49, 64], th.float16), [2, 128, 5, 49, 64], 0, 1), {})'
cnt: 18, '((T([128, 5, 49, 64], th.float16, (15680, 3136, 1, 49)), [2, 128, 5, 49, 64], 0, 0), {})'
cnt: 4, '((T([128, 2, 49, 64], th.float16), [2, 128, 2, 49, 64], 0, 1), {})'
cnt: 4, '((T([128, 2, 49, 64], th.float16, (6272, 3136, 1, 49)), [2, 128, 2, 49, 64], 0, 0), {})'
cnt: 3, '((T([128, 1, 49, 64], th.float16), [2, 128, 1, 49, 64], 0, 1), {})'
cnt: 3, '((T([128, 1, 49, 64], th.float16, (3136, 3136, 1, 49)), [2, 128, 1, 49, 64], 0, 0), {})'
Operator: aten.sum.SymInt
cnt: 1, '((T([128, 1000], th.float16), [0], True), {})'
cnt: 9, '((T([6272, 512], th.float16), [0], True), {})'
cnt: 3, '((T([6272, 2048], th.float16), [0], True), {})'
cnt: 3, '((T([6272, 1024], th.float16), [0], True), {})'
cnt: 54, '((T([25088, 320], th.float16), [0], True), {})'
cnt: 18, '((T([25088, 1280], th.float16), [0], True), {})'
cnt: 18, '((T([6272, 640], th.float16), [0], True), {})'
cnt: 12, '((T([100352, 128], th.float16), [0], True), {})'
cnt: 4, '((T([100352, 1024], th.float16), [0], True), {})'
cnt: 4, '((T([6272, 256], th.float16), [0], True), {})'
cnt: 9, '((T([401408, 64], th.float16), [0], True), {})'
cnt: 3, '((T([401408, 512], th.float16), [0], True), {})'
cnt: 3, '((T([6272, 128], th.float16), [0], True), {})'
