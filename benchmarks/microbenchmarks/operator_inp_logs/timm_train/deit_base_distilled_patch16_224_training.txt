Operator: aten._log_softmax.default
cnt: 1, '((T([128, 1000], th.float16), 1, False), {})'
Operator: aten._log_softmax_backward_data.default
cnt: 1, '((T([128, 1000], th.float16), T([128, 1000], th.float16), 1, th.float16), {})'
Operator: aten._softmax.default
cnt: 12, '((T([128, 12, 198, 198], th.float16), -1, False), {})'
Operator: aten._softmax_backward_data.default
cnt: 12, '((T([128, 12, 198, 198], th.float16), T([128, 12, 198, 198], th.float16), -1, th.float16), {})'
Operator: aten._unsafe_view.default
cnt: 36, '((T([128, 12, 198, 64], th.float16), [1536, 198, 64]), {})'
cnt: 12, '((T([128, 12, 64, 198], th.float16), [1536, 64, 198]), {})'
cnt: 12, '((T([1536, 198, 198], th.float16), [128, 12, 198, 198]), {})'
cnt: 12, '((T([1536, 198, 64], th.float16), [128, 12, 198, 64]), {})'
cnt: 12, '((T([128, 198, 12, 64], th.float16), [128, 198, 768]), {})'
cnt: 12, '((T([128, 198, 3, 12, 64], th.float16), [128, 198, 2304]), {})'
Operator: aten.add.Tensor
cnt: 1, '((T([128, 198, 768], th.float16), T([1, 198, 768], th.float16)), {})'
cnt: 49, '((T([128, 198, 768], th.float16), T([128, 198, 768], th.float16)), {})'
cnt: 1, '((T([128, 1000], th.float16), T([128, 1000], th.float16)), {})'
Operator: aten.addmm.default
cnt: 12, '((T([2304], th.float16), T([25344, 768], th.float16), T([768, 2304], th.float16, (1, 768))), {})'
cnt: 12, '((T([768], th.float16), T([25344, 768], th.float16), T([768, 768], th.float16, (1, 768))), {})'
cnt: 12, '((T([3072], th.float16), T([25344, 768], th.float16), T([768, 3072], th.float16, (1, 768))), {})'
cnt: 12, '((T([768], th.float16), T([25344, 3072], th.float16), T([3072, 768], th.float16, (1, 3072))), {})'
cnt: 2, '((T([1000], th.float16), T([128, 768], th.float16, (152064, 1)), T([768, 1000], th.float16, (1, 768))), {})'
Operator: aten.bmm.default
cnt: 12, '((T([1536, 198, 64], th.float16), T([1536, 64, 198], th.float16)), {})'
cnt: 12, '((T([1536, 198, 198], th.float16), T([1536, 198, 64], th.float16)), {})'
cnt: 12, '((T([1536, 198, 198], th.float16, (39204, 1, 198)), T([1536, 198, 64], th.float16)), {})'
cnt: 12, '((T([1536, 198, 64], th.float16), T([1536, 64, 198], th.float16, (12672, 1, 64))), {})'
cnt: 12, '((T([1536, 64, 198], th.float16, (12672, 1, 64)), T([1536, 198, 198], th.float16)), {})'
cnt: 12, '((T([1536, 198, 198], th.float16), T([1536, 198, 64], th.float16, (12672, 1, 198))), {})'
Operator: aten.cat.default
cnt: 1, '(([T([128, 1, 768], th.float16, (0, 768, 1)), T([128, 1, 768], th.float16, (0, 768, 1)), T([128, 196, 768], th.float16, (150528, 1, 196))], 1), {})'
Operator: aten.clone.default
cnt: 1, '((T([128, 3, 224, 224], th.float16),), {})'
Operator: aten.convolution.default
cnt: 1, '((T([128, 3, 224, 224], th.float16), T([768, 3, 16, 16], th.float16), T([768], th.float16), [16, 16], [0, 0], [1, 1], False, [0, 0], 1), {})'
Operator: aten.convolution_backward.default
cnt: 1, '((T([128, 768, 14, 14], th.float16, (152064, 1, 10752, 768)), T([128, 3, 224, 224], th.float16), T([768, 3, 16, 16], th.float16), [768], [16, 16], [0, 0], [1, 1], False, [0, 0], 1, [False, True, True]), {})'
Operator: aten.copy_.default
cnt: 1, '((T([128, 3, 224, 224], th.float16), T([128, 3, 224, 224], th.float16)), {})'
Operator: aten.div.Tensor
cnt: 2, '((T([128, 1000], th.float16), 2), {})'
Operator: aten.gelu.default
cnt: 12, '((T([128, 198, 3072], th.float16),), {})'
Operator: aten.gelu_backward.default
cnt: 12, '((T([128, 198, 3072], th.float16), T([128, 198, 3072], th.float16)), {})'
Operator: aten.mm.default
cnt: 2, '((T([128, 1000], th.float16), T([1000, 768], th.float16)), {})'
cnt: 2, '((T([1000, 128], th.float16, (1, 1000)), T([128, 768], th.float16, (152064, 1))), {})'
cnt: 12, '((T([25344, 768], th.float16), T([768, 3072], th.float16)), {})'
cnt: 12, '((T([768, 25344], th.float16, (1, 768)), T([25344, 3072], th.float16)), {})'
cnt: 12, '((T([25344, 3072], th.float16), T([3072, 768], th.float16)), {})'
cnt: 12, '((T([3072, 25344], th.float16, (1, 3072)), T([25344, 768], th.float16)), {})'
cnt: 12, '((T([25344, 768], th.float16), T([768, 768], th.float16)), {})'
cnt: 12, '((T([768, 25344], th.float16, (1, 768)), T([25344, 768], th.float16)), {})'
cnt: 12, '((T([25344, 2304], th.float16), T([2304, 768], th.float16)), {})'
cnt: 12, '((T([2304, 25344], th.float16, (1, 2304)), T([25344, 768], th.float16)), {})'
Operator: aten.mul.Tensor
cnt: 24, '((T([128, 12, 198, 198], th.float16), 0.125), {})'
Operator: aten.native_layer_norm.default
cnt: 25, '((T([128, 198, 768], th.float16), [768], T([768], th.float16), T([768], th.float16), 1e-06), {})'
Operator: aten.native_layer_norm_backward.default
cnt: 25, '((T([128, 198, 768], th.float16), T([128, 198, 768], th.float16), [768], T([128, 198, 1], th.float32), T([128, 198, 1], th.float32), T([768], th.float16), T([768], th.float16), [True, True, True]), {})'
Operator: aten.nll_loss_backward.default
cnt: 1, '((T([], th.float16), T([128, 1000], th.float16), T([128], th.int64), None, 1, -100, T([], th.float16)), {})'
Operator: aten.nll_loss_forward.default
cnt: 1, '((T([128, 1000], th.float16), T([128], th.int64), None, 1, -100), {})'
Operator: aten.select_backward.default
cnt: 1, '((T([128, 768], th.float16), [128, 198, 768], 1, 1), {})'
cnt: 1, '((T([128, 768], th.float16), [128, 198, 768], 1, 0), {})'
Operator: aten.slice_backward.default
cnt: 2, '((T([128, 198, 768], th.float16), [128, 198, 768], 0, 0, 9223372036854775807, 1), {})'
Operator: aten.stack.default
cnt: 12, '(([T([128, 12, 198, 64], th.float16), T([128, 12, 198, 64], th.float16, (152064, 12672, 1, 198)), T([128, 12, 198, 64], th.float16)],), {})'
Operator: aten.sum.SymInt
cnt: 2, '((T([128, 1000], th.float16), [0], True), {})'
cnt: 24, '((T([25344, 768], th.float16), [0], True), {})'
cnt: 12, '((T([25344, 3072], th.float16), [0], True), {})'
cnt: 12, '((T([25344, 2304], th.float16), [0], True), {})'
cnt: 1, '((T([128, 198, 768], th.float16), [0], True), {})'
cnt: 2, '((T([128, 1, 768], th.float16, (152064, 768, 1)), [0], True), {})'
Operator: aten.unbind.int
cnt: 12, '((T([3, 128, 12, 198, 64], th.float16, (768, 456192, 64, 2304, 1)),), {})'
