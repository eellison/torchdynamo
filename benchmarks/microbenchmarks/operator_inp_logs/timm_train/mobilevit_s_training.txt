Operator: aten._log_softmax.default
cnt: 1, '((T([128, 1000], th.float16), 1, False), {})'
Operator: aten._log_softmax_backward_data.default
cnt: 1, '((T([128, 1000], th.float16), T([128, 1000], th.float16), 1, th.float16), {})'
Operator: aten._softmax.default
cnt: 2, '((T([512, 4, 256, 256], th.float16), -1, False), {})'
cnt: 4, '((T([512, 4, 64, 64], th.float16), -1, False), {})'
cnt: 3, '((T([512, 4, 16, 16], th.float16), -1, False), {})'
Operator: aten._softmax_backward_data.default
cnt: 3, '((T([512, 4, 16, 16], th.float16), T([512, 4, 16, 16], th.float16), -1, th.float16), {})'
cnt: 4, '((T([512, 4, 64, 64], th.float16), T([512, 4, 64, 64], th.float16), -1, th.float16), {})'
cnt: 2, '((T([512, 4, 256, 256], th.float16), T([512, 4, 256, 256], th.float16), -1, th.float16), {})'
Operator: aten._unsafe_view.default
cnt: 2, '((T([294912, 16, 2, 2], th.float16), [128, 144, 256, 4]), {})'
cnt: 2, '((T([128, 4, 256, 144], th.float16), [512, 256, 144]), {})'
cnt: 6, '((T([512, 4, 256, 36], th.float16), [2048, 256, 36]), {})'
cnt: 2, '((T([512, 4, 36, 256], th.float16), [2048, 36, 256]), {})'
cnt: 2, '((T([2048, 256, 256], th.float16), [512, 4, 256, 256]), {})'
cnt: 2, '((T([2048, 256, 36], th.float16), [512, 4, 256, 36]), {})'
cnt: 2, '((T([512, 256, 4, 36], th.float16), [512, 256, 144]), {})'
cnt: 2, '((T([128, 144, 256, 4], th.float16), [294912, 16, 2, 2]), {})'
cnt: 2, '((T([294912, 2, 16, 2], th.float16), [128, 144, 32, 32]), {})'
cnt: 2, '((T([196608, 8, 2, 2], th.float16), [128, 192, 64, 4]), {})'
cnt: 2, '((T([128, 4, 64, 192], th.float16), [512, 64, 192]), {})'
cnt: 12, '((T([512, 4, 64, 48], th.float16), [2048, 64, 48]), {})'
cnt: 4, '((T([512, 4, 48, 64], th.float16), [2048, 48, 64]), {})'
cnt: 4, '((T([2048, 64, 64], th.float16), [512, 4, 64, 64]), {})'
cnt: 4, '((T([2048, 64, 48], th.float16), [512, 4, 64, 48]), {})'
cnt: 4, '((T([512, 64, 4, 48], th.float16), [512, 64, 192]), {})'
cnt: 2, '((T([128, 192, 64, 4], th.float16), [196608, 8, 2, 2]), {})'
cnt: 2, '((T([196608, 2, 8, 2], th.float16), [128, 192, 16, 16]), {})'
cnt: 2, '((T([122880, 4, 2, 2], th.float16), [128, 240, 16, 4]), {})'
cnt: 2, '((T([128, 4, 16, 240], th.float16), [512, 16, 240]), {})'
cnt: 9, '((T([512, 4, 16, 60], th.float16), [2048, 16, 60]), {})'
cnt: 3, '((T([512, 4, 60, 16], th.float16), [2048, 60, 16]), {})'
cnt: 3, '((T([2048, 16, 16], th.float16), [512, 4, 16, 16]), {})'
cnt: 3, '((T([2048, 16, 60], th.float16), [512, 4, 16, 60]), {})'
cnt: 3, '((T([512, 16, 4, 60], th.float16), [512, 16, 240]), {})'
cnt: 2, '((T([128, 240, 16, 4], th.float16), [122880, 4, 2, 2]), {})'
cnt: 2, '((T([122880, 2, 4, 2], th.float16), [128, 240, 8, 8]), {})'
cnt: 3, '((T([512, 16, 3, 4, 60], th.float16), [512, 16, 720]), {})'
cnt: 4, '((T([512, 64, 3, 4, 48], th.float16), [512, 64, 576]), {})'
cnt: 2, '((T([512, 256, 3, 4, 36], th.float16), [512, 256, 432]), {})'
Operator: aten.add.Tensor
cnt: 32, '((T([], th.int64), 1), {})'
cnt: 4, '((T([128, 64, 64, 64], th.float16), T([128, 64, 64, 64], th.float16)), {})'
cnt: 8, '((T([512, 256, 144], th.float16), T([512, 256, 144], th.float16)), {})'
cnt: 16, '((T([512, 64, 192], th.float16), T([512, 64, 192], th.float16)), {})'
cnt: 12, '((T([512, 16, 240], th.float16), T([512, 16, 240], th.float16)), {})'
cnt: 1, '((T([128, 160, 8, 8], th.float16, (20480, 64, 8, 1)), T([128, 160, 8, 8], th.float16)), {})'
cnt: 1, '((T([128, 128, 16, 16], th.float16, (65536, 256, 16, 1)), T([128, 128, 16, 16], th.float16)), {})'
cnt: 1, '((T([128, 96, 32, 32], th.float16, (196608, 1024, 32, 1)), T([128, 96, 32, 32], th.float16)), {})'
Operator: aten.addmm.default
cnt: 2, '((T([432], th.float16), T([131072, 144], th.float16), T([144, 432], th.float16, (1, 144))), {})'
cnt: 2, '((T([144], th.float16), T([131072, 144], th.float16), T([144, 144], th.float16, (1, 144))), {})'
cnt: 2, '((T([288], th.float16), T([131072, 144], th.float16), T([144, 288], th.float16, (1, 144))), {})'
cnt: 2, '((T([144], th.float16), T([131072, 288], th.float16), T([288, 144], th.float16, (1, 288))), {})'
cnt: 4, '((T([576], th.float16), T([32768, 192], th.float16), T([192, 576], th.float16, (1, 192))), {})'
cnt: 4, '((T([192], th.float16), T([32768, 192], th.float16), T([192, 192], th.float16, (1, 192))), {})'
cnt: 4, '((T([384], th.float16), T([32768, 192], th.float16), T([192, 384], th.float16, (1, 192))), {})'
cnt: 4, '((T([192], th.float16), T([32768, 384], th.float16), T([384, 192], th.float16, (1, 384))), {})'
cnt: 3, '((T([720], th.float16), T([8192, 240], th.float16), T([240, 720], th.float16, (1, 240))), {})'
cnt: 3, '((T([240], th.float16), T([8192, 240], th.float16), T([240, 240], th.float16, (1, 240))), {})'
cnt: 3, '((T([480], th.float16), T([8192, 240], th.float16), T([240, 480], th.float16, (1, 240))), {})'
cnt: 3, '((T([240], th.float16), T([8192, 480], th.float16), T([480, 240], th.float16, (1, 480))), {})'
cnt: 1, '((T([1000], th.float16), T([128, 640], th.float16), T([640, 1000], th.float16, (1, 640))), {})'
Operator: aten.bmm.default
cnt: 2, '((T([2048, 256, 36], th.float16), T([2048, 36, 256], th.float16)), {})'
cnt: 2, '((T([2048, 256, 256], th.float16), T([2048, 256, 36], th.float16)), {})'
cnt: 4, '((T([2048, 64, 48], th.float16), T([2048, 48, 64], th.float16)), {})'
cnt: 4, '((T([2048, 64, 64], th.float16), T([2048, 64, 48], th.float16)), {})'
cnt: 3, '((T([2048, 16, 60], th.float16), T([2048, 60, 16], th.float16)), {})'
cnt: 3, '((T([2048, 16, 16], th.float16), T([2048, 16, 60], th.float16)), {})'
cnt: 3, '((T([2048, 16, 16], th.float16, (256, 1, 16)), T([2048, 16, 60], th.float16)), {})'
cnt: 3, '((T([2048, 16, 60], th.float16), T([2048, 60, 16], th.float16, (960, 1, 60))), {})'
cnt: 3, '((T([2048, 60, 16], th.float16, (960, 1, 60)), T([2048, 16, 16], th.float16)), {})'
cnt: 3, '((T([2048, 16, 16], th.float16), T([2048, 16, 60], th.float16, (960, 1, 16))), {})'
cnt: 4, '((T([2048, 64, 64], th.float16, (4096, 1, 64)), T([2048, 64, 48], th.float16)), {})'
cnt: 4, '((T([2048, 64, 48], th.float16), T([2048, 48, 64], th.float16, (3072, 1, 48))), {})'
cnt: 4, '((T([2048, 48, 64], th.float16, (3072, 1, 48)), T([2048, 64, 64], th.float16)), {})'
cnt: 4, '((T([2048, 64, 64], th.float16), T([2048, 64, 48], th.float16, (3072, 1, 64))), {})'
cnt: 2, '((T([2048, 256, 256], th.float16, (65536, 1, 256)), T([2048, 256, 36], th.float16)), {})'
cnt: 2, '((T([2048, 256, 36], th.float16), T([2048, 36, 256], th.float16, (9216, 1, 36))), {})'
cnt: 2, '((T([2048, 36, 256], th.float16, (9216, 1, 36)), T([2048, 256, 256], th.float16)), {})'
cnt: 2, '((T([2048, 256, 256], th.float16), T([2048, 256, 36], th.float16, (9216, 1, 256))), {})'
Operator: aten.cat.default
cnt: 1, '(([T([128, 96, 32, 32], th.float16), T([128, 96, 32, 32], th.float16)], 1), {})'
cnt: 1, '(([T([128, 128, 16, 16], th.float16), T([128, 128, 16, 16], th.float16)], 1), {})'
cnt: 1, '(([T([128, 160, 8, 8], th.float16), T([128, 160, 8, 8], th.float16)], 1), {})'
Operator: aten.clone.default
cnt: 1, '((T([128, 3, 256, 256], th.float16),), {})'
cnt: 1, '((T([128, 16, 128, 128], th.float16),), {})'
cnt: 2, '((T([128, 64, 128, 128], th.float16),), {})'
cnt: 1, '((T([128, 128, 128, 128], th.float16),), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16),), {})'
cnt: 5, '((T([128, 256, 64, 64], th.float16),), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16),), {})'
cnt: 3, '((T([128, 96, 32, 32], th.float16),), {})'
cnt: 1, '((T([128, 384, 32, 32], th.float16),), {})'
cnt: 1, '((T([128, 384, 16, 16], th.float16),), {})'
cnt: 3, '((T([128, 128, 16, 16], th.float16),), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16),), {})'
cnt: 1, '((T([128, 512, 8, 8], th.float16),), {})'
cnt: 3, '((T([128, 160, 8, 8], th.float16),), {})'
cnt: 1, '((T([128, 640, 8, 8], th.float16),), {})'
Operator: aten.convolution.default
cnt: 1, '((T([128, 3, 256, 256], th.float16), T([16, 3, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 16, 128, 128], th.float16), T([64, 16, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 64, 128, 128], th.float16), T([64, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 64), {})'
cnt: 1, '((T([128, 64, 128, 128], th.float16), T([32, 64, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 32, 128, 128], th.float16), T([128, 32, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 128, 128, 128], th.float16), T([128, 1, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 128), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16), T([64, 128, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([128, 64, 64, 64], th.float16), T([256, 64, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([128, 256, 64, 64], th.float16), T([256, 1, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 256), {})'
cnt: 2, '((T([128, 256, 64, 64], th.float16), T([64, 256, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 256, 64, 64], th.float16), T([256, 1, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 256), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16), T([96, 256, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 96, 32, 32], th.float16), T([96, 96, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 96, 32, 32], th.float16), T([144, 96, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 144, 32, 32], th.float16), T([96, 144, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 192, 32, 32], th.float16), T([96, 192, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 96, 32, 32], th.float16), T([384, 96, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 384, 32, 32], th.float16), T([384, 1, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 384), {})'
cnt: 1, '((T([128, 384, 16, 16], th.float16), T([128, 384, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 128, 16, 16], th.float16), T([128, 128, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 128, 16, 16], th.float16), T([192, 128, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 192, 16, 16], th.float16), T([128, 192, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 256, 16, 16], th.float16), T([128, 256, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 128, 16, 16], th.float16), T([512, 128, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16), T([512, 1, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 512), {})'
cnt: 1, '((T([128, 512, 8, 8], th.float16), T([160, 512, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 160, 8, 8], th.float16), T([160, 160, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 160, 8, 8], th.float16), T([240, 160, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 240, 8, 8], th.float16), T([160, 240, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 320, 8, 8], th.float16), T([160, 320, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 160, 8, 8], th.float16), T([640, 160, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
Operator: aten.convolution_backward.default
cnt: 1, '((T([128, 640, 8, 8], th.float16), T([128, 160, 8, 8], th.float16), T([640, 160, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 160, 8, 8], th.float16), T([128, 320, 8, 8], th.float16), T([160, 320, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 160, 8, 8], th.float16), T([128, 240, 8, 8], th.float16), T([160, 240, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 240, 8, 8], th.float16), T([128, 160, 8, 8], th.float16), T([240, 160, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 160, 8, 8], th.float16), T([128, 160, 8, 8], th.float16), T([160, 160, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 160, 8, 8], th.float16), T([128, 512, 8, 8], th.float16), T([160, 512, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 512, 8, 8], th.float16), T([128, 512, 16, 16], th.float16), T([512, 1, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 512, [True, True, False]), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16), T([128, 128, 16, 16], th.float16), T([512, 128, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 128, 16, 16], th.float16), T([128, 256, 16, 16], th.float16), T([128, 256, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 128, 16, 16], th.float16), T([128, 192, 16, 16], th.float16), T([128, 192, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 192, 16, 16], th.float16), T([128, 128, 16, 16], th.float16), T([192, 128, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 128, 16, 16], th.float16), T([128, 128, 16, 16], th.float16), T([128, 128, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 128, 16, 16], th.float16), T([128, 384, 16, 16], th.float16), T([128, 384, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 384, 16, 16], th.float16), T([128, 384, 32, 32], th.float16), T([384, 1, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 384, [True, True, False]), {})'
cnt: 1, '((T([128, 384, 32, 32], th.float16), T([128, 96, 32, 32], th.float16), T([384, 96, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 96, 32, 32], th.float16), T([128, 192, 32, 32], th.float16), T([96, 192, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 96, 32, 32], th.float16), T([128, 144, 32, 32], th.float16), T([96, 144, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 144, 32, 32], th.float16), T([128, 96, 32, 32], th.float16), T([144, 96, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 96, 32, 32], th.float16), T([128, 96, 32, 32], th.float16), T([96, 96, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 96, 32, 32], th.float16), T([128, 256, 32, 32], th.float16), T([96, 256, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16), T([128, 256, 64, 64], th.float16), T([256, 1, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 256, [True, True, False]), {})'
cnt: 3, '((T([128, 256, 64, 64], th.float16), T([128, 64, 64, 64], th.float16), T([256, 64, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([128, 64, 64, 64], th.float16), T([128, 256, 64, 64], th.float16), T([64, 256, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([128, 256, 64, 64], th.float16), T([128, 256, 64, 64], th.float16), T([256, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 256, [True, True, False]), {})'
cnt: 1, '((T([128, 64, 64, 64], th.float16), T([128, 128, 64, 64], th.float16), T([64, 128, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16), T([128, 128, 128, 128], th.float16), T([128, 1, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 128, [True, True, False]), {})'
cnt: 1, '((T([128, 128, 128, 128], th.float16), T([128, 32, 128, 128], th.float16), T([128, 32, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 32, 128, 128], th.float16), T([128, 64, 128, 128], th.float16), T([32, 64, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 64, 128, 128], th.float16), T([128, 64, 128, 128], th.float16), T([64, 1, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 64, [True, True, False]), {})'
cnt: 1, '((T([128, 64, 128, 128], th.float16), T([128, 16, 128, 128], th.float16), T([64, 16, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 16, 128, 128], th.float16), T([128, 3, 256, 256], th.float16), T([16, 3, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]), {})'
Operator: aten.copy_.default
cnt: 1, '((T([128, 3, 256, 256], th.float16), T([128, 3, 256, 256], th.float16)), {})'
Operator: aten.div.Scalar
cnt: 1, '((T([128, 640, 8, 8], th.float16, (640, 1, 0, 0)), 64), {})'
Operator: aten.mean.dim
cnt: 1, '((T([128, 640, 8, 8], th.float16), [-1, -2], True), {})'
Operator: aten.mm.default
cnt: 1, '((T([128, 1000], th.float16), T([1000, 640], th.float16)), {})'
cnt: 1, '((T([1000, 128], th.float16, (1, 1000)), T([128, 640], th.float16)), {})'
cnt: 3, '((T([8192, 240], th.float16), T([240, 480], th.float16)), {})'
cnt: 3, '((T([240, 8192], th.float16, (1, 240)), T([8192, 480], th.float16)), {})'
cnt: 3, '((T([8192, 480], th.float16), T([480, 240], th.float16)), {})'
cnt: 3, '((T([480, 8192], th.float16, (1, 480)), T([8192, 240], th.float16)), {})'
cnt: 3, '((T([8192, 240], th.float16), T([240, 240], th.float16)), {})'
cnt: 3, '((T([240, 8192], th.float16, (1, 240)), T([8192, 240], th.float16)), {})'
cnt: 3, '((T([8192, 720], th.float16), T([720, 240], th.float16)), {})'
cnt: 3, '((T([720, 8192], th.float16, (1, 720)), T([8192, 240], th.float16)), {})'
cnt: 4, '((T([32768, 192], th.float16), T([192, 384], th.float16)), {})'
cnt: 4, '((T([192, 32768], th.float16, (1, 192)), T([32768, 384], th.float16)), {})'
cnt: 4, '((T([32768, 384], th.float16), T([384, 192], th.float16)), {})'
cnt: 4, '((T([384, 32768], th.float16, (1, 384)), T([32768, 192], th.float16)), {})'
cnt: 4, '((T([32768, 192], th.float16), T([192, 192], th.float16)), {})'
cnt: 4, '((T([192, 32768], th.float16, (1, 192)), T([32768, 192], th.float16)), {})'
cnt: 4, '((T([32768, 576], th.float16), T([576, 192], th.float16)), {})'
cnt: 4, '((T([576, 32768], th.float16, (1, 576)), T([32768, 192], th.float16)), {})'
cnt: 2, '((T([131072, 144], th.float16), T([144, 288], th.float16)), {})'
cnt: 2, '((T([144, 131072], th.float16, (1, 144)), T([131072, 288], th.float16)), {})'
cnt: 2, '((T([131072, 288], th.float16), T([288, 144], th.float16)), {})'
cnt: 2, '((T([288, 131072], th.float16, (1, 288)), T([131072, 144], th.float16)), {})'
cnt: 2, '((T([131072, 144], th.float16), T([144, 144], th.float16)), {})'
cnt: 2, '((T([144, 131072], th.float16, (1, 144)), T([131072, 144], th.float16)), {})'
cnt: 2, '((T([131072, 432], th.float16), T([432, 144], th.float16)), {})'
cnt: 2, '((T([432, 131072], th.float16, (1, 432)), T([131072, 144], th.float16)), {})'
Operator: aten.mul.Tensor
cnt: 4, '((T([512, 4, 256, 256], th.float16), 0.16666666666666666), {})'
cnt: 8, '((T([512, 4, 64, 64], th.float16), 0.14433756729740643), {})'
cnt: 6, '((T([512, 4, 16, 16], th.float16), 0.12909944487358058), {})'
Operator: aten.native_batch_norm.default
cnt: 1, '((T([128, 16, 128, 128], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float16), True, 0.1, 1e-05), {})'
cnt: 2, '((T([128, 64, 128, 128], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 32, 128, 128], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 128, 128, 128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 64, 64, 64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), True, 0.1, 1e-05), {})'
cnt: 5, '((T([128, 256, 64, 64], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), True, 0.1, 1e-05), {})'
cnt: 4, '((T([128, 96, 32, 32], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 384, 32, 32], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 384, 16, 16], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float16), True, 0.1, 1e-05), {})'
cnt: 4, '((T([128, 128, 16, 16], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 512, 8, 8], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), True, 0.1, 1e-05), {})'
cnt: 4, '((T([128, 160, 8, 8], th.float16), T([160], th.float16), T([160], th.float16), T([160], th.float16), T([160], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 640, 8, 8], th.float16), T([640], th.float16), T([640], th.float16), T([640], th.float16), T([640], th.float16), True, 0.1, 1e-05), {})'
Operator: aten.native_batch_norm_backward.default
cnt: 1, '((T([128, 640, 8, 8], th.float16), T([128, 640, 8, 8], th.float16), T([640], th.float16), T([640], th.float16), T([640], th.float16), T([640], th.float32), T([640], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 4, '((T([128, 160, 8, 8], th.float16), T([128, 160, 8, 8], th.float16), T([160], th.float16), T([160], th.float16), T([160], th.float16), T([160], th.float32), T([160], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 512, 8, 8], th.float16), T([128, 512, 8, 8], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float32), T([512], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16), T([128, 512, 16, 16], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float32), T([512], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 4, '((T([128, 128, 16, 16], th.float16), T([128, 128, 16, 16], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float32), T([128], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 384, 16, 16], th.float16), T([128, 384, 16, 16], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float32), T([384], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 384, 32, 32], th.float16), T([128, 384, 32, 32], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float16), T([384], th.float32), T([384], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 4, '((T([128, 96, 32, 32], th.float16), T([128, 96, 32, 32], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float16), T([96], th.float32), T([96], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16), T([128, 256, 32, 32], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float32), T([256], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 5, '((T([128, 256, 64, 64], th.float16), T([128, 256, 64, 64], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float32), T([256], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 3, '((T([128, 64, 64, 64], th.float16), T([128, 64, 64, 64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float32), T([64], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16), T([128, 128, 64, 64], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float32), T([128], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 128, 128, 128], th.float16), T([128, 128, 128, 128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float32), T([128], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 32, 128, 128], th.float16), T([128, 32, 128, 128], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float32), T([32], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 2, '((T([128, 64, 128, 128], th.float16), T([128, 64, 128, 128], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float32), T([64], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 16, 128, 128], th.float16), T([128, 16, 128, 128], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float16), T([16], th.float32), T([16], th.float32), True, 1e-05, [True, True, True]), {})'
Operator: aten.native_layer_norm.default
cnt: 5, '((T([512, 256, 144], th.float16), [144], T([144], th.float16), T([144], th.float16), 1e-05), {})'
cnt: 9, '((T([512, 64, 192], th.float16), [192], T([192], th.float16), T([192], th.float16), 1e-05), {})'
cnt: 7, '((T([512, 16, 240], th.float16), [240], T([240], th.float16), T([240], th.float16), 1e-05), {})'
Operator: aten.native_layer_norm_backward.default
cnt: 7, '((T([512, 16, 240], th.float16), T([512, 16, 240], th.float16), [240], T([512, 16, 1], th.float32), T([512, 16, 1], th.float32), T([240], th.float16), T([240], th.float16), [True, True, True]), {})'
cnt: 9, '((T([512, 64, 192], th.float16), T([512, 64, 192], th.float16), [192], T([512, 64, 1], th.float32), T([512, 64, 1], th.float32), T([192], th.float16), T([192], th.float16), [True, True, True]), {})'
cnt: 5, '((T([512, 256, 144], th.float16), T([512, 256, 144], th.float16), [144], T([512, 256, 1], th.float32), T([512, 256, 1], th.float32), T([144], th.float16), T([144], th.float16), [True, True, True]), {})'
Operator: aten.nll_loss_backward.default
cnt: 1, '((T([], th.float16), T([128, 1000], th.float16), T([128], th.int64), None, 1, -100, T([], th.float16)), {})'
Operator: aten.nll_loss_forward.default
cnt: 1, '((T([128, 1000], th.float16), T([128], th.int64), None, 1, -100), {})'
Operator: aten.silu.default
cnt: 2, '((T([512, 256, 288], th.float16),), {})'
cnt: 4, '((T([512, 64, 384], th.float16),), {})'
cnt: 3, '((T([512, 16, 480], th.float16),), {})'
Operator: aten.silu_.default
cnt: 1, '((T([128, 16, 128, 128], th.float16),), {})'
cnt: 2, '((T([128, 64, 128, 128], th.float16),), {})'
cnt: 1, '((T([128, 128, 128, 128], th.float16),), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16),), {})'
cnt: 5, '((T([128, 256, 64, 64], th.float16),), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16),), {})'
cnt: 3, '((T([128, 96, 32, 32], th.float16),), {})'
cnt: 1, '((T([128, 384, 32, 32], th.float16),), {})'
cnt: 1, '((T([128, 384, 16, 16], th.float16),), {})'
cnt: 3, '((T([128, 128, 16, 16], th.float16),), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16),), {})'
cnt: 1, '((T([128, 512, 8, 8], th.float16),), {})'
cnt: 3, '((T([128, 160, 8, 8], th.float16),), {})'
cnt: 1, '((T([128, 640, 8, 8], th.float16),), {})'
Operator: aten.silu_backward.default
cnt: 1, '((T([128, 640, 8, 8], th.float16), T([128, 640, 8, 8], th.float16)), {})'
cnt: 2, '((T([128, 160, 8, 8], th.float16), T([128, 160, 8, 8], th.float16)), {})'
cnt: 1, '((T([128, 160, 8, 8], th.float16, (20480, 64, 8, 1)), T([128, 160, 8, 8], th.float16)), {})'
cnt: 3, '((T([512, 16, 480], th.float16), T([512, 16, 480], th.float16)), {})'
cnt: 1, '((T([128, 512, 8, 8], th.float16), T([128, 512, 8, 8], th.float16)), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16), T([128, 512, 16, 16], th.float16)), {})'
cnt: 2, '((T([128, 128, 16, 16], th.float16), T([128, 128, 16, 16], th.float16)), {})'
cnt: 1, '((T([128, 128, 16, 16], th.float16, (65536, 256, 16, 1)), T([128, 128, 16, 16], th.float16)), {})'
cnt: 4, '((T([512, 64, 384], th.float16), T([512, 64, 384], th.float16)), {})'
cnt: 1, '((T([128, 384, 16, 16], th.float16), T([128, 384, 16, 16], th.float16)), {})'
cnt: 1, '((T([128, 384, 32, 32], th.float16), T([128, 384, 32, 32], th.float16)), {})'
cnt: 2, '((T([128, 96, 32, 32], th.float16), T([128, 96, 32, 32], th.float16)), {})'
cnt: 1, '((T([128, 96, 32, 32], th.float16, (196608, 1024, 32, 1)), T([128, 96, 32, 32], th.float16)), {})'
cnt: 2, '((T([512, 256, 288], th.float16), T([512, 256, 288], th.float16)), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16), T([128, 256, 32, 32], th.float16)), {})'
cnt: 5, '((T([128, 256, 64, 64], th.float16), T([128, 256, 64, 64], th.float16)), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16), T([128, 128, 64, 64], th.float16)), {})'
cnt: 1, '((T([128, 128, 128, 128], th.float16), T([128, 128, 128, 128], th.float16)), {})'
cnt: 2, '((T([128, 64, 128, 128], th.float16), T([128, 64, 128, 128], th.float16)), {})'
cnt: 1, '((T([128, 16, 128, 128], th.float16), T([128, 16, 128, 128], th.float16)), {})'
Operator: aten.stack.default
cnt: 3, '(([T([512, 4, 16, 60], th.float16), T([512, 4, 16, 60], th.float16, (3840, 960, 1, 16)), T([512, 4, 16, 60], th.float16)],), {})'
cnt: 4, '(([T([512, 4, 64, 48], th.float16), T([512, 4, 64, 48], th.float16, (12288, 3072, 1, 64)), T([512, 4, 64, 48], th.float16)],), {})'
cnt: 2, '(([T([512, 4, 256, 36], th.float16), T([512, 4, 256, 36], th.float16, (36864, 9216, 1, 256)), T([512, 4, 256, 36], th.float16)],), {})'
Operator: aten.sum.SymInt
cnt: 1, '((T([128, 1000], th.float16), [0], True), {})'
cnt: 6, '((T([8192, 240], th.float16), [0], True), {})'
cnt: 3, '((T([8192, 480], th.float16), [0], True), {})'
cnt: 3, '((T([8192, 720], th.float16), [0], True), {})'
cnt: 8, '((T([32768, 192], th.float16), [0], True), {})'
cnt: 4, '((T([32768, 384], th.float16), [0], True), {})'
cnt: 4, '((T([32768, 576], th.float16), [0], True), {})'
cnt: 4, '((T([131072, 144], th.float16), [0], True), {})'
cnt: 2, '((T([131072, 288], th.float16), [0], True), {})'
cnt: 2, '((T([131072, 432], th.float16), [0], True), {})'
Operator: aten.unbind.int
cnt: 2, '((T([3, 512, 4, 256, 36], th.float16, (144, 110592, 36, 432, 1)),), {})'
cnt: 4, '((T([3, 512, 4, 64, 48], th.float16, (192, 36864, 48, 576, 1)),), {})'
cnt: 3, '((T([3, 512, 4, 16, 60], th.float16, (240, 11520, 60, 720, 1)),), {})'
