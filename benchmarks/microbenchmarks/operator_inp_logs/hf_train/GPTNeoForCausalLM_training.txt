Operator: aten._log_softmax.default
cnt: 1, '((T([2044, 50257], th.float32), 1, False), {})'
Operator: aten._log_softmax_backward_data.default
cnt: 1, '((T([2044, 50257], th.float32), T([2044, 50257], th.float32), 1, th.float32), {})'
Operator: aten._softmax.default
cnt: 24, '((T([4, 16, 512, 512], th.float32), -1, False), {})'
Operator: aten._softmax_backward_data.default
cnt: 24, '((T([4, 16, 512, 512], th.float32), T([4, 16, 512, 512], th.float32), -1, th.float32), {})'
Operator: aten._to_copy.default
cnt: 48, "((T([4, 16, 512, 128], th.float16, (1048576, 128, 2048, 1)),), {'dtype': th.float32})"
cnt: 24, "((T([1, 1, 512, 512], th.uint8, (4194304, 4194304, 2048, 1)),), {'dtype': th.bool})"
cnt: 24, "((T([], th.float16),), {'dtype': th.float32})"
cnt: 24, "((T([4, 16, 512, 512], th.float32),), {'dtype': th.float16})"
cnt: 1, "((T([4, 512, 50257], th.float16),), {'dtype': th.float32})"
cnt: 1, "((T([4, 512, 50257], th.float32),), {'dtype': th.float16})"
cnt: 1, "((T([], th.float32),), {'dtype': th.float16})"
cnt: 1, '((T([], th.float16),), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float32, \'layout\': th.strided})'
cnt: 1, '((T([4, 512, 50257], th.float32),), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided})'
cnt: 24, '((T([4, 16, 512, 512], th.float16),), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float32, \'layout\': th.strided})'
cnt: 24, '((T([4, 16, 512, 128], th.float32, (1048576, 65536, 1, 512)),), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided})'
cnt: 24, '((T([4, 16, 512, 128], th.float32),), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided})'
Operator: aten._unsafe_view.default
cnt: 72, '((T([2048, 2048], th.float16), [4, 512, 2048]), {})'
cnt: 24, '((T([4, 16, 512, 128], th.float32), [64, 512, 128]), {})'
cnt: 24, '((T([4, 16, 128, 512], th.float32), [64, 128, 512]), {})'
cnt: 24, '((T([64, 512, 512], th.float32), [4, 16, 512, 512]), {})'
cnt: 48, '((T([4, 16, 512, 128], th.float16), [64, 512, 128]), {})'
cnt: 24, '((T([64, 512, 128], th.float16), [4, 16, 512, 128]), {})'
cnt: 1, '((T([2048, 50257], th.float16), [4, 512, 50257]), {})'
cnt: 48, '((T([4, 512, 16, 128], th.float16), [4, 512, 2048]), {})'
cnt: 24, '((T([4, 512, 2048], th.float16), [2048, 2048]), {})'
Operator: aten.add.Tensor
cnt: 1, '((T([4, 512, 2048], th.float16), T([1, 512, 2048], th.float16)), {})'
cnt: 144, '((T([4, 512, 2048], th.float16), T([4, 512, 2048], th.float16)), {})'
cnt: 72, '((T([4, 512, 8192], th.float16), T([4, 512, 8192], th.float16)), {})'
cnt: 24, '((T([4, 512, 8192], th.float16), 1.0), {})'
cnt: 1, '((T([50257, 2048], th.float16), T([50257, 2048], th.float16)), {})'
Operator: aten.addmm.default
cnt: 24, '((T([2048], th.float16), T([2048, 2048], th.float16), T([2048, 2048], th.float16, (1, 2048))), {})'
cnt: 24, '((T([8192], th.float16), T([2048, 2048], th.float16), T([2048, 8192], th.float16, (1, 2048))), {})'
cnt: 24, '((T([2048], th.float16), T([2048, 8192], th.float16), T([8192, 2048], th.float16, (1, 8192))), {})'
Operator: aten.bmm.default
cnt: 24, '((T([64, 512, 128], th.float32), T([64, 128, 512], th.float32)), {})'
cnt: 24, '((T([64, 512, 512], th.float16), T([64, 512, 128], th.float16)), {})'
cnt: 24, '((T([64, 512, 512], th.float16, (262144, 1, 512)), T([64, 512, 128], th.float16)), {})'
cnt: 24, '((T([64, 512, 128], th.float16), T([64, 128, 512], th.float16, (65536, 1, 128))), {})'
cnt: 24, '((T([64, 128, 512], th.float32, (65536, 1, 128)), T([64, 512, 512], th.float32)), {})'
cnt: 24, '((T([64, 512, 512], th.float32), T([64, 512, 128], th.float32, (65536, 1, 512))), {})'
Operator: aten.clone.default
cnt: 2, '((T([4, 512], th.int64),), {})'
Operator: aten.copy_.default
cnt: 2, '((T([4, 512], th.int64), T([4, 512], th.int64)), {})'
Operator: aten.embedding.default
cnt: 1, '((T([50257, 2048], th.float16), T([4, 512], th.int64)), {})'
cnt: 1, '((T([2048, 2048], th.float16), T([1, 512], th.int64)), {})'
Operator: aten.embedding_dense_backward.default
cnt: 1, '((T([1, 512, 2048], th.float16), T([1, 512], th.int64), 2048, -1, False), {})'
cnt: 1, '((T([4, 512, 2048], th.float16), T([4, 512], th.int64), 50257, -1, False), {})'
Operator: aten.mm.default
cnt: 72, '((T([2048, 2048], th.float16), T([2048, 2048], th.float16, (1, 2048))), {})'
cnt: 1, '((T([2048, 2048], th.float16), T([2048, 50257], th.float16, (1, 2048))), {})'
cnt: 1, '((T([50257, 2048], th.float16, (1, 50257)), T([2048, 2048], th.float16)), {})'
cnt: 1, '((T([2048, 50257], th.float16), T([50257, 2048], th.float16)), {})'
cnt: 24, '((T([2048, 2048], th.float16), T([2048, 8192], th.float16)), {})'
cnt: 24, '((T([2048, 2048], th.float16, (1, 2048)), T([2048, 8192], th.float16)), {})'
cnt: 24, '((T([2048, 8192], th.float16), T([8192, 2048], th.float16)), {})'
cnt: 24, '((T([8192, 2048], th.float16, (1, 8192)), T([2048, 2048], th.float16)), {})'
cnt: 96, '((T([2048, 2048], th.float16), T([2048, 2048], th.float16)), {})'
cnt: 96, '((T([2048, 2048], th.float16, (1, 2048)), T([2048, 2048], th.float16)), {})'
Operator: aten.mul.Scalar
cnt: 24, '((T([4, 512, 8192], th.float16), 3.0), {})'
Operator: aten.mul.Tensor
cnt: 48, '((T([4, 512, 8192], th.float16), 0.5), {})'
cnt: 48, '((T([4, 512, 8192], th.float16), 0.044715), {})'
cnt: 48, '((T([4, 512, 8192], th.float16), 0.7978845608028654), {})'
cnt: 96, '((T([4, 512, 8192], th.float16), T([4, 512, 8192], th.float16)), {})'
Operator: aten.native_layer_norm.default
cnt: 49, '((T([4, 512, 2048], th.float16), [2048], T([2048], th.float16), T([2048], th.float16), 1e-05), {})'
Operator: aten.native_layer_norm_backward.default
cnt: 49, '((T([4, 512, 2048], th.float16), T([4, 512, 2048], th.float16), [2048], T([4, 512, 1], th.float32), T([4, 512, 1], th.float32), T([2048], th.float16), T([2048], th.float16), [True, True, True]), {})'
Operator: aten.nll_loss_backward.default
cnt: 1, '((T([], th.float32), T([2044, 50257], th.float32), T([2044], th.int64), None, 1, -100, T([], th.float32)), {})'
Operator: aten.nll_loss_forward.default
cnt: 1, '((T([2044, 50257], th.float32), T([2044], th.int64), None, 1, -100), {})'
Operator: aten.pow.Tensor_Scalar
cnt: 24, '((T([4, 512, 8192], th.float16), 3.0), {})'
cnt: 24, '((T([4, 512, 8192], th.float16), 2.0), {})'
Operator: aten.slice_backward.default
cnt: 1, '((T([4, 511, 50257], th.float32), [4, 511, 50257], 2, 0, 9223372036854775807, 1), {})'
cnt: 1, '((T([4, 511, 50257], th.float32), [4, 512, 50257], 1, 0, -1, 1), {})'
Operator: aten.sum.SymInt
cnt: 48, '((T([2048, 2048], th.float16), [0], True), {})'
cnt: 24, '((T([2048, 8192], th.float16), [0], True), {})'
cnt: 1, '((T([4, 512, 2048], th.float16), [0], True), {})'
Operator: aten.tanh.default
cnt: 24, '((T([4, 512, 8192], th.float16),), {})'
Operator: aten.tanh_backward.default
cnt: 24, '((T([4, 512, 8192], th.float16), T([4, 512, 8192], th.float16)), {})'
Operator: aten.where.self
cnt: 48, '((T([1, 1, 512, 512], th.bool), T([4, 16, 512, 512], th.float32), T([], th.float32)), {})'
