Operator: aten._softmax.default
cnt: 18, '((T([48, 512, 512], th.float16), -1, False), {})'
Operator: aten._softmax_backward_data.default
cnt: 18, '((T([48, 512, 512], th.float16), T([48, 512, 512], th.float16), -1, th.float16), {})'
Operator: aten._to_copy.default
cnt: 1, "((T([512, 512], th.float32),), {'dtype': th.float16})"
cnt: 1, '((T([4, 1, 512, 512], th.float16, (0, 262144, 512, 1)),), {\'device\': "th.device(\'cuda\')", \'dtype\': th.float16, \'layout\': th.strided})'
Operator: aten._unsafe_view.default
cnt: 54, '((T([4, 512, 12, 64], th.float16), [4, 512, 768]), {})'
cnt: 1, '((T([2048, 50265], th.float16), [4, 512, 50265]), {})'
cnt: 18, '((T([4, 12, 512, 64], th.float16), [48, 512, 64]), {})'
cnt: 18, '((T([4, 512, 768], th.float16), [2048, 768]), {})'
Operator: aten.add.Tensor
cnt: 2, '((T([512], th.int64), 2), {})'
cnt: 2, '((T([4, 512, 768], th.float16), T([512, 768], th.float16)), {})'
cnt: 95, '((T([4, 512, 768], th.float16), T([4, 512, 768], th.float16)), {})'
cnt: 1, '((T([512], th.int64), 1), {})'
cnt: 6, '((T([4, 12, 512, 512], th.float16), T([4, 1, 512, 512], th.float16)), {})'
cnt: 1, '((T([4, 512, 50265], th.float16), T([1, 50265], th.float16)), {})'
cnt: 2, '((T([50265, 768], th.float16), T([50265, 768], th.float16)), {})'
Operator: aten.addmm.default
cnt: 72, '((T([768], th.float16), T([2048, 768], th.float16), T([768, 768], th.float16, (1, 768))), {})'
cnt: 12, '((T([3072], th.float16), T([2048, 768], th.float16), T([768, 3072], th.float16, (1, 768))), {})'
cnt: 12, '((T([768], th.float16), T([2048, 3072], th.float16), T([3072, 768], th.float16, (1, 3072))), {})'
Operator: aten.any.default
cnt: 12, '((T([4, 512, 768], th.bool),), {})'
Operator: aten.bmm.default
cnt: 36, '((T([48, 512, 64], th.float16), T([48, 64, 512], th.float16, (32768, 1, 64))), {})'
cnt: 36, '((T([48, 512, 512], th.float16), T([48, 512, 64], th.float16)), {})'
cnt: 18, '((T([48, 512, 512], th.float16, (262144, 1, 512)), T([48, 512, 64], th.float16)), {})'
cnt: 18, '((T([48, 64, 512], th.float16, (32768, 1, 64)), T([48, 512, 512], th.float16)), {})'
Operator: aten.clone.default
cnt: 2, '((T([4, 512], th.int64),), {})'
Operator: aten.copy_.default
cnt: 2, '((T([4, 512], th.int64), T([4, 512], th.int64)), {})'
Operator: aten.div.Tensor
cnt: 2, '((T([], th.float16), 102942720), {})'
Operator: aten.embedding.default
cnt: 2, '((T([50265, 768], th.float16), T([4, 512], th.int64), 1), {})'
cnt: 2, '((T([1026, 768], th.float16), T([512], th.int64)), {})'
Operator: aten.embedding_dense_backward.default
cnt: 2, '((T([512, 768], th.float16), T([512], th.int64), 1026, -1, False), {})'
cnt: 2, '((T([4, 512, 768], th.float16), T([4, 512], th.int64), 50265, 1, False), {})'
Operator: aten.gelu.default
cnt: 12, '((T([4, 512, 3072], th.float16),), {})'
Operator: aten.gelu_backward.default
cnt: 12, '((T([4, 512, 3072], th.float16), T([4, 512, 3072], th.float16)), {})'
Operator: aten.isinf.default
cnt: 6, '((T([4, 512, 768], th.float16),), {})'
Operator: aten.isnan.default
cnt: 6, '((T([4, 512, 768], th.float16),), {})'
Operator: aten.lt.Tensor
cnt: 1, '((T([512], th.int64), T([512, 1], th.int64)), {})'
Operator: aten.masked_fill_.Scalar
cnt: 1, '((T([512, 512], th.float32), T([512, 512], th.bool), 0), {})'
Operator: aten.mm.default
cnt: 1, '((T([2048, 768], th.float16), T([768, 50265], th.float16, (1, 768))), {})'
cnt: 1, '((T([50265, 2048], th.float16, (0, 0)), T([2048, 768], th.float16)), {})'
cnt: 1, '((T([2048, 50265], th.float16, (0, 0)), T([50265, 768], th.float16)), {})'
cnt: 12, '((T([2048, 768], th.float16), T([768, 3072], th.float16)), {})'
cnt: 12, '((T([768, 2048], th.float16, (1, 768)), T([2048, 3072], th.float16)), {})'
cnt: 12, '((T([2048, 3072], th.float16), T([3072, 768], th.float16)), {})'
cnt: 12, '((T([3072, 2048], th.float16, (1, 3072)), T([2048, 768], th.float16)), {})'
cnt: 72, '((T([2048, 768], th.float16), T([768, 768], th.float16)), {})'
cnt: 72, '((T([768, 2048], th.float16, (1, 768)), T([2048, 768], th.float16)), {})'
Operator: aten.mul.Tensor
cnt: 4, '((T([4, 512, 768], th.float16), 1.0), {})'
cnt: 36, '((T([4, 512, 768], th.float16), 0.125), {})'
Operator: aten.native_layer_norm.default
cnt: 32, '((T([4, 512, 768], th.float16), [768], T([768], th.float16), T([768], th.float16), 1e-05), {})'
Operator: aten.native_layer_norm_backward.default
cnt: 32, '((T([4, 512, 768], th.float16), T([4, 512, 768], th.float16), [768], T([4, 512, 1], th.float32), T([4, 512, 1], th.float32), T([768], th.float16), T([768], th.float16), [True, True, True]), {})'
Operator: aten.sum.SymInt
cnt: 84, '((T([2048, 768], th.float16), [0], True), {})'
cnt: 12, '((T([2048, 3072], th.float16), [0], True), {})'
cnt: 2, '((T([4, 512, 768], th.float16), [0], True), {})'
Operator: aten.sum.default
cnt: 1, '((T([4, 512, 50265], th.float16),), {})'
