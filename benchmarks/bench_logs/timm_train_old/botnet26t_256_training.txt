Operator: aten._log_softmax.default
cnt: 1, '((T([128, 1000], th.float16), 1, False), {})'
Operator: aten._log_softmax_backward_data.default
cnt: 1, '((T([128, 1000], th.float16), T([128, 1000], th.float16), 1, th.float16), {})'
Operator: aten._reshape_alias.default
cnt: 3, '((T([512, 256, 64], th.float16, (16384, 1, 256)), [512, 256, 64], [16384, 1, 256]), {})'
cnt: 2, '((T([512, 64, 256], th.float16), [512, 64, 256], [16384, 256, 1]), {})'
cnt: 1, '((T([512, 256, 64], th.float16, (16384, 1, 256)), [512, 16, 16, 64], [16384, 16, 1, 256]), {})'
cnt: 4, '((T([512, 16, 16, 31], th.float16), [8192, 16, 31], [496, 31, 1]), {})'
cnt: 4, '((T([8192, 16, 32], th.float16), [8192, 512], [512, 1]), {})'
cnt: 4, '((T([8192, 527], th.float16), [8192, 17, 31], [527, 31, 1]), {})'
cnt: 4, '((T([8192, 16, 16], th.float16, (527, 31, 1)), [512, 16, 1, 16, 16], [8432, 527, 496, 31, 1]), {})'
cnt: 6, '((T([512, 256, 256], th.float16), [512, 256, 256], [65536, 256, 1]), {})'
cnt: 3, '((T([512, 256, 128], th.float16, (32768, 1, 256)), [512, 256, 128], [32768, 1, 256]), {})'
cnt: 2, '((T([512, 128, 256], th.float16), [512, 128, 256], [32768, 256, 1]), {})'
cnt: 1, '((T([512, 256, 128], th.float16, (32768, 1, 256)), [512, 16, 16, 128], [32768, 16, 1, 256]), {})'
cnt: 3, '((T([512, 64, 128], th.float16, (8192, 1, 64)), [512, 64, 128], [8192, 1, 64]), {})'
cnt: 2, '((T([512, 128, 64], th.float16), [512, 128, 64], [8192, 64, 1]), {})'
cnt: 1, '((T([512, 64, 128], th.float16, (8192, 1, 64)), [512, 8, 8, 128], [8192, 8, 1, 64]), {})'
cnt: 2, '((T([512, 8, 8, 15], th.float16), [4096, 8, 15], [120, 15, 1]), {})'
cnt: 2, '((T([4096, 8, 16], th.float16), [4096, 128], [128, 1]), {})'
cnt: 2, '((T([4096, 135], th.float16), [4096, 9, 15], [135, 15, 1]), {})'
cnt: 2, '((T([4096, 8, 8], th.float16, (135, 15, 1)), [512, 8, 1, 8, 8], [1080, 135, 120, 15, 1]), {})'
cnt: 3, '((T([512, 64, 64], th.float16), [512, 64, 64], [4096, 64, 1]), {})'
cnt: 1, '((T([128, 2048, 1, 1], th.float16), [128, 2048], [2048, 1]), {})'
cnt: 1, '((T([128, 2048], th.float16), [128, 2048, 1, 1], [2048, 1, 1, 1]), {})'
cnt: 1, '((T([128, 512, 8, 8], th.float16), [512, 128, 64], [8192, 64, 1]), {})'
cnt: 2, '((T([512, 64, 128], th.float16), [512, 64, 128], [8192, 128, 1]), {})'
cnt: 1, '((T([512, 64, 64], th.float16), [512, 8, 8, 8, 8], [4096, 512, 64, 8, 1]), {})'
cnt: 2, '((T([512, 8, 1, 8, 8], th.float16), [4096, 8, 8], [64, 8, 1]), {})'
cnt: 2, '((T([4096, 9, 15], th.float16), [4096, 135], [135, 1]), {})'
cnt: 2, '((T([4096, 128], th.float16), [4096, 8, 16], [128, 16, 1]), {})'
cnt: 2, '((T([4096, 8, 15], th.float16), [512, 8, 8, 15], [960, 120, 15, 1]), {})'
cnt: 2, '((T([512, 8, 8, 15], th.float16), [32768, 15], [15, 1]), {})'
cnt: 2, '((T([32768, 128], th.float16), [512, 8, 8, 128], [8192, 1024, 128, 1]), {})'
cnt: 1, '((T([512, 128, 64], th.float16), [128, 512, 8, 8], [32768, 64, 8, 1]), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16), [512, 128, 256], [32768, 256, 1]), {})'
cnt: 2, '((T([512, 256, 128], th.float16), [512, 256, 128], [32768, 128, 1]), {})'
cnt: 2, '((T([512, 256, 256], th.float16), [512, 16, 16, 16, 16], [65536, 4096, 256, 16, 1]), {})'
cnt: 4, '((T([512, 16, 1, 16, 16], th.float16), [8192, 16, 16], [256, 16, 1]), {})'
cnt: 4, '((T([8192, 17, 31], th.float16), [8192, 527], [527, 1]), {})'
cnt: 4, '((T([8192, 512], th.float16), [8192, 16, 32], [512, 32, 1]), {})'
cnt: 4, '((T([8192, 16, 31], th.float16), [512, 16, 16, 31], [7936, 496, 31, 1]), {})'
cnt: 4, '((T([512, 16, 16, 31], th.float16), [131072, 31], [31, 1]), {})'
cnt: 2, '((T([131072, 128], th.float16), [512, 16, 16, 128], [32768, 2048, 128, 1]), {})'
cnt: 1, '((T([512, 128, 256], th.float16), [128, 512, 16, 16], [131072, 256, 16, 1]), {})'
cnt: 1, '((T([128, 256, 16, 16], th.float16), [512, 64, 256], [16384, 256, 1]), {})'
cnt: 2, '((T([512, 256, 64], th.float16), [512, 256, 64], [16384, 64, 1]), {})'
cnt: 2, '((T([131072, 64], th.float16), [512, 16, 16, 64], [16384, 1024, 64, 1]), {})'
cnt: 1, '((T([512, 64, 256], th.float16), [128, 256, 16, 16], [65536, 256, 16, 1]), {})'
Operator: aten._softmax.default
cnt: 2, '((T([512, 256, 256], th.float16), -1, False), {})'
cnt: 1, '((T([512, 64, 64], th.float16), -1, False), {})'
Operator: aten._softmax_backward_data.default
cnt: 1, '((T([512, 64, 64], th.float16), T([512, 64, 64], th.float16), -1, th.float16), {})'
cnt: 2, '((T([512, 256, 256], th.float16), T([512, 256, 256], th.float16), -1, th.float16), {})'
Operator: aten._unsafe_view.default
cnt: 3, '((T([128, 256, 16, 16], th.float16), [512, 64, 256]), {})'
cnt: 2, '((T([512, 256, 256], th.float16), [512, 256, 256]), {})'
cnt: 2, '((T([512, 16, 16, 64], th.float16), [131072, 64]), {})'
cnt: 4, '((T([131072, 31], th.float16), [512, 16, 16, 31]), {})'
cnt: 2, '((T([512, 16, 16, 16, 16], th.float16), [512, 256, 256]), {})'
cnt: 1, '((T([512, 256, 64], th.float16), [512, 256, 64]), {})'
cnt: 3, '((T([512, 64, 256], th.float16), [128, 256, 16, 16]), {})'
cnt: 3, '((T([128, 512, 16, 16], th.float16), [512, 128, 256]), {})'
cnt: 2, '((T([512, 16, 16, 128], th.float16), [131072, 128]), {})'
cnt: 1, '((T([512, 256, 128], th.float16), [512, 256, 128]), {})'
cnt: 3, '((T([512, 128, 256], th.float16), [128, 512, 16, 16]), {})'
cnt: 3, '((T([128, 512, 8, 8], th.float16), [512, 128, 64]), {})'
cnt: 1, '((T([512, 64, 64], th.float16), [512, 64, 64]), {})'
cnt: 2, '((T([512, 8, 8, 128], th.float16), [32768, 128]), {})'
cnt: 2, '((T([32768, 15], th.float16), [512, 8, 8, 15]), {})'
cnt: 1, '((T([512, 8, 8, 8, 8], th.float16), [512, 64, 64]), {})'
cnt: 1, '((T([512, 64, 128], th.float16), [512, 64, 128]), {})'
cnt: 3, '((T([512, 128, 64], th.float16), [128, 512, 8, 8]), {})'
cnt: 1, '((T([512, 8, 8, 128], th.float16), [512, 64, 128]), {})'
cnt: 1, '((T([512, 16, 16, 128], th.float16), [512, 256, 128]), {})'
cnt: 1, '((T([512, 16, 16, 64], th.float16), [512, 256, 64]), {})'
Operator: aten.add.Tensor
cnt: 31, '((T([], th.int64), 1), {})'
cnt: 4, '((T([128, 256, 64, 64], th.float16), T([128, 256, 64, 64], th.float16)), {})'
cnt: 4, '((T([128, 512, 32, 32], th.float16), T([128, 512, 32, 32], th.float16)), {})'
cnt: 4, '((T([128, 1024, 16, 16], th.float16), T([128, 1024, 16, 16], th.float16)), {})'
cnt: 2, '((T([512, 16, 16, 16, 16], th.float16, (8432, 31, 527, 1, 0)), T([512, 16, 16, 16, 16], th.float16, (8432, 527, 31, 0, 1))), {})'
cnt: 2, '((T([512, 256, 256], th.float16), T([512, 256, 256], th.float16)), {})'
cnt: 3, '((T([128, 2048, 8, 8], th.float16), T([128, 2048, 8, 8], th.float16)), {})'
cnt: 1, '((T([512, 8, 8, 8, 8], th.float16, (1080, 15, 135, 1, 0)), T([512, 8, 8, 8, 8], th.float16, (1080, 135, 15, 0, 1))), {})'
cnt: 1, '((T([512, 64, 64], th.float16), T([512, 64, 64], th.float16)), {})'
cnt: 1, '((T([512, 8, 8, 128], th.float16, (8192, 128, 1024, 1)), T([512, 8, 8, 128], th.float16)), {})'
cnt: 1, '((T([512, 64, 128], th.float16), T([512, 64, 128], th.float16)), {})'
cnt: 1, '((T([512, 16, 16, 128], th.float16, (32768, 128, 2048, 1)), T([512, 16, 16, 128], th.float16)), {})'
cnt: 1, '((T([512, 256, 128], th.float16), T([512, 256, 128], th.float16)), {})'
cnt: 1, '((T([512, 16, 16, 64], th.float16, (16384, 64, 1024, 1)), T([512, 16, 16, 64], th.float16)), {})'
cnt: 1, '((T([512, 256, 64], th.float16), T([512, 256, 64], th.float16)), {})'
cnt: 1, '((T([128, 64, 64, 64], th.float16), T([128, 64, 64, 64], th.float16)), {})'
Operator: aten.addmm.default
cnt: 1, '((T([1000], th.float16), T([128, 2048], th.float16), T([2048, 1000], th.float16, (1, 2048))), {})'
Operator: aten.as_strided.default
cnt: 1, '((T([25165855], th.float16), [128, 3, 256, 256], [196608, 65536, 256, 1], 0), {})'
Operator: aten.avg_pool2d.default
cnt: 1, '((T([128, 512, 16, 16], th.float16), [2, 2], [2, 2]), {})'
Operator: aten.avg_pool2d_backward.default
cnt: 1, '((T([128, 512, 8, 8], th.float16), T([128, 512, 16, 16], th.float16), [2, 2], [2, 2], [0, 0], False, True, None), {})'
Operator: aten.bmm.default
cnt: 2, '((T([512, 256, 64], th.float16, (16384, 1, 256)), T([512, 64, 256], th.float16)), {})'
cnt: 2, '((T([512, 256, 256], th.float16), T([512, 256, 64], th.float16, (16384, 1, 256))), {})'
cnt: 2, '((T([512, 256, 128], th.float16, (32768, 1, 256)), T([512, 128, 256], th.float16)), {})'
cnt: 2, '((T([512, 256, 256], th.float16), T([512, 256, 128], th.float16, (32768, 1, 256))), {})'
cnt: 2, '((T([512, 64, 128], th.float16, (8192, 1, 64)), T([512, 128, 64], th.float16)), {})'
cnt: 2, '((T([512, 64, 64], th.float16), T([512, 64, 128], th.float16, (8192, 1, 64))), {})'
cnt: 1, '((T([512, 64, 64], th.float16, (4096, 1, 64)), T([512, 64, 128], th.float16, (8192, 1, 64))), {})'
cnt: 1, '((T([512, 128, 64], th.float16), T([512, 64, 64], th.float16)), {})'
cnt: 1, '((T([512, 256, 256], th.float16, (65536, 1, 256)), T([512, 256, 128], th.float16, (32768, 1, 256))), {})'
cnt: 1, '((T([512, 128, 256], th.float16), T([512, 256, 256], th.float16)), {})'
cnt: 1, '((T([512, 256, 256], th.float16, (65536, 1, 256)), T([512, 256, 64], th.float16, (16384, 1, 256))), {})'
cnt: 1, '((T([512, 64, 256], th.float16), T([512, 256, 256], th.float16)), {})'
Operator: aten.cat.default
cnt: 1, '(([T([128, 512, 8, 8], th.float16), T([128, 512, 8, 8], th.float16), T([128, 512, 8, 8], th.float16)], 1), {})'
cnt: 1, '(([T([128, 512, 16, 16], th.float16), T([128, 512, 16, 16], th.float16), T([128, 512, 16, 16], th.float16)], 1), {})'
cnt: 1, '(([T([128, 256, 16, 16], th.float16), T([128, 256, 16, 16], th.float16), T([128, 256, 16, 16], th.float16)], 1), {})'
Operator: aten.clone.default
cnt: 1, '((T([128, 3, 256, 256], th.float16),), {})'
Operator: aten.constant_pad_nd.default
cnt: 4, '((T([8192, 16, 31], th.float16), [0, 1], 0.0), {})'
cnt: 4, '((T([8192, 512], th.float16), [0, 15], 0.0), {})'
cnt: 2, '((T([4096, 8, 15], th.float16), [0, 1], 0.0), {})'
cnt: 2, '((T([4096, 128], th.float16), [0, 7], 0.0), {})'
cnt: 2, '((T([4096, 135], th.float16), [0, -7]), {})'
cnt: 2, '((T([4096, 8, 16], th.float16), [0, -1]), {})'
cnt: 4, '((T([8192, 527], th.float16), [0, -15]), {})'
cnt: 4, '((T([8192, 16, 32], th.float16), [0, -1]), {})'
Operator: aten.convolution.default
cnt: 1, '((T([128, 3, 256, 256], th.float16), T([24, 3, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 24, 128, 128], th.float16), T([32, 24, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 32, 128, 128], th.float16), T([64, 32, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 64, 64, 64], th.float16), T([64, 64, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([128, 64, 64, 64], th.float16), T([64, 64, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 3, '((T([128, 64, 64, 64], th.float16), T([256, 64, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 256, 64, 64], th.float16), T([64, 256, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 256, 64, 64], th.float16), T([128, 256, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16), T([128, 128, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([128, 128, 32, 32], th.float16), T([512, 128, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 256, 64, 64], th.float16), T([512, 256, 1, 1], th.float16), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 512, 32, 32], th.float16), T([128, 512, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 128, 32, 32], th.float16), T([128, 128, 3, 3], th.float16), None, [1, 1], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 512, 32, 32], th.float16), T([256, 512, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16), T([256, 256, 3, 3], th.float16), None, [2, 2], [1, 1], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([128, 256, 16, 16], th.float16), T([1024, 256, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 512, 32, 32], th.float16), T([1024, 512, 1, 1], th.float16), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 1024, 16, 16], th.float16), T([256, 1024, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 256, 16, 16], th.float16), T([768, 256, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 1024, 16, 16], th.float16), T([512, 1024, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16), T([1536, 512, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 2, '((T([128, 512, 8, 8], th.float16), T([2048, 512, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 1024, 16, 16], th.float16), T([2048, 1024, 1, 1], th.float16), None, [2, 2], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 2048, 8, 8], th.float16), T([512, 2048, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
cnt: 1, '((T([128, 512, 8, 8], th.float16), T([1536, 512, 1, 1], th.float16), None, [1, 1], [0, 0], [1, 1], False, [0, 0], 1), {})'
Operator: aten.convolution_backward.default
cnt: 2, '((T([128, 2048, 8, 8], th.float16), T([128, 512, 8, 8], th.float16), T([2048, 512, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 1536, 8, 8], th.float16), T([128, 512, 8, 8], th.float16), T([1536, 512, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 512, 8, 8], th.float16), T([128, 2048, 8, 8], th.float16), T([512, 2048, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 2048, 8, 8], th.float16), T([128, 1024, 16, 16], th.float16), T([2048, 1024, 1, 1], th.float16), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 1536, 16, 16], th.float16), T([128, 512, 16, 16], th.float16), T([1536, 512, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16), T([128, 1024, 16, 16], th.float16), T([512, 1024, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([128, 1024, 16, 16], th.float16), T([128, 256, 16, 16], th.float16), T([1024, 256, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 768, 16, 16], th.float16), T([128, 256, 16, 16], th.float16), T([768, 256, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 256, 16, 16], th.float16), T([128, 1024, 16, 16], th.float16), T([256, 1024, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 1024, 16, 16], th.float16), T([128, 512, 32, 32], th.float16), T([1024, 512, 1, 1], th.float16), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 256, 16, 16], th.float16), T([128, 256, 32, 32], th.float16), T([256, 256, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16), T([128, 512, 32, 32], th.float16), T([256, 512, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([128, 512, 32, 32], th.float16), T([128, 128, 32, 32], th.float16), T([512, 128, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 128, 32, 32], th.float16), T([128, 128, 32, 32], th.float16), T([128, 128, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 128, 32, 32], th.float16), T([128, 512, 32, 32], th.float16), T([128, 512, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 512, 32, 32], th.float16), T([128, 256, 64, 64], th.float16), T([512, 256, 1, 1], th.float16), [0], [2, 2], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 128, 32, 32], th.float16), T([128, 128, 64, 64], th.float16), T([128, 128, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16), T([128, 256, 64, 64], th.float16), T([128, 256, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 3, '((T([128, 256, 64, 64], th.float16), T([128, 64, 64, 64], th.float16), T([256, 64, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 2, '((T([128, 64, 64, 64], th.float16), T([128, 64, 64, 64], th.float16), T([64, 64, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 64, 64, 64], th.float16), T([128, 256, 64, 64], th.float16), T([64, 256, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 64, 64, 64], th.float16), T([128, 64, 64, 64], th.float16), T([64, 64, 1, 1], th.float16), [0], [1, 1], [0, 0], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 64, 128, 128], th.float16), T([128, 32, 128, 128], th.float16), T([64, 32, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 32, 128, 128], th.float16), T([128, 24, 128, 128], th.float16), T([32, 24, 3, 3], th.float16), [0], [1, 1], [1, 1], [1, 1], False, [0, 0], 1, [True, True, False]), {})'
cnt: 1, '((T([128, 24, 128, 128], th.float16), T([128, 3, 256, 256], th.float16), T([24, 3, 3, 3], th.float16), [0], [2, 2], [1, 1], [1, 1], False, [0, 0], 1, [False, True, False]), {})'
Operator: aten.copy_.default
cnt: 1, '((T([128, 3, 256, 256], th.float16), T([128, 3, 256, 256], th.float16)), {})'
Operator: aten.detach.default
cnt: 1, '((T([1000], th.float16),), {})'
cnt: 1, '((T([1000, 2048], th.float16),), {})'
cnt: 6, '((T([2048], th.float16),), {})'
cnt: 2, '((T([2048, 512, 1, 1], th.float16),), {})'
cnt: 14, '((T([512], th.float16),), {})'
cnt: 2, '((T([15, 128], th.float16),), {})'
cnt: 2, '((T([1536, 512, 1, 1], th.float16),), {})'
cnt: 1, '((T([512, 2048, 1, 1], th.float16),), {})'
cnt: 1, '((T([2048, 1024, 1, 1], th.float16),), {})'
cnt: 2, '((T([31, 128], th.float16),), {})'
cnt: 1, '((T([512, 1024, 1, 1], th.float16),), {})'
cnt: 6, '((T([1024], th.float16),), {})'
cnt: 2, '((T([1024, 256, 1, 1], th.float16),), {})'
cnt: 14, '((T([256], th.float16),), {})'
cnt: 2, '((T([31, 64], th.float16),), {})'
cnt: 1, '((T([768, 256, 1, 1], th.float16),), {})'
cnt: 1, '((T([256, 1024, 1, 1], th.float16),), {})'
cnt: 1, '((T([1024, 512, 1, 1], th.float16),), {})'
cnt: 1, '((T([256, 256, 3, 3], th.float16),), {})'
cnt: 1, '((T([256, 512, 1, 1], th.float16),), {})'
cnt: 2, '((T([512, 128, 1, 1], th.float16),), {})'
cnt: 8, '((T([128], th.float16),), {})'
cnt: 2, '((T([128, 128, 3, 3], th.float16),), {})'
cnt: 1, '((T([128, 512, 1, 1], th.float16),), {})'
cnt: 1, '((T([512, 256, 1, 1], th.float16),), {})'
cnt: 1, '((T([128, 256, 1, 1], th.float16),), {})'
cnt: 3, '((T([256, 64, 1, 1], th.float16),), {})'
cnt: 10, '((T([64], th.float16),), {})'
cnt: 2, '((T([64, 64, 3, 3], th.float16),), {})'
cnt: 1, '((T([64, 256, 1, 1], th.float16),), {})'
cnt: 1, '((T([64, 64, 1, 1], th.float16),), {})'
cnt: 1, '((T([64, 32, 3, 3], th.float16),), {})'
cnt: 2, '((T([32], th.float16),), {})'
cnt: 1, '((T([32, 24, 3, 3], th.float16),), {})'
cnt: 2, '((T([24], th.float16),), {})'
cnt: 1, '((T([24, 3, 3, 3], th.float16),), {})'
Operator: aten.div.Scalar
cnt: 1, '((T([128, 2048, 8, 8], th.float16, (2048, 1, 0, 0)), 64), {})'
Operator: aten.expand.default
cnt: 2, '((T([512, 256, 64], th.float16, (16384, 1, 256)), [512, 256, 64]), {})'
cnt: 1, '((T([512, 64, 256], th.float16), [512, 64, 256]), {})'
cnt: 4, '((T([512, 16, 1, 16, 16], th.float16, (8432, 527, 496, 31, 1)), [-1, -1, 16, -1, -1]), {})'
cnt: 2, '((T([512, 256, 256], th.float16), [512, 256, 256]), {})'
cnt: 2, '((T([512, 256, 128], th.float16, (32768, 1, 256)), [512, 256, 128]), {})'
cnt: 1, '((T([512, 128, 256], th.float16), [512, 128, 256]), {})'
cnt: 2, '((T([512, 64, 128], th.float16, (8192, 1, 64)), [512, 64, 128]), {})'
cnt: 1, '((T([512, 128, 64], th.float16), [512, 128, 64]), {})'
cnt: 2, '((T([512, 8, 1, 8, 8], th.float16, (1080, 135, 120, 15, 1)), [-1, -1, 8, -1, -1]), {})'
cnt: 1, '((T([512, 64, 64], th.float16), [512, 64, 64]), {})'
cnt: 1, '((T([128, 2048, 1, 1], th.float16), [128, 2048, 8, 8]), {})'
Operator: aten.max_pool2d_with_indices.default
cnt: 1, '((T([128, 64, 128, 128], th.float16), [3, 3], [2, 2], [1, 1]), {})'
Operator: aten.max_pool2d_with_indices_backward.default
cnt: 1, '((T([128, 64, 64, 64], th.float16), T([128, 64, 128, 128], th.float16), [3, 3], [2, 2], [1, 1], [1, 1], False, T([128, 64, 64, 64], th.int64)), {})'
Operator: aten.mean.dim
cnt: 1, '((T([128, 2048, 8, 8], th.float16), [-1, -2], True), {})'
Operator: aten.mm.default
cnt: 2, '((T([131072, 64], th.float16), T([64, 31], th.float16, (1, 64))), {})'
cnt: 2, '((T([131072, 128], th.float16), T([128, 31], th.float16, (1, 128))), {})'
cnt: 2, '((T([32768, 128], th.float16), T([128, 15], th.float16, (1, 128))), {})'
cnt: 1, '((T([128, 1000], th.float16), T([1000, 2048], th.float16)), {})'
cnt: 1, '((T([1000, 128], th.float16, (1, 1000)), T([128, 2048], th.float16)), {})'
cnt: 2, '((T([15, 32768], th.float16, (1, 15)), T([32768, 128], th.float16)), {})'
cnt: 2, '((T([32768, 15], th.float16), T([15, 128], th.float16)), {})'
cnt: 2, '((T([31, 131072], th.float16, (1, 31)), T([131072, 128], th.float16)), {})'
cnt: 2, '((T([131072, 31], th.float16), T([31, 128], th.float16)), {})'
cnt: 2, '((T([31, 131072], th.float16, (1, 31)), T([131072, 64], th.float16)), {})'
cnt: 2, '((T([131072, 31], th.float16), T([31, 64], th.float16)), {})'
Operator: aten.mul.Tensor
cnt: 2, '((T([512, 256, 256], th.float16), 0.125), {})'
cnt: 2, '((T([512, 256, 256], th.float16), 0.08838834764831845), {})'
cnt: 2, '((T([512, 64, 64], th.float16), 0.08838834764831845), {})'
Operator: aten.native_batch_norm.default
cnt: 1, '((T([128, 24, 128, 128], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 32, 128, 128], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 64, 128, 128], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), True, 0.1, 1e-05), {})'
cnt: 4, '((T([128, 64, 64, 64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 256, 64, 64], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 128, 32, 32], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 512, 32, 32], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 256, 16, 16], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 1024, 16, 16], th.float16), T([1024], th.float16), T([1024], th.float16), T([1024], th.float16), T([1024], th.float16), True, 0.1, 1e-05), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 512, 8, 8], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), True, 0.1, 1e-05), {})'
cnt: 3, '((T([128, 2048, 8, 8], th.float16), T([2048], th.float16), T([2048], th.float16), T([2048], th.float16), T([2048], th.float16), True, 0.1, 1e-05), {})'
Operator: aten.native_batch_norm_backward.default
cnt: 3, '((T([128, 2048, 8, 8], th.float16), T([128, 2048, 8, 8], th.float16), T([2048], th.float16), T([2048], th.float16), T([2048], th.float16), T([2048], th.float32), T([2048], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 3, '((T([128, 512, 8, 8], th.float16), T([128, 512, 8, 8], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float32), T([512], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16), T([128, 512, 16, 16], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float32), T([512], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 3, '((T([128, 1024, 16, 16], th.float16), T([128, 1024, 16, 16], th.float16), T([1024], th.float16), T([1024], th.float16), T([1024], th.float16), T([1024], th.float32), T([1024], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 3, '((T([128, 256, 16, 16], th.float16), T([128, 256, 16, 16], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float32), T([256], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16), T([128, 256, 32, 32], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float32), T([256], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 3, '((T([128, 512, 32, 32], th.float16), T([128, 512, 32, 32], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float16), T([512], th.float32), T([512], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 3, '((T([128, 128, 32, 32], th.float16), T([128, 128, 32, 32], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float32), T([128], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16), T([128, 128, 64, 64], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float16), T([128], th.float32), T([128], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 3, '((T([128, 256, 64, 64], th.float16), T([128, 256, 64, 64], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float16), T([256], th.float32), T([256], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 4, '((T([128, 64, 64, 64], th.float16), T([128, 64, 64, 64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float32), T([64], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 64, 128, 128], th.float16), T([128, 64, 128, 128], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float16), T([64], th.float32), T([64], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 32, 128, 128], th.float16), T([128, 32, 128, 128], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float16), T([32], th.float32), T([32], th.float32), True, 1e-05, [True, True, True]), {})'
cnt: 1, '((T([128, 24, 128, 128], th.float16), T([128, 24, 128, 128], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float16), T([24], th.float32), T([24], th.float32), True, 1e-05, [True, True, True]), {})'
Operator: aten.nll_loss_backward.default
cnt: 1, '((T([], th.float16), T([128, 1000], th.float16), T([128], th.int64), None, 1, -100, T([], th.float16)), {})'
Operator: aten.nll_loss_forward.default
cnt: 1, '((T([128, 1000], th.float16), T([128], th.int64), None, 1, -100), {})'
Operator: aten.permute.default
cnt: 2, '((T([512, 16, 16, 16, 16], th.float16, (8432, 527, 0, 31, 1)), [0, 1, 3, 2, 4]), {})'
cnt: 2, '((T([512, 16, 16, 16, 16], th.float16, (8432, 527, 0, 31, 1)), [0, 3, 1, 4, 2]), {})'
cnt: 1, '((T([512, 8, 8, 8, 8], th.float16, (1080, 135, 0, 15, 1)), [0, 1, 3, 2, 4]), {})'
cnt: 1, '((T([512, 8, 8, 8, 8], th.float16, (1080, 135, 0, 15, 1)), [0, 3, 1, 4, 2]), {})'
cnt: 1, '((T([512, 8, 8, 8, 8], th.float16), [0, 2, 4, 1, 3]), {})'
cnt: 1, '((T([512, 8, 8, 8, 8], th.float16), [0, 1, 3, 2, 4]), {})'
cnt: 2, '((T([512, 16, 16, 16, 16], th.float16), [0, 2, 4, 1, 3]), {})'
cnt: 2, '((T([512, 16, 16, 16, 16], th.float16), [0, 1, 3, 2, 4]), {})'
Operator: aten.relu_.default
cnt: 1, '((T([128, 24, 128, 128], th.float16),), {})'
cnt: 1, '((T([128, 32, 128, 128], th.float16),), {})'
cnt: 1, '((T([128, 64, 128, 128], th.float16),), {})'
cnt: 4, '((T([128, 64, 64, 64], th.float16),), {})'
cnt: 2, '((T([128, 256, 64, 64], th.float16),), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16),), {})'
cnt: 3, '((T([128, 128, 32, 32], th.float16),), {})'
cnt: 2, '((T([128, 512, 32, 32], th.float16),), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16),), {})'
cnt: 3, '((T([128, 256, 16, 16], th.float16),), {})'
cnt: 2, '((T([128, 1024, 16, 16], th.float16),), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16),), {})'
cnt: 3, '((T([128, 512, 8, 8], th.float16),), {})'
cnt: 2, '((T([128, 2048, 8, 8], th.float16),), {})'
Operator: aten.slice.Tensor
cnt: 4, '((T([8192, 17, 31], th.float16), 0, 0, 9223372036854775807), {})'
cnt: 4, '((T([8192, 17, 31], th.float16), 1, 0, 16), {})'
cnt: 4, '((T([8192, 16, 31], th.float16, (527, 31, 1)), 2, 15, 9223372036854775807), {})'
cnt: 2, '((T([4096, 9, 15], th.float16), 0, 0, 9223372036854775807), {})'
cnt: 2, '((T([4096, 9, 15], th.float16), 1, 0, 8), {})'
cnt: 2, '((T([4096, 8, 15], th.float16, (135, 15, 1)), 2, 7, 9223372036854775807), {})'
Operator: aten.slice_backward.default
cnt: 2, '((T([4096, 8, 8], th.float16), [4096, 8, 15], 2, 7, 9223372036854775807, 1), {})'
cnt: 2, '((T([4096, 8, 15], th.float16), [4096, 9, 15], 1, 0, 8, 1), {})'
cnt: 2, '((T([4096, 9, 15], th.float16), [4096, 9, 15], 0, 0, 9223372036854775807, 1), {})'
cnt: 4, '((T([8192, 16, 16], th.float16), [8192, 16, 31], 2, 15, 9223372036854775807, 1), {})'
cnt: 4, '((T([8192, 16, 31], th.float16), [8192, 17, 31], 1, 0, 16, 1), {})'
cnt: 4, '((T([8192, 17, 31], th.float16), [8192, 17, 31], 0, 0, 9223372036854775807, 1), {})'
Operator: aten.split_with_sizes.default
cnt: 1, '((T([128, 768, 16, 16], th.float16), [256, 256, 256], 1), {})'
cnt: 1, '((T([128, 1536, 16, 16], th.float16), [512, 512, 512], 1), {})'
cnt: 1, '((T([128, 1536, 8, 8], th.float16), [512, 512, 512], 1), {})'
Operator: aten.sum.SymInt
cnt: 1, '((T([128, 1000], th.float16), [0], True), {})'
cnt: 1, '((T([512, 8, 8, 8, 8], th.float16, (4096, 64, 1, 512, 8)), [2], True), {})'
cnt: 1, '((T([512, 8, 8, 8, 8], th.float16, (4096, 512, 8, 64, 1)), [2], True), {})'
cnt: 2, '((T([512, 16, 16, 16, 16], th.float16, (65536, 256, 1, 4096, 16)), [2], True), {})'
cnt: 2, '((T([512, 16, 16, 16, 16], th.float16, (65536, 4096, 16, 256, 1)), [2], True), {})'
Operator: aten.t.default
cnt: 2, '((T([1000, 2048], th.float16),), {})'
cnt: 2, '((T([2048, 1000], th.float16, (1, 2048)),), {})'
cnt: 1, '((T([128, 1000], th.float16),), {})'
cnt: 2, '((T([32768, 15], th.float16),), {})'
cnt: 2, '((T([15, 128], th.float16),), {})'
cnt: 2, '((T([128, 15], th.float16, (1, 128)),), {})'
cnt: 4, '((T([131072, 31], th.float16),), {})'
cnt: 2, '((T([31, 128], th.float16),), {})'
cnt: 2, '((T([128, 31], th.float16, (1, 128)),), {})'
cnt: 2, '((T([31, 64], th.float16),), {})'
cnt: 2, '((T([64, 31], th.float16, (1, 64)),), {})'
Operator: aten.threshold_backward.default
cnt: 2, '((T([128, 2048, 8, 8], th.float16), T([128, 2048, 8, 8], th.float16), 0), {})'
cnt: 3, '((T([128, 512, 8, 8], th.float16), T([128, 512, 8, 8], th.float16), 0), {})'
cnt: 1, '((T([128, 512, 16, 16], th.float16), T([128, 512, 16, 16], th.float16), 0), {})'
cnt: 2, '((T([128, 1024, 16, 16], th.float16), T([128, 1024, 16, 16], th.float16), 0), {})'
cnt: 3, '((T([128, 256, 16, 16], th.float16), T([128, 256, 16, 16], th.float16), 0), {})'
cnt: 1, '((T([128, 256, 32, 32], th.float16), T([128, 256, 32, 32], th.float16), 0), {})'
cnt: 2, '((T([128, 512, 32, 32], th.float16), T([128, 512, 32, 32], th.float16), 0), {})'
cnt: 3, '((T([128, 128, 32, 32], th.float16), T([128, 128, 32, 32], th.float16), 0), {})'
cnt: 1, '((T([128, 128, 64, 64], th.float16), T([128, 128, 64, 64], th.float16), 0), {})'
cnt: 2, '((T([128, 256, 64, 64], th.float16), T([128, 256, 64, 64], th.float16), 0), {})'
cnt: 4, '((T([128, 64, 64, 64], th.float16), T([128, 64, 64, 64], th.float16), 0), {})'
cnt: 1, '((T([128, 64, 128, 128], th.float16), T([128, 64, 128, 128], th.float16), 0), {})'
cnt: 1, '((T([128, 32, 128, 128], th.float16), T([128, 32, 128, 128], th.float16), 0), {})'
cnt: 1, '((T([128, 24, 128, 128], th.float16), T([128, 24, 128, 128], th.float16), 0), {})'
Operator: aten.transpose.int
cnt: 3, '((T([512, 64, 256], th.float16), -1, -2), {})'
cnt: 2, '((T([31, 64], th.float16), -1, -2), {})'
cnt: 1, '((T([512, 16, 16, 64], th.float16, (16384, 16, 1, 256)), 1, 2), {})'
cnt: 3, '((T([512, 256, 64], th.float16), -1, -2), {})'
cnt: 3, '((T([512, 128, 256], th.float16), -1, -2), {})'
cnt: 2, '((T([31, 128], th.float16), -1, -2), {})'
cnt: 1, '((T([512, 16, 16, 128], th.float16, (32768, 16, 1, 256)), 1, 2), {})'
cnt: 3, '((T([512, 256, 128], th.float16), -1, -2), {})'
cnt: 3, '((T([512, 128, 64], th.float16), -1, -2), {})'
cnt: 2, '((T([15, 128], th.float16), -1, -2), {})'
cnt: 1, '((T([512, 8, 8, 128], th.float16, (8192, 8, 1, 64)), 1, 2), {})'
cnt: 3, '((T([512, 64, 128], th.float16), -1, -2), {})'
cnt: 1, '((T([512, 64, 64], th.float16), 1, 2), {})'
cnt: 2, '((T([512, 64, 128], th.float16, (8192, 1, 64)), 1, 2), {})'
cnt: 2, '((T([128, 15], th.float16, (1, 128)), -1, -2), {})'
cnt: 1, '((T([512, 8, 8, 128], th.float16), 1, 2), {})'
cnt: 1, '((T([512, 128, 64], th.float16), 1, 2), {})'
cnt: 2, '((T([512, 256, 256], th.float16), 1, 2), {})'
cnt: 2, '((T([512, 256, 128], th.float16, (32768, 1, 256)), 1, 2), {})'
cnt: 2, '((T([128, 31], th.float16, (1, 128)), -1, -2), {})'
cnt: 1, '((T([512, 16, 16, 128], th.float16), 1, 2), {})'
cnt: 1, '((T([512, 128, 256], th.float16), 1, 2), {})'
cnt: 2, '((T([512, 256, 64], th.float16, (16384, 1, 256)), 1, 2), {})'
cnt: 2, '((T([64, 31], th.float16, (1, 64)), -1, -2), {})'
cnt: 1, '((T([512, 16, 16, 64], th.float16), 1, 2), {})'
cnt: 1, '((T([512, 64, 256], th.float16), 1, 2), {})'
Operator: aten.view.SymInt
cnt: 1, '((T([1, 1000], th.float16), [1000]), {})'
